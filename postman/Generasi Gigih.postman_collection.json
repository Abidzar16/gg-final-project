{
	"info": {
		"_postman_id": "abd38943-5726-45c3-a0d3-daeec5089010",
		"name": "Generasi Gigih Final Project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Create New User Without Bio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"dummy_id1\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{username}}\",\n    \"email\": \"{{email}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Create New User Without Bio",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{username}}\",\n    \"email\": \"{{email}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}/users",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "76"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"KJ9dvQSAm2V\",\n    \"name\": \"abidzar\",\n    \"email\": \"abidzar@gmail.com\",\n    \"bio\": null\n}"
						}
					]
				},
				{
					"name": "Create New User with Bio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"dummy_id2\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{username}}\",\n    \"email\": \"{{email}}\",\n    \"bio\": \"{{bio}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Create New User with Bio",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"{{username}}\",\n    \"email\": \"{{email}}\",\n    \"bio\": \"{{bio}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}/users",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "92"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"uG8Z7-d5kWP\",\n    \"name\": \"abidzar\",\n    \"email\": \"abidzar@gmail.com\",\n    \"bio\": \"dummy bio #hashtag\"\n}"
						}
					]
				},
				{
					"name": "Create New User Bad Payload",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"xxxxxx\": \"xxxxxx\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Create New User Bad Payload",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"xxxxxx\": \"xxxxxx\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}/users",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								},
								{
									"key": "Content-Length",
									"value": "208837"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "thin"
								}
							],
							"cookie": [],
							"body": "<!DOCTYPE html>\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n        <title>KeyError at &#x2F;users</title>\n        <script type=\"text/javascript\">\n  //\n            <!--\n  function toggle(id) {\n    var pre  = document.getElementById(\"pre-\" + id);\n    var post = document.getElementById(\"post-\" + id);\n    var context = document.getElementById(\"context-\" + id);\n\n    if (pre.style.display == 'block') {\n      pre.style.display = 'none';\n      post.style.display = 'none';\n      context.style.background = \"none\";\n    } else {\n      pre.style.display = 'block';\n      post.style.display = 'block';\n      context.style.background = \"#fffed9\";\n    }\n  }\n\n  function toggleBacktrace(){\n    var bt = document.getElementById(\"backtrace\");\n    var toggler = document.getElementById(\"expando\");\n\n    if (bt.className == 'condensed') {\n      bt.className = 'expanded';\n      toggler.innerHTML = \"(condense)\";\n    } else {\n      bt.className = 'condensed';\n      toggler.innerHTML = \"(expand)\";\n    }\n  }\n  //-->\n  \n        </script>\n        <style type=\"text/css\" media=\"screen\">\n  *                   {margin: 0; padding: 0; border: 0; outline: 0;}\n  div.clear           {clear: both;}\n  body                {background: #EEEEEE; margin: 0; padding: 0;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',\n                       'Garuda';}\n  code                {font-family: 'Lucida Console', monospace;\n                       font-size: 12px;}\n  li                  {height: 18px;}\n  ul                  {list-style: none; margin: 0; padding: 0;}\n  ol:hover            {cursor: pointer;}\n  ol li               {white-space: pre;}\n  #explanation        {font-size: 12px; color: #666666;\n                       margin: 20px 0 0 100px;}\n/* WRAP */\n  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;\n                       padding: 30px 50px 20px 50px;\n                       border-left: 1px solid #DDDDDD;\n                       border-right: 1px solid #DDDDDD;}\n/* HEADER */\n  #header             {margin: 0 auto 25px auto;}\n  #header img         {float: left;}\n  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}\n  h1                  {margin: 0; font-size: 36px; color: #981919;}\n  h2                  {margin: 0; font-size: 22px; color: #333333;}\n  #header ul          {margin: 0; font-size: 12px; color: #666666;}\n  #header ul li strong{color: #444444;}\n  #header ul li       {display: inline; padding: 0 10px;}\n  #header ul li.first {padding-left: 0;}\n  #header ul li.last  {border: 0; padding-right: 0;}\n/* BODY */\n  #backtrace,\n  #get,\n  #post,\n  #cookies,\n  #rack               {width: 980px; margin: 0 auto 10px auto;}\n  p#nav               {float: right; font-size: 14px;}\n/* BACKTRACE */\n  a#expando           {float: left; padding-left: 5px; color: #666666;\n                      font-size: 14px; text-decoration: none; cursor: pointer;}\n  a#expando:hover     {text-decoration: underline;}\n  h3                  {float: left; width: 100px; margin-bottom: 10px;\n                       color: #981919; font-size: 14px; font-weight: bold;}\n  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}\n  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;\n                           font-size: 12px; color: #333333;}\n  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;\n                       border-bottom: 0;}\n  #backtrace ol       {width: 920px; margin-left: 50px;\n                       font: 10px 'Lucida Console', monospace; color: #666666;}\n  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;\n                       padding: 2px 0;}\n  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}\n  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;\n                       padding: 3px 0;}\n  #backtrace-ul .code {padding: 6px 0 4px 0;}\n  #backtrace.condensed .system,\n  #backtrace.condensed .framework {display:none;}\n/* REQUEST DATA */\n  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}\n  table.req           {width: 980px; text-align: left; font-size: 12px;\n                       color: #666666; padding: 0; border-spacing: 0;\n                       border: 1px solid #EEEEEE; border-bottom: 0;\n                       border-left: 0;\n                       clear:both}\n  table.req tr th     {padding: 2px 10px; font-weight: bold;\n                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n  table.req tr td     {padding: 2px 20px 2px 10px;\n                       border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n/* HIDE PRE/POST CODE AT START */\n  .pre-context,\n  .post-context       {display: none;}\n\n  table td.code       {width:750px}\n  table td.code div   {width:750px;overflow:hidden}\n</style>\n    </head>\n    <body>\n        <div id=\"wrap\">\n            <div id=\"header\">\n                <img src=\"/__sinatra__/500.png\" alt=\"application error\" height=\"161\" width=\"313\" />\n                <div id=\"summary\">\n                    <h1>\n                        <strong>KeyError</strong> at\n                        <strong>&#x2F;users\n          </strong>\n                    </h1>\n                    <h2>key not found: :name</h2>\n                    <ul>\n                        <li class=\"first\">\n                            <strong>file:</strong>\n                            <code>\n            user.rb</code>\n                        </li>\n                        <li>\n                            <strong>location:</strong>\n                            <code>fetch\n            </code>\n                        </li>\n                        <li class=\"last\">\n                            <strong>line:\n            </strong> 13\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"clear\"></div>\n            </div>\n            <div id=\"backtrace\" class='condensed'>\n                <h3>BACKTRACE</h3>\n                <p>\n                    <a href=\"#\" id=\"expando\"\n            onclick=\"toggleBacktrace(); return false\">(expand)</a>\n                </p>\n                <p id=\"nav\">\n                    <strong>JUMP TO:</strong>\n                    <a href=\"#get-info\">GET</a>\n                    <a href=\"#post-info\">POST</a>\n                    <a href=\"#cookie-info\">COOKIES</a>\n                    <a href=\"#env-info\">ENV</a>\n                </p>\n                <div class=\"clear\"></div>\n                <ul id=\"backtrace-ul\">\n                    <li class=\"frame-info app\">\n                        <code>&#x2F;home&#x2F;abidzar&#x2F;Desktop&#x2F;projects&#x2F;mvc-sinatra&#x2F;app&#x2F;models&#x2F;user.rb</code> in\n                        <code>\n                            <strong>fetch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"6\"\n                  class=\"pre-context\" id=\"pre-1\"\n                  onclick=\"toggle(1);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>class User\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_accessor :id, :name, :email, :bio\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_reader :errors\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(params)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @id = params.fetch(:id, Nanoid.generate(size:11))\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"13\" class=\"context\" id=\"1\"\n                  onclick=\"toggle(1);\">\n                            <li class=\"context-line\" id=\"context-1\">\n                                <code>      @name = params.fetch(:name)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"14\" class=\"post-context\"\n                  id=\"post-1\" onclick=\"toggle(1);\">\n                            <li class=\"post-context-line\">\n                                <code>      @email = params.fetch(:email)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @bio = params.fetch(:bio, nil)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @errors = []\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def self.fetch_all\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      sql = &quot;SELECT * INTO users;&quot;\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info app\">\n                        <code>&#x2F;home&#x2F;abidzar&#x2F;Desktop&#x2F;projects&#x2F;mvc-sinatra&#x2F;app&#x2F;models&#x2F;user.rb</code> in\n                        <code>\n                            <strong>initialize</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"6\"\n                  class=\"pre-context\" id=\"pre-2\"\n                  onclick=\"toggle(2);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>class User\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_accessor :id, :name, :email, :bio\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_reader :errors\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(params)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @id = params.fetch(:id, Nanoid.generate(size:11))\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"13\" class=\"context\" id=\"2\"\n                  onclick=\"toggle(2);\">\n                            <li class=\"context-line\" id=\"context-2\">\n                                <code>      @name = params.fetch(:name)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"14\" class=\"post-context\"\n                  id=\"post-2\" onclick=\"toggle(2);\">\n                            <li class=\"post-context-line\">\n                                <code>      @email = params.fetch(:email)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @bio = params.fetch(:bio, nil)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @errors = []\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def self.fetch_all\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      sql = &quot;SELECT * INTO users;&quot;\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info app\">\n                        <code>&#x2F;home&#x2F;abidzar&#x2F;Desktop&#x2F;projects&#x2F;mvc-sinatra&#x2F;app&#x2F;controllers&#x2F;user.rb</code> in\n                        <code>\n                            <strong>new</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"17\"\n                  class=\"pre-context\" id=\"pre-3\"\n                  onclick=\"toggle(3);\">\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    post &quot;&#x2F;users&quot; do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      params = JSON.parse(request.body.read, symbolize_names: true)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # puts params.class\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # puts &quot;I got some JSON: #{params.inspect}&quot;\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"24\" class=\"context\" id=\"3\"\n                  onclick=\"toggle(3);\">\n                            <li class=\"context-line\" id=\"context-3\">\n                                <code>      user = User.new(params)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"25\" class=\"post-context\"\n                  id=\"post-3\" onclick=\"toggle(3);\">\n                            <li class=\"post-context-line\">\n                                <code>      response = user.save\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      content_type :json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      status 200\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      body response.to_json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  \n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info app\">\n                        <code>&#x2F;home&#x2F;abidzar&#x2F;Desktop&#x2F;projects&#x2F;mvc-sinatra&#x2F;app&#x2F;controllers&#x2F;user.rb</code> in\n                        <code>\n                            <strong>block in &lt;class:UsersController&gt;</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"17\"\n                  class=\"pre-context\" id=\"pre-4\"\n                  onclick=\"toggle(4);\">\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    post &quot;&#x2F;users&quot; do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      params = JSON.parse(request.body.read, symbolize_names: true)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # puts params.class\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # puts &quot;I got some JSON: #{params.inspect}&quot;\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"24\" class=\"context\" id=\"4\"\n                  onclick=\"toggle(4);\">\n                            <li class=\"context-line\" id=\"context-4\">\n                                <code>      user = User.new(params)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"25\" class=\"post-context\"\n                  id=\"post-4\" onclick=\"toggle(4);\">\n                            <li class=\"post-context-line\">\n                                <code>      response = user.save\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      content_type :json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      status 200\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      body response.to_json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  \n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1668\"\n                  class=\"pre-context\" id=\"pre-5\"\n                  onclick=\"toggle(5);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        pattern                 = compile(path, route_mustermann_opts)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        method_name             = &quot;#{verb} #{path}&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unbound_method          = generate_method(method_name, &amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        conditions, @conditions = @conditions, []\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        wrapper                 = block.arity != 0 ?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call(*p) } :\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1675\" class=\"context\" id=\"5\"\n                  onclick=\"toggle(5);\">\n                            <li class=\"context-line\" id=\"context-5\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1676\" class=\"post-context\"\n                  id=\"post-5\" onclick=\"toggle(5);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [ pattern, conditions, wrapper ]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def compile(path, route_mustermann_opts = {})\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        Mustermann.new(path, **mustermann_opts.merge(route_mustermann_opts))\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in compile!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1668\"\n                  class=\"pre-context\" id=\"pre-6\"\n                  onclick=\"toggle(6);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        pattern                 = compile(path, route_mustermann_opts)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        method_name             = &quot;#{verb} #{path}&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unbound_method          = generate_method(method_name, &amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        conditions, @conditions = @conditions, []\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        wrapper                 = block.arity != 0 ?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call(*p) } :\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1675\" class=\"context\" id=\"6\"\n                  onclick=\"toggle(6);\">\n                            <li class=\"context-line\" id=\"context-6\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1676\" class=\"post-context\"\n                  id=\"post-6\" onclick=\"toggle(6);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [ pattern, conditions, wrapper ]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def compile(path, route_mustermann_opts = {})\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        Mustermann.new(path, **mustermann_opts.merge(route_mustermann_opts))\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block (3 levels) in route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1006\"\n                  class=\"pre-context\" id=\"pre-7\"\n                  onclick=\"toggle(7);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        routes.each do |pattern, conditions, block|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1013\" class=\"context\" id=\"7\"\n                  onclick=\"toggle(7);\">\n                            <li class=\"context-line\" id=\"context-7\">\n                                <code>            route_eval { block[*args] }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1014\" class=\"post-context\"\n                  id=\"post-7\" onclick=\"toggle(7);\">\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          # don&#x27;t wipe out pass_block in superclass\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          pass_block = returned_pass_block if returned_pass_block\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route_eval</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1025\"\n                  class=\"pre-context\" id=\"pre-8\"\n                  onclick=\"toggle(8);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      route_eval(&amp;pass_block) if pass_block\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      route_missing\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run a route block and throw :halt with the result.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route_eval\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1032\" class=\"context\" id=\"8\"\n                  onclick=\"toggle(8);\">\n                            <li class=\"context-line\" id=\"context-8\">\n                                <code>      throw :halt, yield</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1033\" class=\"post-context\"\n                  id=\"post-8\" onclick=\"toggle(8);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # If the current request matches pattern and conditions, fill params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # with keys and call the given block.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Revert params afterwards.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Returns pass block.\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block (2 levels) in route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1006\"\n                  class=\"pre-context\" id=\"pre-9\"\n                  onclick=\"toggle(9);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        routes.each do |pattern, conditions, block|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1013\" class=\"context\" id=\"9\"\n                  onclick=\"toggle(9);\">\n                            <li class=\"context-line\" id=\"context-9\">\n                                <code>            route_eval { block[*args] }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1014\" class=\"post-context\"\n                  id=\"post-9\" onclick=\"toggle(9);\">\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          # don&#x27;t wipe out pass_block in superclass\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          pass_block = returned_pass_block if returned_pass_block\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in process_route</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1054\"\n                  class=\"pre-context\" id=\"pre-10\"\n                  onclick=\"toggle(10);\">\n                            <li class=\"pre-context-line\">\n                                <code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values += params.values.flatten\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      catch(:pass) do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1061\" class=\"context\" id=\"10\"\n                  onclick=\"toggle(10);\">\n                            <li class=\"context-line\" id=\"context-10\">\n                                <code>        block ? block[self, values] : yield(self, values)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1062\" class=\"post-context\"\n                  id=\"post-10\" onclick=\"toggle(10);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env[&#x27;sinatra.error.params&#x27;] = @params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      raise\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      params ||= {}\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      params.each { |k, _| @params.delete(k) } unless @env[&#x27;sinatra.error.params&#x27;]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1052\"\n                  class=\"pre-context\" id=\"pre-11\"\n                  onclick=\"toggle(11);\">\n                            <li class=\"pre-context-line\">\n                                <code>        captures           = pattern.match(route).captures.map { |c| URI_INSTANCE.unescape(c) if c }\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values            += captures\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values += params.values.flatten\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1059\" class=\"context\" id=\"11\"\n                  onclick=\"toggle(11);\">\n                            <li class=\"context-line\" id=\"context-11\">\n                                <code>      catch(:pass) do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1060\" class=\"post-context\"\n                  id=\"post-11\" onclick=\"toggle(11);\">\n                            <li class=\"post-context-line\">\n                                <code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        block ? block[self, values] : yield(self, values)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env[&#x27;sinatra.error.params&#x27;] = @params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      raise\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>process_route</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1052\"\n                  class=\"pre-context\" id=\"pre-12\"\n                  onclick=\"toggle(12);\">\n                            <li class=\"pre-context-line\">\n                                <code>        captures           = pattern.match(route).captures.map { |c| URI_INSTANCE.unescape(c) if c }\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values            += captures\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values += params.values.flatten\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1059\" class=\"context\" id=\"12\"\n                  onclick=\"toggle(12);\">\n                            <li class=\"context-line\" id=\"context-12\">\n                                <code>      catch(:pass) do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1060\" class=\"post-context\"\n                  id=\"post-12\" onclick=\"toggle(12);\">\n                            <li class=\"post-context-line\">\n                                <code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        block ? block[self, values] : yield(self, values)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env[&#x27;sinatra.error.params&#x27;] = @params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      raise\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1004\"\n                  class=\"pre-context\" id=\"pre-13\"\n                  onclick=\"toggle(13);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run routes defined on the class and all superclasses.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        routes.each do |pattern, conditions, block|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1011\" class=\"context\" id=\"13\"\n                  onclick=\"toggle(13);\">\n                            <li class=\"context-line\" id=\"context-13\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1012\" class=\"post-context\"\n                  id=\"post-13\" onclick=\"toggle(13);\">\n                            <li class=\"post-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            route_eval { block[*args] }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          # don&#x27;t wipe out pass_block in superclass\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          pass_block = returned_pass_block if returned_pass_block\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>each</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1001\"\n                  class=\"pre-context\" id=\"pre-14\"\n                  onclick=\"toggle(14);\">\n                            <li class=\"pre-context-line\">\n                                <code>        yield result if block_given?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run routes defined on the class and all superclasses.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1008\" class=\"context\" id=\"14\"\n                  onclick=\"toggle(14);\">\n                            <li class=\"context-line\" id=\"context-14\">\n                                <code>        routes.each do |pattern, conditions, block|</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1009\" class=\"post-context\"\n                  id=\"post-14\" onclick=\"toggle(14);\">\n                            <li class=\"post-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            route_eval { block[*args] }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1001\"\n                  class=\"pre-context\" id=\"pre-15\"\n                  onclick=\"toggle(15);\">\n                            <li class=\"pre-context-line\">\n                                <code>        yield result if block_given?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run routes defined on the class and all superclasses.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1008\" class=\"context\" id=\"15\"\n                  onclick=\"toggle(15);\">\n                            <li class=\"context-line\" id=\"context-15\">\n                                <code>        routes.each do |pattern, conditions, block|</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1009\" class=\"post-context\"\n                  id=\"post-15\" onclick=\"toggle(15);\">\n                            <li class=\"post-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            route_eval { block[*args] }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in dispatch!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1122\"\n                  class=\"pre-context\" id=\"pre-16\"\n                  onclick=\"toggle(16);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      invoke do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        filter! :before do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @pinned_response = !@response[&#x27;Content-Type&#x27;].nil?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1129\" class=\"context\" id=\"16\"\n                  onclick=\"toggle(16);\">\n                            <li class=\"context-line\" id=\"context-16\">\n                                <code>        route!</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1130\" class=\"post-context\"\n                  id=\"post-16\" onclick=\"toggle(16);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      invoke { handle_exception!(boom) }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      begin\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-17\"\n                  onclick=\"toggle(17);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"17\"\n                  onclick=\"toggle(17);\">\n                            <li class=\"context-line\" id=\"context-17\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-17\" onclick=\"toggle(17);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-18\"\n                  onclick=\"toggle(18);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"18\"\n                  onclick=\"toggle(18);\">\n                            <li class=\"context-line\" id=\"context-18\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-18\" onclick=\"toggle(18);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-19\"\n                  onclick=\"toggle(19);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"19\"\n                  onclick=\"toggle(19);\">\n                            <li class=\"context-line\" id=\"context-19\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-19\" onclick=\"toggle(19);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>dispatch!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1117\"\n                  class=\"pre-context\" id=\"pre-20\"\n                  onclick=\"toggle(20);\">\n                            <li class=\"pre-context-line\">\n                                <code>      # Avoid passing frozen string in force_encoding\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params.merge!(@request.params).each do |key, val|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        next unless val.respond_to?(:force_encoding)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        val = val.dup if val.frozen?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @params[key] = force_encoding(val)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1124\" class=\"context\" id=\"20\"\n                  onclick=\"toggle(20);\">\n                            <li class=\"context-line\" id=\"context-20\">\n                                <code>      invoke do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1125\" class=\"post-context\"\n                  id=\"post-20\" onclick=\"toggle(20);\">\n                            <li class=\"post-context-line\">\n                                <code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        filter! :before do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          @pinned_response = !@response[&#x27;Content-Type&#x27;].nil?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        route!\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in call!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"932\"\n                  class=\"pre-context\" id=\"pre-21\"\n                  onclick=\"toggle(21);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      template_cache.clear if settings.reload_templates\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"939\" class=\"context\" id=\"21\"\n                  onclick=\"toggle(21);\">\n                            <li class=\"context-line\" id=\"context-21\">\n                                <code>      invoke { dispatch! }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"940\" class=\"post-context\"\n                  id=\"post-21\" onclick=\"toggle(21);\">\n                            <li class=\"post-context-line\">\n                                <code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unless @response[&#x27;Content-Type&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type body[0].content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        elsif default = settings.default_content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type default\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-22\"\n                  onclick=\"toggle(22);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"22\"\n                  onclick=\"toggle(22);\">\n                            <li class=\"context-line\" id=\"context-22\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-22\" onclick=\"toggle(22);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-23\"\n                  onclick=\"toggle(23);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"23\"\n                  onclick=\"toggle(23);\">\n                            <li class=\"context-line\" id=\"context-23\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-23\" onclick=\"toggle(23);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-24\"\n                  onclick=\"toggle(24);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"24\"\n                  onclick=\"toggle(24);\">\n                            <li class=\"context-line\" id=\"context-24\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-24\" onclick=\"toggle(24);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"932\"\n                  class=\"pre-context\" id=\"pre-25\"\n                  onclick=\"toggle(25);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      template_cache.clear if settings.reload_templates\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"939\" class=\"context\" id=\"25\"\n                  onclick=\"toggle(25);\">\n                            <li class=\"context-line\" id=\"context-25\">\n                                <code>      invoke { dispatch! }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"940\" class=\"post-context\"\n                  id=\"post-25\" onclick=\"toggle(25);\">\n                            <li class=\"post-context-line\">\n                                <code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unless @response[&#x27;Content-Type&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type body[0].content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        elsif default = settings.default_content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type default\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"922\"\n                  class=\"pre-context\" id=\"pre-26\"\n                  onclick=\"toggle(26);\">\n                            <li class=\"pre-context-line\">\n                                <code>      @template_cache = Tilt::Cache.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @pinned_response = nil # whether a before! filter pinned the content-type\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      yield self if block_given?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Rack call interface.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"929\" class=\"context\" id=\"26\"\n                  onclick=\"toggle(26);\">\n                            <li class=\"context-line\" id=\"context-26\">\n                                <code>      dup.call!(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"930\" class=\"post-context\"\n                  id=\"post-26\" onclick=\"toggle(26);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-27\"\n                  onclick=\"toggle(27);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Options:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # xss_mode:: How the browser should prevent the attack (default: :block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class XSSHeader &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"18\" class=\"context\" id=\"27\"\n                  onclick=\"toggle(27);\">\n                            <li class=\"context-line\" id=\"context-27\">\n                                <code>        status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"19\" class=\"post-context\"\n                  id=\"post-27\" onclick=\"toggle(27);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"9\"\n                  class=\"pre-context\" id=\"pre-28\"\n                  onclick=\"toggle(28);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class PathTraversal &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        path_was         = env[&quot;PATH_INFO&quot;]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"16\" class=\"context\" id=\"28\"\n                  onclick=\"toggle(28);\">\n                            <li class=\"context-line\" id=\"context-28\">\n                                <code>        app.call env</code>\n                            </li>\n                        </ol>\n                        <ol start=\"17\" class=\"post-context\"\n                  id=\"post-28\" onclick=\"toggle(28);\">\n                            <li class=\"post-context-line\">\n                                <code>      ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = path_was\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def cleanup(path)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        encoding = path.encoding\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        dot   = &#x27;.&#x27;.encode(encoding)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"19\"\n                  class=\"pre-context\" id=\"pre-29\"\n                  onclick=\"toggle(29);\">\n                            <li class=\"pre-context-line\">\n                                <code>    class JsonCsrf &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :allow_if =&gt; nil\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      alias react deny\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        request               = Request.new(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"context\" id=\"29\"\n                  onclick=\"toggle(29);\">\n                            <li class=\"context-line\" id=\"context-29\">\n                                <code>        status, headers, body = app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"27\" class=\"post-context\"\n                  id=\"post-29\" onclick=\"toggle(29);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if has_vector?(request, headers)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          warn env, &quot;attack prevented by #{self.class}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          react_and_close(env, body) or [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          [status, headers, body]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-30\"\n                  onclick=\"toggle(30);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"30\"\n                  onclick=\"toggle(30);\">\n                            <li class=\"context-line\" id=\"context-30\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-30\" onclick=\"toggle(30);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-31\"\n                  onclick=\"toggle(31);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"31\"\n                  onclick=\"toggle(31);\">\n                            <li class=\"context-line\" id=\"context-31\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-31\" onclick=\"toggle(31);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-32\"\n                  onclick=\"toggle(32);\">\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options.to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"31\" class=\"context\" id=\"32\"\n                  onclick=\"toggle(32);\">\n                            <li class=\"context-line\" id=\"context-32\">\n                                <code>        status, headers, body        = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"32\" class=\"post-context\"\n                  id=\"post-32\" onclick=\"toggle(32);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;null_logger.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-33\"\n                  onclick=\"toggle(33);\">\n                            <li class=\"pre-context-line\">\n                                <code>  class NullLogger\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_LOGGER] = self\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"33\"\n                  onclick=\"toggle(33);\">\n                            <li class=\"context-line\" id=\"context-33\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-33\" onclick=\"toggle(33);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def info(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def debug(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def warn(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def error(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def fatal(progname = nil, &amp;block); end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"5\"\n                  class=\"pre-context\" id=\"pre-34\"\n                  onclick=\"toggle(34);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # all other requests unchanged.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class Head\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"context\" id=\"34\"\n                  onclick=\"toggle(34);\">\n                            <li class=\"context-line\" id=\"context-34\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"13\" class=\"post-context\"\n                  id=\"post-34\" onclick=\"toggle(34);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if env[REQUEST_METHOD] == HEAD\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status, headers, Rack::BodyProxy.new([]) do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            body.close if body.respond_to? :close\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"15\"\n                  class=\"pre-context\" id=\"pre-35\"\n                  onclick=\"toggle(35);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def @@eats_errors.puts(*) end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"22\" class=\"context\" id=\"35\"\n                  onclick=\"toggle(35);\">\n                            <li class=\"context-line\" id=\"context-35\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"post-context\"\n                  id=\"post-35\" onclick=\"toggle(35);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if prefers_plain_text?(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        content_type = &quot;text&#x2F;plain&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body = dump_exception(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"209\"\n                  class=\"pre-context\" id=\"pre-36\"\n                  onclick=\"toggle(36);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # Some Rack handlers (Rainbows!) implement an extended body object protocol, however,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # This middleware will detect an extended body object and will make sure it reaches the\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # handler directly. We do this here, so our middleware and middleware set up by the app will\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # still be able to run.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class ExtendedRack &lt; Struct.new(:app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"216\" class=\"context\" id=\"36\"\n                  onclick=\"toggle(36);\">\n                            <li class=\"context-line\" id=\"context-36\">\n                                <code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code>\n                            </li>\n                        </ol>\n                        <ol start=\"217\" class=\"post-context\"\n                  id=\"post-36\" onclick=\"toggle(36);\">\n                            <li class=\"post-context-line\">\n                                <code>      return result unless callback and async?(*result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      after_response { callback.call result }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      setup_close(env, *result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      throw :async\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1984\"\n                  class=\"pre-context\" id=\"pre-37\"\n                  onclick=\"toggle(37);\">\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def helpers\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @instance\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1991\" class=\"context\" id=\"37\"\n                  onclick=\"toggle(37);\">\n                            <li class=\"context-line\" id=\"context-37\">\n                                <code>      @stack.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1992\" class=\"post-context\"\n                  id=\"post-37\" onclick=\"toggle(37);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def inspect\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-38\"\n                  onclick=\"toggle(38);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Options:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # xss_mode:: How the browser should prevent the attack (default: :block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class XSSHeader &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"18\" class=\"context\" id=\"38\"\n                  onclick=\"toggle(38);\">\n                            <li class=\"context-line\" id=\"context-38\">\n                                <code>        status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"19\" class=\"post-context\"\n                  id=\"post-38\" onclick=\"toggle(38);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"9\"\n                  class=\"pre-context\" id=\"pre-39\"\n                  onclick=\"toggle(39);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class PathTraversal &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        path_was         = env[&quot;PATH_INFO&quot;]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"16\" class=\"context\" id=\"39\"\n                  onclick=\"toggle(39);\">\n                            <li class=\"context-line\" id=\"context-39\">\n                                <code>        app.call env</code>\n                            </li>\n                        </ol>\n                        <ol start=\"17\" class=\"post-context\"\n                  id=\"post-39\" onclick=\"toggle(39);\">\n                            <li class=\"post-context-line\">\n                                <code>      ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = path_was\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def cleanup(path)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        encoding = path.encoding\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        dot   = &#x27;.&#x27;.encode(encoding)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"19\"\n                  class=\"pre-context\" id=\"pre-40\"\n                  onclick=\"toggle(40);\">\n                            <li class=\"pre-context-line\">\n                                <code>    class JsonCsrf &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :allow_if =&gt; nil\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      alias react deny\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        request               = Request.new(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"context\" id=\"40\"\n                  onclick=\"toggle(40);\">\n                            <li class=\"context-line\" id=\"context-40\">\n                                <code>        status, headers, body = app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"27\" class=\"post-context\"\n                  id=\"post-40\" onclick=\"toggle(40);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if has_vector?(request, headers)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          warn env, &quot;attack prevented by #{self.class}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          react_and_close(env, body) or [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          [status, headers, body]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-41\"\n                  onclick=\"toggle(41);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"41\"\n                  onclick=\"toggle(41);\">\n                            <li class=\"context-line\" id=\"context-41\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-41\" onclick=\"toggle(41);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-42\"\n                  onclick=\"toggle(42);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"42\"\n                  onclick=\"toggle(42);\">\n                            <li class=\"context-line\" id=\"context-42\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-42\" onclick=\"toggle(42);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-43\"\n                  onclick=\"toggle(43);\">\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options.to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"31\" class=\"context\" id=\"43\"\n                  onclick=\"toggle(43);\">\n                            <li class=\"context-line\" id=\"context-43\">\n                                <code>        status, headers, body        = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"32\" class=\"post-context\"\n                  id=\"post-43\" onclick=\"toggle(43);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;null_logger.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-44\"\n                  onclick=\"toggle(44);\">\n                            <li class=\"pre-context-line\">\n                                <code>  class NullLogger\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_LOGGER] = self\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"44\"\n                  onclick=\"toggle(44);\">\n                            <li class=\"context-line\" id=\"context-44\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-44\" onclick=\"toggle(44);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def info(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def debug(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def warn(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def error(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def fatal(progname = nil, &amp;block); end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"5\"\n                  class=\"pre-context\" id=\"pre-45\"\n                  onclick=\"toggle(45);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # all other requests unchanged.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class Head\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"context\" id=\"45\"\n                  onclick=\"toggle(45);\">\n                            <li class=\"context-line\" id=\"context-45\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"13\" class=\"post-context\"\n                  id=\"post-45\" onclick=\"toggle(45);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if env[REQUEST_METHOD] == HEAD\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status, headers, Rack::BodyProxy.new([]) do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            body.close if body.respond_to? :close\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"15\"\n                  class=\"pre-context\" id=\"pre-46\"\n                  onclick=\"toggle(46);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def @@eats_errors.puts(*) end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"22\" class=\"context\" id=\"46\"\n                  onclick=\"toggle(46);\">\n                            <li class=\"context-line\" id=\"context-46\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"post-context\"\n                  id=\"post-46\" onclick=\"toggle(46);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if prefers_plain_text?(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        content_type = &quot;text&#x2F;plain&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body = dump_exception(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"209\"\n                  class=\"pre-context\" id=\"pre-47\"\n                  onclick=\"toggle(47);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # Some Rack handlers (Rainbows!) implement an extended body object protocol, however,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # This middleware will detect an extended body object and will make sure it reaches the\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # handler directly. We do this here, so our middleware and middleware set up by the app will\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # still be able to run.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class ExtendedRack &lt; Struct.new(:app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"216\" class=\"context\" id=\"47\"\n                  onclick=\"toggle(47);\">\n                            <li class=\"context-line\" id=\"context-47\">\n                                <code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code>\n                            </li>\n                        </ol>\n                        <ol start=\"217\" class=\"post-context\"\n                  id=\"post-47\" onclick=\"toggle(47);\">\n                            <li class=\"post-context-line\">\n                                <code>      return result unless callback and async?(*result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      after_response { callback.call result }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      setup_close(env, *result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      throw :async\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1984\"\n                  class=\"pre-context\" id=\"pre-48\"\n                  onclick=\"toggle(48);\">\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def helpers\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @instance\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1991\" class=\"context\" id=\"48\"\n                  onclick=\"toggle(48);\">\n                            <li class=\"context-line\" id=\"context-48\">\n                                <code>      @stack.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1992\" class=\"post-context\"\n                  id=\"post-48\" onclick=\"toggle(48);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def inspect\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1535\"\n                  class=\"pre-context\" id=\"pre-49\"\n                  onclick=\"toggle(49);\">\n                            <li class=\"pre-context-line\">\n                                <code>        setup_default_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        setup_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder.run app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1542\" class=\"context\" id=\"49\"\n                  onclick=\"toggle(49);\">\n                            <li class=\"context-line\" id=\"context-49\">\n                                <code>        synchronize { prototype.call(env) }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1543\" class=\"post-context\"\n                  id=\"post-49\" onclick=\"toggle(49);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # Like Kernel#caller but excluding certain magic entries and without\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def caller_files\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        cleaned_caller(1).flatten\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>synchronize</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1762\"\n                  class=\"pre-context\" id=\"pre-50\"\n                  onclick=\"toggle(50);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @@mutex = Mutex.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def synchronize(&amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        if lock?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @@mutex.synchronize(&amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1769\" class=\"context\" id=\"50\"\n                  onclick=\"toggle(50);\">\n                            <li class=\"context-line\" id=\"context-50\">\n                                <code>          yield</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1770\" class=\"post-context\"\n                  id=\"post-50\" onclick=\"toggle(50);\">\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # used for deprecation warnings\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def warn(message)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        super message + &quot;\\n\\tfrom #{cleaned_caller.first.join(&#x27;:&#x27;)}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1535\"\n                  class=\"pre-context\" id=\"pre-51\"\n                  onclick=\"toggle(51);\">\n                            <li class=\"pre-context-line\">\n                                <code>        setup_default_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        setup_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder.run app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1542\" class=\"context\" id=\"51\"\n                  onclick=\"toggle(51);\">\n                            <li class=\"context-line\" id=\"context-51\">\n                                <code>        synchronize { prototype.call(env) }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1543\" class=\"post-context\"\n                  id=\"post-51\" onclick=\"toggle(51);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # Like Kernel#caller but excluding certain magic entries and without\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def caller_files\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        cleaned_caller(1).flatten\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;tempfile_reaper.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"8\"\n                  class=\"pre-context\" id=\"pre-52\"\n                  onclick=\"toggle(52);\">\n                            <li class=\"pre-context-line\">\n                                <code>  class TempfileReaper\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_TEMPFILES] ||= []\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"15\" class=\"context\" id=\"52\"\n                  onclick=\"toggle(52);\">\n                            <li class=\"context-line\" id=\"context-52\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"16\" class=\"post-context\"\n                  id=\"post-52\" onclick=\"toggle(52);\">\n                            <li class=\"post-context-line\">\n                                <code>      body_proxy = BodyProxy.new(body) do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        env[RACK_TEMPFILES].each(&amp;:close!) unless env[RACK_TEMPFILES].nil?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      [status, headers, body_proxy]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in\n                        <code>\n                            <strong>_call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-53\"\n                  onclick=\"toggle(53);\">\n                            <li class=\"pre-context-line\">\n                                <code>      assert(&quot;No env given&quot;) { env }\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      check_env env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_INPUT] = InputWrapper.new(env[RACK_INPUT])\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_ERRORS] = ErrorWrapper.new(env[RACK_ERRORS])\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      ## and returns an Array of exactly three values:\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"53\"\n                  onclick=\"toggle(53);\">\n                            <li class=\"context-line\" id=\"context-53\">\n                                <code>      ary = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-53\" onclick=\"toggle(53);\">\n                            <li class=\"post-context-line\">\n                                <code>      assert(&quot;response #{ary.inspect} is not an Array , but #{ary.class}&quot;) {\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ary.kind_of? Array\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      assert(&quot;response array #{ary.inspect} has #{ary.size} elements instead of 3&quot;) {\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ary.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"31\"\n                  class=\"pre-context\" id=\"pre-54\"\n                  onclick=\"toggle(54);\">\n                            <li class=\"pre-context-line\">\n                                <code>    ## after to catch all mistakes.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    ## = Rack applications\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    ## A Rack application is a Ruby object (not a class) that\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    ## responds to +call+.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env = nil)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"38\" class=\"context\" id=\"54\"\n                  onclick=\"toggle(54);\">\n                            <li class=\"context-line\" id=\"context-54\">\n                                <code>      dup._call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"39\" class=\"post-context\"\n                  id=\"post-54\" onclick=\"toggle(54);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def _call(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      ## It takes exactly one argument, the *environment*\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      assert(&quot;No env given&quot;) { env }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      check_env env\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;show_exceptions.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"16\"\n                  class=\"pre-context\" id=\"pre-55\"\n                  onclick=\"toggle(55);\">\n                            <li class=\"pre-context-line\">\n                                <code>    CONTEXT = 7\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"context\" id=\"55\"\n                  onclick=\"toggle(55);\">\n                            <li class=\"context-line\" id=\"context-55\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"24\" class=\"post-context\"\n                  id=\"post-55\" onclick=\"toggle(55);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue StandardError, LoadError, SyntaxError =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      exception_string = dump_exception(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      env[RACK_ERRORS].puts(exception_string)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      env[RACK_ERRORS].flush\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if accepts_html?(env)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;common_logger.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"31\"\n                  class=\"pre-context\" id=\"pre-56\"\n                  onclick=\"toggle(56);\">\n                            <li class=\"pre-context-line\">\n                                <code>    # will not be logged, so if exception handling middleware are used,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # they should be loaded after this middleware.  Additionally, because\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # the logging happens after the request body has been fully sent, any\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # exceptions raised during the sending of the response body will\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # cause the request not to be logged.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      began_at = Utils.clock_time\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"38\" class=\"context\" id=\"56\"\n                  onclick=\"toggle(56);\">\n                            <li class=\"context-line\" id=\"context-56\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"39\" class=\"post-context\"\n                  id=\"post-56\" onclick=\"toggle(56);\">\n                            <li class=\"post-context-line\">\n                                <code>      headers = Utils::HeaderHash[headers]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"246\"\n                  class=\"pre-context\" id=\"pre-57\"\n                  onclick=\"toggle(57);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.commonlogger&#x27;] ? @app.call(env) : super\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    superclass.class_eval do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      alias call_without_check call unless method_defined? :call_without_check\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[&#x27;sinatra.commonlogger&#x27;] = true\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"253\" class=\"context\" id=\"57\"\n                  onclick=\"toggle(57);\">\n                            <li class=\"context-line\" id=\"context-57\">\n                                <code>        call_without_check(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"254\" class=\"post-context\"\n                  id=\"post-57\" onclick=\"toggle(57);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  class BadRequest &lt; TypeError #:nodoc:\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def http_status; 400 end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;content_length.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"10\"\n                  class=\"pre-context\" id=\"pre-58\"\n                  onclick=\"toggle(58);\">\n                            <li class=\"pre-context-line\">\n                                <code>    include Rack::Utils\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"17\" class=\"context\" id=\"58\"\n                  onclick=\"toggle(58);\">\n                            <li class=\"context-line\" id=\"context-58\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"18\" class=\"post-context\"\n                  id=\"post-58\" onclick=\"toggle(58);\">\n                            <li class=\"post-context-line\">\n                                <code>      headers = HeaderHash[headers]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if !STATUS_WITH_NO_ENTITY_BODY.key?(status.to_i) &amp;&amp;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>         !headers[CONTENT_LENGTH] &amp;&amp;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>         !headers[TRANSFER_ENCODING]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        obody = body\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;thin-1.8.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in\n                        <code>\n                            <strong>block in pre_process</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"79\"\n                  class=\"pre-context\" id=\"pre-59\"\n                  onclick=\"toggle(59);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # When we&#x27;re under a non-async framework like rails, we can still spawn\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # off async responses using the callback info, so there&#x27;s little point\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # in removing this.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      response = AsyncResponse\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      catch(:async) do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        # Process the request calling the Rack adapter\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"86\" class=\"context\" id=\"59\"\n                  onclick=\"toggle(59);\">\n                            <li class=\"context-line\" id=\"context-59\">\n                                <code>        response = @app.call(@request.env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"87\" class=\"post-context\"\n                  id=\"post-59\" onclick=\"toggle(59);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      response\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unexpected_error(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # Pass through error response\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      can_persist? &amp;&amp; @request.persistent? ? Response::PERSISTENT_ERROR : Response::ERROR\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;thin-1.8.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"77\"\n                  class=\"pre-context\" id=\"pre-60\"\n                  onclick=\"toggle(60);\">\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # When we&#x27;re under a non-async framework like rails, we can still spawn\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # off async responses using the callback info, so there&#x27;s little point\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # in removing this.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      response = AsyncResponse\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"84\" class=\"context\" id=\"60\"\n                  onclick=\"toggle(60);\">\n                            <li class=\"context-line\" id=\"context-60\">\n                                <code>      catch(:async) do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"85\" class=\"post-context\"\n                  id=\"post-60\" onclick=\"toggle(60);\">\n                            <li class=\"post-context-line\">\n                                <code>        # Process the request calling the Rack adapter\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        response = @app.call(@request.env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      response\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unexpected_error(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # Pass through error response\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;thin-1.8.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in\n                        <code>\n                            <strong>pre_process</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"77\"\n                  class=\"pre-context\" id=\"pre-61\"\n                  onclick=\"toggle(61);\">\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # When we&#x27;re under a non-async framework like rails, we can still spawn\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # off async responses using the callback info, so there&#x27;s little point\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # in removing this.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      response = AsyncResponse\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"84\" class=\"context\" id=\"61\"\n                  onclick=\"toggle(61);\">\n                            <li class=\"context-line\" id=\"context-61\">\n                                <code>      catch(:async) do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"85\" class=\"post-context\"\n                  id=\"post-61\" onclick=\"toggle(61);\">\n                            <li class=\"post-context-line\">\n                                <code>        # Process the request calling the Rack adapter\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        response = @app.call(@request.env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      response\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unexpected_error(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # Pass through error response\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;thin-1.8.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in\n                        <code>\n                            <strong>process</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"46\"\n                  class=\"pre-context\" id=\"pre-62\"\n                  onclick=\"toggle(62);\">\n                            <li class=\"pre-context-line\">\n                                <code>    # is ready to be processed.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def process\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if threaded?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @request.threaded = true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        EventMachine.defer { post_process(pre_process) }\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @request.threaded = false\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"53\" class=\"context\" id=\"62\"\n                  onclick=\"toggle(62);\">\n                            <li class=\"context-line\" id=\"context-62\">\n                                <code>        post_process(pre_process)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"54\" class=\"post-context\"\n                  id=\"post-62\" onclick=\"toggle(62);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def ssl_verify_peer(cert)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # In order to make the cert available later we have to have made at least\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # a show of verifying it.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      true\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;thin-1.8.1&#x2F;lib&#x2F;thin&#x2F;connection.rb</code> in\n                        <code>\n                            <strong>receive_data</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"32\"\n                  class=\"pre-context\" id=\"pre-63\"\n                  onclick=\"toggle(63);\">\n                            <li class=\"pre-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Called when data is received from the client.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def receive_data(data)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @idle = false\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      trace data\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"39\" class=\"context\" id=\"63\"\n                  onclick=\"toggle(63);\">\n                            <li class=\"context-line\" id=\"context-63\">\n                                <code>      process if @request.parse(data)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"40\" class=\"post-context\"\n                  id=\"post-63\" onclick=\"toggle(63);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue InvalidRequest =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      log_error(&quot;Invalid request&quot;, e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      post_process Response::BAD_REQUEST\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Called when all data was received and the request\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # is ready to be processed.\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;eventmachine-1.2.7&#x2F;lib&#x2F;eventmachine.rb</code> in\n                        <code>\n                            <strong>run_machine</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"188\"\n                  class=\"pre-context\" id=\"pre-64\"\n                  onclick=\"toggle(64);\">\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        # Rubinius needs to come back into &quot;Ruby space&quot; for GC to work,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        # so we&#x27;ll crank the machine here.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        if defined?(RUBY_ENGINE) &amp;&amp; RUBY_ENGINE == &quot;rbx&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          while run_machine_once; end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"195\" class=\"context\" id=\"64\"\n                  onclick=\"toggle(64);\">\n                            <li class=\"context-line\" id=\"context-64\">\n                                <code>          run_machine</code>\n                            </li>\n                        </ol>\n                        <ol start=\"196\" class=\"post-context\"\n                  id=\"post-64\" onclick=\"toggle(64);\">\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        until @tails.empty?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          @tails.pop.call\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;eventmachine-1.2.7&#x2F;lib&#x2F;eventmachine.rb</code> in\n                        <code>\n                            <strong>run</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"188\"\n                  class=\"pre-context\" id=\"pre-65\"\n                  onclick=\"toggle(65);\">\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        # Rubinius needs to come back into &quot;Ruby space&quot; for GC to work,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        # so we&#x27;ll crank the machine here.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        if defined?(RUBY_ENGINE) &amp;&amp; RUBY_ENGINE == &quot;rbx&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          while run_machine_once; end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"195\" class=\"context\" id=\"65\"\n                  onclick=\"toggle(65);\">\n                            <li class=\"context-line\" id=\"context-65\">\n                                <code>          run_machine</code>\n                            </li>\n                        </ol>\n                        <ol start=\"196\" class=\"post-context\"\n                  id=\"post-65\" onclick=\"toggle(65);\">\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        until @tails.empty?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          @tails.pop.call\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;thin-1.8.1&#x2F;lib&#x2F;thin&#x2F;backends&#x2F;base.rb</code> in\n                        <code>\n                            <strong>start</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"68\"\n                  class=\"pre-context\" id=\"pre-66\"\n                  onclick=\"toggle(66);\">\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        # Allow for early run up of eventmachine.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        if EventMachine.reactor_running?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          starter.call\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @started_reactor = true\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"75\" class=\"context\" id=\"66\"\n                  onclick=\"toggle(66);\">\n                            <li class=\"context-line\" id=\"context-66\">\n                                <code>          EventMachine.run(&amp;starter)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"76\" class=\"post-context\"\n                  id=\"post-66\" onclick=\"toggle(66);\">\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      \n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # Stop of the backend from accepting new connections.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def stop\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        @running  = false\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        @stopping = true\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;thin-1.8.1&#x2F;lib&#x2F;thin&#x2F;server.rb</code> in\n                        <code>\n                            <strong>start</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"155\"\n                  class=\"pre-context\" id=\"pre-67\"\n                  onclick=\"toggle(67);\">\n                            <li class=\"pre-context-line\">\n                                <code>      log_info  &quot;Thin web server (v#{VERSION::STRING} codename #{VERSION::CODENAME})&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      log_debug &quot;Debugging ON&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      trace     &quot;Tracing ON&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      log_info &quot;Maximum connections set to #{@backend.maximum_connections}&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      log_info &quot;Listening on #{@backend}, CTRL+C to stop&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"162\" class=\"context\" id=\"67\"\n                  onclick=\"toggle(67);\">\n                            <li class=\"context-line\" id=\"context-67\">\n                                <code>      @backend.start { setup_signals if @setup_signals }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"163\" class=\"post-context\"\n                  id=\"post-67\" onclick=\"toggle(67);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    alias :start! :start\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    \n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # == Gracefull shutdown\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Stops the server after processing all current connections.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # As soon as this method is called, the server stops accepting\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # new requests and waits for all current connections to finish.\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;handler&#x2F;thin.rb</code> in\n                        <code>\n                            <strong>run</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"15\"\n                  class=\"pre-context\" id=\"pre-68\"\n                  onclick=\"toggle(68);\">\n                            <li class=\"pre-context-line\">\n                                <code>        host = options.delete(:Host) || default_host\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        port = options.delete(:Port) || 8080\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        args = [host, port, app, options]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        # Thin versions below 0.8.0 do not support additional options\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        args.pop if ::Thin::VERSION::MAJOR &lt; 1 &amp;&amp; ::Thin::VERSION::MINOR &lt; 8\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        server = ::Thin::Server.new(*args)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        yield server if block_given?\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"22\" class=\"context\" id=\"68\"\n                  onclick=\"toggle(68);\">\n                            <li class=\"context-line\" id=\"context-68\">\n                                <code>        server.start</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"post-context\"\n                  id=\"post-68\" onclick=\"toggle(68);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def self.valid_options\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        environment  = ENV[&#x27;RACK_ENV&#x27;] || &#x27;development&#x27;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        default_host = environment == &#x27;development&#x27; ? &#x27;localhost&#x27; : &#x27;0.0.0.0&#x27;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        {\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;server.rb</code> in\n                        <code>\n                            <strong>start</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"320\"\n                  class=\"pre-context\" id=\"pre-69\"\n                  onclick=\"toggle(69);\">\n                            <li class=\"pre-context-line\">\n                                <code>        if server.respond_to?(:shutdown)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          server.shutdown\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          exit\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"327\" class=\"context\" id=\"69\"\n                  onclick=\"toggle(69);\">\n                            <li class=\"context-line\" id=\"context-69\">\n                                <code>      server.run(wrapped_app, **options, &amp;block)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"328\" class=\"post-context\"\n                  id=\"post-69\" onclick=\"toggle(69);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def server\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @_server ||= Rack::Handler.get(options[:server])\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unless @_server\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        @_server = Rack::Handler.default\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;server.rb</code> in\n                        <code>\n                            <strong>start</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"161\"\n                  class=\"pre-context\" id=\"pre-70\"\n                  onclick=\"toggle(70);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #      [200, {&#x27;Content-Type&#x27; =&gt; &#x27;text&#x2F;html&#x27;}, [&#x27;hello world&#x27;]]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    #    end,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    #    :server =&gt; &#x27;cgi&#x27;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    #  )\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Further options available here are documented on Rack::Server#initialize\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def self.start(options = nil)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"168\" class=\"context\" id=\"70\"\n                  onclick=\"toggle(70);\">\n                            <li class=\"context-line\" id=\"context-70\">\n                                <code>      new(options).start</code>\n                            </li>\n                        </ol>\n                        <ol start=\"169\" class=\"post-context\"\n                  id=\"post-70\" onclick=\"toggle(70);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    attr_writer :options\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Options may include:\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # * :app\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    #     a rack application to run (overrides :config and :builder)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;bin&#x2F;rackup</code> in\n                        <code>\n                            <strong>&lt;top (required)&gt;</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"1\"\n                  class=\"pre-context\" id=\"pre-71\"\n                  onclick=\"toggle(71);\">\n                            <li class=\"pre-context-line\">\n                                <code>#!&#x2F;usr&#x2F;bin&#x2F;env ruby\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code># frozen_string_literal: true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>require &quot;rack&quot;\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"5\" class=\"context\" id=\"71\"\n                  onclick=\"toggle(71);\">\n                            <li class=\"context-line\" id=\"context-71\">\n                                <code>Rack::Server.start</code>\n                            </li>\n                        </ol>\n                        <ol start=\"6\" class=\"post-context\"\n                  id=\"post-71\" onclick=\"toggle(71);\">\n                \n              </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;usr&#x2F;local&#x2F;bin&#x2F;rackup</code> in\n                        <code>\n                            <strong>load</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"16\"\n                  class=\"pre-context\" id=\"pre-72\"\n                  onclick=\"toggle(72);\">\n                            <li class=\"pre-context-line\">\n                                <code>  if str =~ &#x2F;\\A_(.*)_\\z&#x2F; and Gem::Version.correct?($1) then\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    version = $1\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    ARGV.shift\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>if Gem.respond_to?(:activate_bin_path)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"context\" id=\"72\"\n                  onclick=\"toggle(72);\">\n                            <li class=\"context-line\" id=\"context-72\">\n                                <code>load Gem.activate_bin_path(&#x27;rack&#x27;, &#x27;rackup&#x27;, version)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"24\" class=\"post-context\"\n                  id=\"post-72\" onclick=\"toggle(72);\">\n                            <li class=\"post-context-line\">\n                                <code>else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>gem &quot;rack&quot;, version\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>load Gem.bin_path(&quot;rack&quot;, &quot;rackup&quot;, version)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>&#x2F;usr&#x2F;local&#x2F;bin&#x2F;rackup</code> in\n                        <code>\n                            <strong>&lt;main&gt;</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"16\"\n                  class=\"pre-context\" id=\"pre-73\"\n                  onclick=\"toggle(73);\">\n                            <li class=\"pre-context-line\">\n                                <code>  if str =~ &#x2F;\\A_(.*)_\\z&#x2F; and Gem::Version.correct?($1) then\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    version = $1\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    ARGV.shift\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>if Gem.respond_to?(:activate_bin_path)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"context\" id=\"73\"\n                  onclick=\"toggle(73);\">\n                            <li class=\"context-line\" id=\"context-73\">\n                                <code>load Gem.activate_bin_path(&#x27;rack&#x27;, &#x27;rackup&#x27;, version)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"24\" class=\"post-context\"\n                  id=\"post-73\" onclick=\"toggle(73);\">\n                            <li class=\"post-context-line\">\n                                <code>else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>gem &quot;rack&quot;, version\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>load Gem.bin_path(&quot;rack&quot;, &quot;rackup&quot;, version)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                </ul>\n            </div>\n            <!-- /BACKTRACE -->\n            <div id=\"get\">\n                <h3 id=\"get-info\">GET</h3>\n                <p class=\"no-data\">No GET data.</p>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /GET -->\n            <div id=\"post\">\n                <h3 id=\"post-info\">POST</h3>\n                <p class=\"no-data\">No POST data.</p>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /POST -->\n            <div id=\"cookies\">\n                <h3 id=\"cookie-info\">COOKIES</h3>\n                <p class=\"no-data\">No cookie data.</p>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /COOKIES -->\n            <div id=\"rack\">\n                <h3 id=\"env-info\">Rack ENV</h3>\n                <table class=\"req\">\n                    <tr>\n                        <th>Variable</th>\n                        <th>Value</th>\n                    </tr>\n                    <tr>\n                        <td>CONTENT_LENGTH</td>\n                        <td class=\"code\">\n                            <div>26</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CONTENT_TYPE</td>\n                        <td class=\"code\">\n                            <div>application&#x2F;json</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>GATEWAY_INTERFACE</td>\n                        <td class=\"code\">\n                            <div>CGI&#x2F;1.2</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_ACCEPT</td>\n                        <td class=\"code\">\n                            <div>*&#x2F;*</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_ACCEPT_ENCODING</td>\n                        <td class=\"code\">\n                            <div>gzip, deflate, br</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_CONNECTION</td>\n                        <td class=\"code\">\n                            <div>keep-alive</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_HOST</td>\n                        <td class=\"code\">\n                            <div>localhost:4567</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_POSTMAN_TOKEN</td>\n                        <td class=\"code\">\n                            <div>3a3f621a-c103-4e81-9242-28c84882bb58</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_USER_AGENT</td>\n                        <td class=\"code\">\n                            <div>PostmanRuntime&#x2F;7.28.3</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_VERSION</td>\n                        <td class=\"code\">\n                            <div>HTTP&#x2F;1.1</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PATH_INFO</td>\n                        <td class=\"code\">\n                            <div>&#x2F;users</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>QUERY_STRING</td>\n                        <td class=\"code\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REMOTE_ADDR</td>\n                        <td class=\"code\">\n                            <div>127.0.0.1</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REQUEST_METHOD</td>\n                        <td class=\"code\">\n                            <div>POST</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REQUEST_PATH</td>\n                        <td class=\"code\">\n                            <div>&#x2F;users</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REQUEST_URI</td>\n                        <td class=\"code\">\n                            <div>&#x2F;users</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SCRIPT_NAME</td>\n                        <td class=\"code\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_NAME</td>\n                        <td class=\"code\">\n                            <div>localhost</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_PORT</td>\n                        <td class=\"code\">\n                            <div>4567</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_PROTOCOL</td>\n                        <td class=\"code\">\n                            <div>HTTP&#x2F;1.1</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_SOFTWARE</td>\n                        <td class=\"code\">\n                            <div>thin 1.8.1 codename Infinite Smoothie</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>async.callback</td>\n                        <td class=\"code\">\n                            <div>#&lt;Method: #&lt;Thin::Connection:0x00005646c6903388 @signature=147, @request=#&lt;Thin::Request:0x00005646c6637258 @parser=#&lt;Thin::HttpParser:0x00005646c66371e0&gt;, @data=nil, @nparsed=260, @body=#&lt;StringIO:0x00005646c6637028&gt;, @env={&quot;SERVER_SOFTWARE&quot;=&gt;&quot;thin 1.8.1 codename Infinite Smoothie&quot;, &quot;SERVER_NAME&quot;=&gt;&quot;localhost&quot;, &quot;rack.input&quot;=&gt;#&lt;Rack::Lint::InputWrapper:0x00005646c6939190 @input=#&lt;StringIO:0x00005646c6637028&gt;&gt;, &quot;rack.version&quot;=&gt;[1, 0], &quot;rack.errors&quot;=&gt;#&lt;Object:0x00005646c61da340&gt;, &quot;rack.multithread&quot;=&gt;false, &quot;rack.multiprocess&quot;=&gt;false, &quot;rack.run_once&quot;=&gt;false, &quot;REQUEST_METHOD&quot;=&gt;&quot;POST&quot;, &quot;REQUEST_PATH&quot;=&gt;&quot;&#x2F;users&quot;, &quot;PATH_INFO&quot;=&gt;&quot;&#x2F;users&quot;, &quot;REQUEST_URI&quot;=&gt;&quot;&#x2F;users&quot;, &quot;HTTP_VERSION&quot;=&gt;&quot;HTTP&#x2F;1.1&quot;, &quot;HTTP_USER_AGENT&quot;=&gt;&quot;PostmanRuntime&#x2F;7.28.3&quot;, &quot;HTTP_ACCEPT&quot;=&gt;&quot;*&#x2F;*&quot;, &quot;HTTP_POSTMAN_TOKEN&quot;=&gt;&quot;3a3f621a-c103-4e81-9242-28c84882bb58&quot;, &quot;HTTP_HOST&quot;=&gt;&quot;localhost:4567&quot;, &quot;HTTP_ACCEPT_ENCODING&quot;=&gt;&quot;gzip, deflate, br&quot;, &quot;HTTP_CONNECTION&quot;=&gt;&quot;keep-alive&quot;, &quot;CONTENT_LENGTH&quot;=&gt;&quot;26&quot;, &quot;CONTENT_TYPE&quot;=&gt;&quot;application&#x2F;json&quot;, &quot;GATEWAY_INTERFACE&quot;=&gt;&quot;CGI&#x2F;1.2&quot;, &quot;SERVER_PORT&quot;=&gt;&quot;4567&quot;, &quot;QUERY_STRING&quot;=&gt;&quot;&quot;, &quot;SERVER_PROTOCOL&quot;=&gt;&quot;HTTP&#x2F;1.1&quot;, &quot;rack.url_scheme&quot;=&gt;&quot;http&quot;, &quot;SCRIPT_NAME&quot;=&gt;&quot;&quot;, &quot;REMOTE_ADDR&quot;=&gt;&quot;127.0.0.1&quot;, &quot;async.callback&quot;=&gt;#&lt;Method: #&lt;Thin::Connection:0x00005646c6903388 ...&gt;.post_process&gt;, &quot;async.close&quot;=&gt;#&lt;EventMachine::DefaultDeferrable:0x00005646c6634198&gt;, &quot;sinatra.commonlogger&quot;=&gt;true, &quot;rack.tempfiles&quot;=&gt;[], &quot;rack.logger&quot;=&gt;#&lt;Rack::NullLogger:0x00005646c66738c0 @app=#&lt;Rack::Protection::FrameOptions:0x00005646c66739b0 @app=#&lt;Rack::Protection::HttpOrigin:0x00005646c6673d98 @app=#&lt;Rack::Protection::IPSpoofing:0x00005646c6673e10 @app=#&lt;Rack::Protection::JsonCsrf:0x00005646c6673f50 @app=#&lt;Rack::Protection::PathTraversal:0x00005646c662c010 @app=#&lt;Rack::Protection::XSSHeader:0x00005646c662c100 @app=#&lt;UsersController:0x00005646c659b448 @default_layout=:layout, @preferred_extension=nil, @app=#&lt;MainApp:0x00005646c652d830 @default_layout=:layout, @preferred_extension=nil, @app=nil, @template_cache=#&lt;Tilt::Cache:0x00005646c652d7b8 @cache={}&gt;, @pinned_response=nil&gt;, @template_cache=#&lt;Tilt::Cache:0x00005646c659b420 @cache={}&gt;, @pinned_response=nil&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :xss_mode=&gt;:block, :nosniff=&gt;true, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :allow_if=&gt;nil, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :allow_if=&gt;nil, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :frame_options=&gt;:sameorigin, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;&gt;, &quot;rack.request.query_string&quot;=&gt;&quot;&quot;, &quot;rack.request.query_hash&quot;=&gt;{}, &quot;sinatra.route&quot;=&gt;&quot;POST &#x2F;users&quot;, &quot;sinatra.error.params&quot;=&gt;{}, &quot;sinatra.error&quot;=&gt;#&lt;KeyError: key not found: :name&gt;, &quot;sinatra.accept&quot;=&gt;[#&lt;Sinatra::Request::AcceptEntry:0x00005646c6630bd8 @entry=&quot;*&#x2F;*&quot;, @type=&quot;*&#x2F;*&quot;, @params={}, @q=1.0&gt;], &quot;rack.request.cookie_hash&quot;=&gt;{}}&gt;, @response=#&lt;Thin::Response:0x00005646c6636f88 @headers=#&lt;Thin::Headers:0x00005646c6636f10 @sent={}, @out=[]&gt;, @status=200, @persistent=false, @skip_body=false&gt;, @backend=#&lt;Thin::Backends::TcpServer:0x00005646c5f60df8 @host=&quot;127.0.0.1&quot;, @port=4567, @connections={47430989519300=&gt;#&lt;Thin::Connection:0x00005646c6903388 ...&gt;}, @timeout=30, @persistent_connection_count=1, @maximum_connections=1024, @maximum_persistent_connections=100, @no_epoll=false, @running=true, @ssl=nil, @started_reactor=true, @stopping=false, @threaded=nil, @server=#&lt;Thin::Server:0x00005646c5f61258 @app=#&lt;Rack::ContentLength:0x00005646c5f743a8 @app=#&lt;Rack::CommonLogger:0x00005646c5f74588 @app=#&lt;Rack::ShowExceptions:0x00005646c5e1fcf0 @app=#&lt;Rack::Lint:0x00005646c5e28328 @app=#&lt;Rack::TempfileReaper:0x00005646c5e287b0 @app=MainApp&gt;, @content_length=nil&gt;&gt;, @logger=#&lt;IO:&lt;STDERR&gt;&gt;&gt;&gt;, @tag=nil, @backend=#&lt;Thin::Backends::TcpServer:0x00005646c5f60df8 ...&gt;, @setup_signals=true, @signal_queue=[], @signal_timer=#&lt;EventMachine::PeriodicTimer:0x00005646c61e5998 @interval=1, @code=#&lt;Proc:0x00005646c61e5a10@&#x2F;var&#x2F;lib&#x2F;gems&#x2F;2.5.0&#x2F;gems&#x2F;thin-1.8.1&#x2F;lib&#x2F;thin&#x2F;server.rb:244&gt;, @cancelled=false, @work=#&lt;Method: EventMachine::PeriodicTimer#fire&gt;&gt;&gt;, @signature=2&gt;, @app=#&lt;Rack::ContentLength:0x00005646c5f743a8 @app=#&lt;Rack::CommonLogger:0x00005646c5f74588 @app=#&lt;Rack::ShowExceptions:0x00005646c5e1fcf0 @app=#&lt;Rack::Lint:0x00005646c5e28328 @app=#&lt;Rack::TempfileReaper:0x00005646c5e287b0 @app=MainApp&gt;, @content_length=nil&gt;&gt;, @logger=#&lt;IO:&lt;STDERR&gt;&gt;&gt;&gt;, @threaded=nil, @can_persist=true, @idle=false&gt;.post_process&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>async.close</td>\n                        <td class=\"code\">\n                            <div>#&lt;EventMachine::DefaultDeferrable:0x00005646c6634198&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.errors</td>\n                        <td class=\"code\">\n                            <div>#&lt;Object:0x00005646c61da340&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.input</td>\n                        <td class=\"code\">\n                            <div>#&lt;Rack::Lint::InputWrapper:0x00005646c6939190 @input=#&lt;StringIO:0x00005646c6637028&gt;&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.logger</td>\n                        <td class=\"code\">\n                            <div>#&lt;Rack::NullLogger:0x00005646c66738c0 @app=#&lt;Rack::Protection::FrameOptions:0x00005646c66739b0 @app=#&lt;Rack::Protection::HttpOrigin:0x00005646c6673d98 @app=#&lt;Rack::Protection::IPSpoofing:0x00005646c6673e10 @app=#&lt;Rack::Protection::JsonCsrf:0x00005646c6673f50 @app=#&lt;Rack::Protection::PathTraversal:0x00005646c662c010 @app=#&lt;Rack::Protection::XSSHeader:0x00005646c662c100 @app=#&lt;UsersController:0x00005646c659b448 @default_layout=:layout, @preferred_extension=nil, @app=#&lt;MainApp:0x00005646c652d830 @default_layout=:layout, @preferred_extension=nil, @app=nil, @template_cache=#&lt;Tilt::Cache:0x00005646c652d7b8 @cache={}&gt;, @pinned_response=nil&gt;, @template_cache=#&lt;Tilt::Cache:0x00005646c659b420 @cache={}&gt;, @pinned_response=nil&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :xss_mode=&gt;:block, :nosniff=&gt;true, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :allow_if=&gt;nil, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :allow_if=&gt;nil, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :frame_options=&gt;:sameorigin, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.multiprocess</td>\n                        <td class=\"code\">\n                            <div>false</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.multithread</td>\n                        <td class=\"code\">\n                            <div>false</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.request.cookie_hash</td>\n                        <td class=\"code\">\n                            <div>{}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.request.query_hash</td>\n                        <td class=\"code\">\n                            <div>{}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.request.query_string</td>\n                        <td class=\"code\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.run_once</td>\n                        <td class=\"code\">\n                            <div>false</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.tempfiles</td>\n                        <td class=\"code\">\n                            <div>[]</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.url_scheme</td>\n                        <td class=\"code\">\n                            <div>http</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.version</td>\n                        <td class=\"code\">\n                            <div>[1, 0]</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.accept</td>\n                        <td class=\"code\">\n                            <div>[#&lt;Sinatra::Request::AcceptEntry:0x00005646c6630bd8 @entry=&quot;*&#x2F;*&quot;, @type=&quot;*&#x2F;*&quot;, @params={}, @q=1.0&gt;]</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.commonlogger</td>\n                        <td class=\"code\">\n                            <div>true</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.error</td>\n                        <td class=\"code\">\n                            <div>#&lt;KeyError: key not found: :name&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.error.params</td>\n                        <td class=\"code\">\n                            <div>{}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.route</td>\n                        <td class=\"code\">\n                            <div>POST &#x2F;users</div>\n                        </td>\n                    </tr>\n                </table>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /RACK ENV -->\n            <p id=\"explanation\">You're seeing this error because you have\nenabled the \n                <code>show_exceptions</code> setting.\n            </p>\n        </div>\n        <!-- /WRAP -->\n  \n    </body>\n</html>"
						}
					]
				},
				{
					"name": "Show All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/users",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Show All Users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}:{{port}}/users",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "251"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"KJ9dvQSAm2V\",\n        \"name\": \"abidzar\",\n        \"email\": \"abidzar@gmail.com\",\n        \"bio\": \"\",\n        \"created_at\": \"2021-08-19 16:38:56 +0700\"\n    },\n    {\n        \"id\": \"uG8Z7-d5kWP\",\n        \"name\": \"abidzar\",\n        \"email\": \"abidzar@gmail.com\",\n        \"bio\": \"dummy bio #hashtag\",\n        \"created_at\": \"2021-08-19 16:39:29 +0700\"\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Post (run User folder first)",
			"item": [
				{
					"name": "Create New Post Without Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"dummy_id3\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"Lorem Ipsum\",\r\n    \"user_id\": \"{{dummy_id1}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/posts",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							]
						}
					},
					"response": [
						{
							"name": "Create New Post Without Attachment",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"Lorem Ipsum\",\r\n    \"user_id\": \"{{dummy_id1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}/posts",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"posts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "86"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"B_SfrhJRsvH\",\n    \"content\": \"Lorem Ipsum\",\n    \"user_id\": \"KJ9dvQSAm2V\",\n    \"attachment\": null\n}"
						}
					]
				},
				{
					"name": "Create New Post With Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"dummy_id4\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"Lorem Ipsum 2 \",\r\n    \"user_id\": \"{{dummy_id1}}\",\r\n    \"attachment\": \"music.mp4\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/posts",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							]
						}
					},
					"response": [
						{
							"name": "Create New Post With Attachment",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"Lorem Ipsum 2 \",\r\n    \"user_id\": \"{{dummy_id1}}\",\r\n    \"attachment\": \"music.mp4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}/posts",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"posts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "96"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4yo2iM6FI9R\",\n    \"content\": \"Lorem Ipsum 2 \",\n    \"user_id\": \"DhgZP2FfyJz\",\n    \"attachment\": \"music.mp4\"\n}"
						}
					]
				},
				{
					"name": "Create New Post With Hashtag and Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"dummy_id5\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"Lorem Ipsum 3 #hashtag \",\r\n    \"user_id\": \"{{dummy_id1}}\",\r\n    \"attachment\": \"music.pdf\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/posts",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							]
						}
					},
					"response": [
						{
							"name": "Create New Post With Attachment",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"Lorem Ipsum 2 \",\r\n    \"user_id\": \"{{dummy_id1}}\",\r\n    \"attachment\": \"music.mp4\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}/posts",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"posts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "96"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4yo2iM6FI9R\",\n    \"content\": \"Lorem Ipsum 2 \",\n    \"user_id\": \"DhgZP2FfyJz\",\n    \"attachment\": \"music.mp4\"\n}"
						}
					]
				},
				{
					"name": "Create New Post Bad Payload",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"xxxxxx\": \"xxxxxx\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/posts",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							]
						}
					},
					"response": [
						{
							"name": "Create New Post Bad Payload",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"xxxxxx\": \"xxxxxx\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}/posts",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"posts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Content-Length",
									"value": "251289"
								}
							],
							"cookie": [],
							"body": "<!DOCTYPE html>\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n        <title>KeyError at &#x2F;posts</title>\n        <script type=\"text/javascript\">\n  //\n            <!--\n  function toggle(id) {\n    var pre  = document.getElementById(\"pre-\" + id);\n    var post = document.getElementById(\"post-\" + id);\n    var context = document.getElementById(\"context-\" + id);\n\n    if (pre.style.display == 'block') {\n      pre.style.display = 'none';\n      post.style.display = 'none';\n      context.style.background = \"none\";\n    } else {\n      pre.style.display = 'block';\n      post.style.display = 'block';\n      context.style.background = \"#fffed9\";\n    }\n  }\n\n  function toggleBacktrace(){\n    var bt = document.getElementById(\"backtrace\");\n    var toggler = document.getElementById(\"expando\");\n\n    if (bt.className == 'condensed') {\n      bt.className = 'expanded';\n      toggler.innerHTML = \"(condense)\";\n    } else {\n      bt.className = 'condensed';\n      toggler.innerHTML = \"(expand)\";\n    }\n  }\n  //-->\n  \n        </script>\n        <style type=\"text/css\" media=\"screen\">\n  *                   {margin: 0; padding: 0; border: 0; outline: 0;}\n  div.clear           {clear: both;}\n  body                {background: #EEEEEE; margin: 0; padding: 0;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',\n                       'Garuda';}\n  code                {font-family: 'Lucida Console', monospace;\n                       font-size: 12px;}\n  li                  {height: 18px;}\n  ul                  {list-style: none; margin: 0; padding: 0;}\n  ol:hover            {cursor: pointer;}\n  ol li               {white-space: pre;}\n  #explanation        {font-size: 12px; color: #666666;\n                       margin: 20px 0 0 100px;}\n/* WRAP */\n  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;\n                       padding: 30px 50px 20px 50px;\n                       border-left: 1px solid #DDDDDD;\n                       border-right: 1px solid #DDDDDD;}\n/* HEADER */\n  #header             {margin: 0 auto 25px auto;}\n  #header img         {float: left;}\n  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}\n  h1                  {margin: 0; font-size: 36px; color: #981919;}\n  h2                  {margin: 0; font-size: 22px; color: #333333;}\n  #header ul          {margin: 0; font-size: 12px; color: #666666;}\n  #header ul li strong{color: #444444;}\n  #header ul li       {display: inline; padding: 0 10px;}\n  #header ul li.first {padding-left: 0;}\n  #header ul li.last  {border: 0; padding-right: 0;}\n/* BODY */\n  #backtrace,\n  #get,\n  #post,\n  #cookies,\n  #rack               {width: 980px; margin: 0 auto 10px auto;}\n  p#nav               {float: right; font-size: 14px;}\n/* BACKTRACE */\n  a#expando           {float: left; padding-left: 5px; color: #666666;\n                      font-size: 14px; text-decoration: none; cursor: pointer;}\n  a#expando:hover     {text-decoration: underline;}\n  h3                  {float: left; width: 100px; margin-bottom: 10px;\n                       color: #981919; font-size: 14px; font-weight: bold;}\n  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}\n  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;\n                           font-size: 12px; color: #333333;}\n  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;\n                       border-bottom: 0;}\n  #backtrace ol       {width: 920px; margin-left: 50px;\n                       font: 10px 'Lucida Console', monospace; color: #666666;}\n  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;\n                       padding: 2px 0;}\n  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}\n  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;\n                       padding: 3px 0;}\n  #backtrace-ul .code {padding: 6px 0 4px 0;}\n  #backtrace.condensed .system,\n  #backtrace.condensed .framework {display:none;}\n/* REQUEST DATA */\n  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}\n  table.req           {width: 980px; text-align: left; font-size: 12px;\n                       color: #666666; padding: 0; border-spacing: 0;\n                       border: 1px solid #EEEEEE; border-bottom: 0;\n                       border-left: 0;\n                       clear:both}\n  table.req tr th     {padding: 2px 10px; font-weight: bold;\n                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n  table.req tr td     {padding: 2px 20px 2px 10px;\n                       border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n/* HIDE PRE/POST CODE AT START */\n  .pre-context,\n  .post-context       {display: none;}\n\n  table td.code       {width:750px}\n  table td.code div   {width:750px;overflow:hidden}\n</style>\n    </head>\n    <body>\n        <div id=\"wrap\">\n            <div id=\"header\">\n                <img src=\"/__sinatra__/500.png\" alt=\"application error\" height=\"161\" width=\"313\" />\n                <div id=\"summary\">\n                    <h1>\n                        <strong>KeyError</strong> at\n                        <strong>&#x2F;posts\n          </strong>\n                    </h1>\n                    <h2>key not found: :content</h2>\n                    <ul>\n                        <li class=\"first\">\n                            <strong>file:</strong>\n                            <code>\n            post.rb</code>\n                        </li>\n                        <li>\n                            <strong>location:</strong>\n                            <code>fetch\n            </code>\n                        </li>\n                        <li class=\"last\">\n                            <strong>line:\n            </strong> 11\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"clear\"></div>\n            </div>\n            <div id=\"backtrace\" class='condensed'>\n                <h3>BACKTRACE</h3>\n                <p>\n                    <a href=\"#\" id=\"expando\"\n            onclick=\"toggleBacktrace(); return false\">(expand)</a>\n                </p>\n                <p id=\"nav\">\n                    <strong>JUMP TO:</strong>\n                    <a href=\"#get-info\">GET</a>\n                    <a href=\"#post-info\">POST</a>\n                    <a href=\"#cookie-info\">COOKIES</a>\n                    <a href=\"#env-info\">ENV</a>\n                </p>\n                <div class=\"clear\"></div>\n                <ul id=\"backtrace-ul\">\n                    <li class=\"frame-info app\">\n                        <code>C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;app&#x2F;models&#x2F;post.rb</code> in\n                        <code>\n                            <strong>fetch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-1\"\n                  onclick=\"toggle(1);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>class Post\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_accessor :id, :content, :attachment, :user_id\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_reader :errors\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(attributes)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @id = attributes.fetch(:id, Nanoid.generate(size:11))\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"1\"\n                  onclick=\"toggle(1);\">\n                            <li class=\"context-line\" id=\"context-1\">\n                                <code>      @content = attributes.fetch(:content)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-1\" onclick=\"toggle(1);\">\n                            <li class=\"post-context-line\">\n                                <code>      @attachment = attributes.fetch(:attachment, nil)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @user_id = attributes.fetch(:user_id)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @errors = []\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def self.fetch_by_hashtag(attributes)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      search = &#x27;#&#x27; + attributes[:hashtag].to_s\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info app\">\n                        <code>C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;app&#x2F;models&#x2F;post.rb</code> in\n                        <code>\n                            <strong>initialize</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-2\"\n                  onclick=\"toggle(2);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>class Post\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_accessor :id, :content, :attachment, :user_id\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_reader :errors\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(attributes)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @id = attributes.fetch(:id, Nanoid.generate(size:11))\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"2\"\n                  onclick=\"toggle(2);\">\n                            <li class=\"context-line\" id=\"context-2\">\n                                <code>      @content = attributes.fetch(:content)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-2\" onclick=\"toggle(2);\">\n                            <li class=\"post-context-line\">\n                                <code>      @attachment = attributes.fetch(:attachment, nil)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @user_id = attributes.fetch(:user_id)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @errors = []\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def self.fetch_by_hashtag(attributes)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      search = &#x27;#&#x27; + attributes[:hashtag].to_s\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info app\">\n                        <code>C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;app&#x2F;controllers&#x2F;post.rb</code> in\n                        <code>\n                            <strong>new</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"18\"\n                  class=\"pre-context\" id=\"pre-3\"\n                  onclick=\"toggle(3);\">\n                            <li class=\"pre-context-line\">\n                                <code>      status 200\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      body response.to_json\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    post &quot;&#x2F;posts&quot; do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      params = JSON.parse(request.body.read, symbolize_names: true)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    \n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"25\" class=\"context\" id=\"3\"\n                  onclick=\"toggle(3);\">\n                            <li class=\"context-line\" id=\"context-3\">\n                                <code>      post = Post.new(params)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"post-context\"\n                  id=\"post-3\" onclick=\"toggle(3);\">\n                            <li class=\"post-context-line\">\n                                <code>      response = post.save\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      content_type :json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      status 201\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      body response.to_json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  \n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info app\">\n                        <code>C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;app&#x2F;controllers&#x2F;post.rb</code> in\n                        <code>\n                            <strong>block in &lt;class:PostsController&gt;</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"18\"\n                  class=\"pre-context\" id=\"pre-4\"\n                  onclick=\"toggle(4);\">\n                            <li class=\"pre-context-line\">\n                                <code>      status 200\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      body response.to_json\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    post &quot;&#x2F;posts&quot; do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      params = JSON.parse(request.body.read, symbolize_names: true)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    \n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"25\" class=\"context\" id=\"4\"\n                  onclick=\"toggle(4);\">\n                            <li class=\"context-line\" id=\"context-4\">\n                                <code>      post = Post.new(params)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"post-context\"\n                  id=\"post-4\" onclick=\"toggle(4);\">\n                            <li class=\"post-context-line\">\n                                <code>      response = post.save\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      content_type :json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      status 201\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      body response.to_json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  \n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1668\"\n                  class=\"pre-context\" id=\"pre-5\"\n                  onclick=\"toggle(5);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        pattern                 = compile(path, route_mustermann_opts)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        method_name             = &quot;#{verb} #{path}&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unbound_method          = generate_method(method_name, &amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        conditions, @conditions = @conditions, []\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        wrapper                 = block.arity != 0 ?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call(*p) } :\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1675\" class=\"context\" id=\"5\"\n                  onclick=\"toggle(5);\">\n                            <li class=\"context-line\" id=\"context-5\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1676\" class=\"post-context\"\n                  id=\"post-5\" onclick=\"toggle(5);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [ pattern, conditions, wrapper ]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def compile(path, route_mustermann_opts = {})\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        Mustermann.new(path, **mustermann_opts.merge(route_mustermann_opts))\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in compile!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1668\"\n                  class=\"pre-context\" id=\"pre-6\"\n                  onclick=\"toggle(6);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        pattern                 = compile(path, route_mustermann_opts)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        method_name             = &quot;#{verb} #{path}&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unbound_method          = generate_method(method_name, &amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        conditions, @conditions = @conditions, []\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        wrapper                 = block.arity != 0 ?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call(*p) } :\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1675\" class=\"context\" id=\"6\"\n                  onclick=\"toggle(6);\">\n                            <li class=\"context-line\" id=\"context-6\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1676\" class=\"post-context\"\n                  id=\"post-6\" onclick=\"toggle(6);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [ pattern, conditions, wrapper ]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def compile(path, route_mustermann_opts = {})\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        Mustermann.new(path, **mustermann_opts.merge(route_mustermann_opts))\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block (3 levels) in route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1006\"\n                  class=\"pre-context\" id=\"pre-7\"\n                  onclick=\"toggle(7);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        routes.each do |pattern, conditions, block|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1013\" class=\"context\" id=\"7\"\n                  onclick=\"toggle(7);\">\n                            <li class=\"context-line\" id=\"context-7\">\n                                <code>            route_eval { block[*args] }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1014\" class=\"post-context\"\n                  id=\"post-7\" onclick=\"toggle(7);\">\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          # don&#x27;t wipe out pass_block in superclass\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          pass_block = returned_pass_block if returned_pass_block\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route_eval</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1025\"\n                  class=\"pre-context\" id=\"pre-8\"\n                  onclick=\"toggle(8);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      route_eval(&amp;pass_block) if pass_block\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      route_missing\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run a route block and throw :halt with the result.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route_eval\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1032\" class=\"context\" id=\"8\"\n                  onclick=\"toggle(8);\">\n                            <li class=\"context-line\" id=\"context-8\">\n                                <code>      throw :halt, yield</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1033\" class=\"post-context\"\n                  id=\"post-8\" onclick=\"toggle(8);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # If the current request matches pattern and conditions, fill params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # with keys and call the given block.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Revert params afterwards.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Returns pass block.\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block (2 levels) in route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1006\"\n                  class=\"pre-context\" id=\"pre-9\"\n                  onclick=\"toggle(9);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        routes.each do |pattern, conditions, block|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1013\" class=\"context\" id=\"9\"\n                  onclick=\"toggle(9);\">\n                            <li class=\"context-line\" id=\"context-9\">\n                                <code>            route_eval { block[*args] }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1014\" class=\"post-context\"\n                  id=\"post-9\" onclick=\"toggle(9);\">\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          # don&#x27;t wipe out pass_block in superclass\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          pass_block = returned_pass_block if returned_pass_block\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in process_route</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1054\"\n                  class=\"pre-context\" id=\"pre-10\"\n                  onclick=\"toggle(10);\">\n                            <li class=\"pre-context-line\">\n                                <code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values += params.values.flatten\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      catch(:pass) do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1061\" class=\"context\" id=\"10\"\n                  onclick=\"toggle(10);\">\n                            <li class=\"context-line\" id=\"context-10\">\n                                <code>        block ? block[self, values] : yield(self, values)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1062\" class=\"post-context\"\n                  id=\"post-10\" onclick=\"toggle(10);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env[&#x27;sinatra.error.params&#x27;] = @params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      raise\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      params ||= {}\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      params.each { |k, _| @params.delete(k) } unless @env[&#x27;sinatra.error.params&#x27;]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1052\"\n                  class=\"pre-context\" id=\"pre-11\"\n                  onclick=\"toggle(11);\">\n                            <li class=\"pre-context-line\">\n                                <code>        captures           = pattern.match(route).captures.map { |c| URI_INSTANCE.unescape(c) if c }\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values            += captures\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values += params.values.flatten\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1059\" class=\"context\" id=\"11\"\n                  onclick=\"toggle(11);\">\n                            <li class=\"context-line\" id=\"context-11\">\n                                <code>      catch(:pass) do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1060\" class=\"post-context\"\n                  id=\"post-11\" onclick=\"toggle(11);\">\n                            <li class=\"post-context-line\">\n                                <code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        block ? block[self, values] : yield(self, values)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env[&#x27;sinatra.error.params&#x27;] = @params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      raise\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>process_route</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1052\"\n                  class=\"pre-context\" id=\"pre-12\"\n                  onclick=\"toggle(12);\">\n                            <li class=\"pre-context-line\">\n                                <code>        captures           = pattern.match(route).captures.map { |c| URI_INSTANCE.unescape(c) if c }\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values            += captures\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values += params.values.flatten\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1059\" class=\"context\" id=\"12\"\n                  onclick=\"toggle(12);\">\n                            <li class=\"context-line\" id=\"context-12\">\n                                <code>      catch(:pass) do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1060\" class=\"post-context\"\n                  id=\"post-12\" onclick=\"toggle(12);\">\n                            <li class=\"post-context-line\">\n                                <code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        block ? block[self, values] : yield(self, values)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env[&#x27;sinatra.error.params&#x27;] = @params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      raise\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1004\"\n                  class=\"pre-context\" id=\"pre-13\"\n                  onclick=\"toggle(13);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run routes defined on the class and all superclasses.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        routes.each do |pattern, conditions, block|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1011\" class=\"context\" id=\"13\"\n                  onclick=\"toggle(13);\">\n                            <li class=\"context-line\" id=\"context-13\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1012\" class=\"post-context\"\n                  id=\"post-13\" onclick=\"toggle(13);\">\n                            <li class=\"post-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            route_eval { block[*args] }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          # don&#x27;t wipe out pass_block in superclass\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          pass_block = returned_pass_block if returned_pass_block\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>each</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1001\"\n                  class=\"pre-context\" id=\"pre-14\"\n                  onclick=\"toggle(14);\">\n                            <li class=\"pre-context-line\">\n                                <code>        yield result if block_given?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run routes defined on the class and all superclasses.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1008\" class=\"context\" id=\"14\"\n                  onclick=\"toggle(14);\">\n                            <li class=\"context-line\" id=\"context-14\">\n                                <code>        routes.each do |pattern, conditions, block|</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1009\" class=\"post-context\"\n                  id=\"post-14\" onclick=\"toggle(14);\">\n                            <li class=\"post-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            route_eval { block[*args] }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1001\"\n                  class=\"pre-context\" id=\"pre-15\"\n                  onclick=\"toggle(15);\">\n                            <li class=\"pre-context-line\">\n                                <code>        yield result if block_given?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run routes defined on the class and all superclasses.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1008\" class=\"context\" id=\"15\"\n                  onclick=\"toggle(15);\">\n                            <li class=\"context-line\" id=\"context-15\">\n                                <code>        routes.each do |pattern, conditions, block|</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1009\" class=\"post-context\"\n                  id=\"post-15\" onclick=\"toggle(15);\">\n                            <li class=\"post-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            route_eval { block[*args] }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in dispatch!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1122\"\n                  class=\"pre-context\" id=\"pre-16\"\n                  onclick=\"toggle(16);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      invoke do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        filter! :before do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @pinned_response = !@response[&#x27;Content-Type&#x27;].nil?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1129\" class=\"context\" id=\"16\"\n                  onclick=\"toggle(16);\">\n                            <li class=\"context-line\" id=\"context-16\">\n                                <code>        route!</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1130\" class=\"post-context\"\n                  id=\"post-16\" onclick=\"toggle(16);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      invoke { handle_exception!(boom) }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      begin\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-17\"\n                  onclick=\"toggle(17);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"17\"\n                  onclick=\"toggle(17);\">\n                            <li class=\"context-line\" id=\"context-17\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-17\" onclick=\"toggle(17);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-18\"\n                  onclick=\"toggle(18);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"18\"\n                  onclick=\"toggle(18);\">\n                            <li class=\"context-line\" id=\"context-18\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-18\" onclick=\"toggle(18);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-19\"\n                  onclick=\"toggle(19);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"19\"\n                  onclick=\"toggle(19);\">\n                            <li class=\"context-line\" id=\"context-19\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-19\" onclick=\"toggle(19);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>dispatch!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1117\"\n                  class=\"pre-context\" id=\"pre-20\"\n                  onclick=\"toggle(20);\">\n                            <li class=\"pre-context-line\">\n                                <code>      # Avoid passing frozen string in force_encoding\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params.merge!(@request.params).each do |key, val|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        next unless val.respond_to?(:force_encoding)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        val = val.dup if val.frozen?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @params[key] = force_encoding(val)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1124\" class=\"context\" id=\"20\"\n                  onclick=\"toggle(20);\">\n                            <li class=\"context-line\" id=\"context-20\">\n                                <code>      invoke do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1125\" class=\"post-context\"\n                  id=\"post-20\" onclick=\"toggle(20);\">\n                            <li class=\"post-context-line\">\n                                <code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        filter! :before do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          @pinned_response = !@response[&#x27;Content-Type&#x27;].nil?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        route!\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in call!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"932\"\n                  class=\"pre-context\" id=\"pre-21\"\n                  onclick=\"toggle(21);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      template_cache.clear if settings.reload_templates\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"939\" class=\"context\" id=\"21\"\n                  onclick=\"toggle(21);\">\n                            <li class=\"context-line\" id=\"context-21\">\n                                <code>      invoke { dispatch! }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"940\" class=\"post-context\"\n                  id=\"post-21\" onclick=\"toggle(21);\">\n                            <li class=\"post-context-line\">\n                                <code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unless @response[&#x27;Content-Type&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type body[0].content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        elsif default = settings.default_content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type default\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-22\"\n                  onclick=\"toggle(22);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"22\"\n                  onclick=\"toggle(22);\">\n                            <li class=\"context-line\" id=\"context-22\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-22\" onclick=\"toggle(22);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-23\"\n                  onclick=\"toggle(23);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"23\"\n                  onclick=\"toggle(23);\">\n                            <li class=\"context-line\" id=\"context-23\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-23\" onclick=\"toggle(23);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-24\"\n                  onclick=\"toggle(24);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"24\"\n                  onclick=\"toggle(24);\">\n                            <li class=\"context-line\" id=\"context-24\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-24\" onclick=\"toggle(24);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"932\"\n                  class=\"pre-context\" id=\"pre-25\"\n                  onclick=\"toggle(25);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      template_cache.clear if settings.reload_templates\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"939\" class=\"context\" id=\"25\"\n                  onclick=\"toggle(25);\">\n                            <li class=\"context-line\" id=\"context-25\">\n                                <code>      invoke { dispatch! }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"940\" class=\"post-context\"\n                  id=\"post-25\" onclick=\"toggle(25);\">\n                            <li class=\"post-context-line\">\n                                <code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unless @response[&#x27;Content-Type&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type body[0].content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        elsif default = settings.default_content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type default\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"922\"\n                  class=\"pre-context\" id=\"pre-26\"\n                  onclick=\"toggle(26);\">\n                            <li class=\"pre-context-line\">\n                                <code>      @template_cache = Tilt::Cache.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @pinned_response = nil # whether a before! filter pinned the content-type\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      yield self if block_given?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Rack call interface.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"929\" class=\"context\" id=\"26\"\n                  onclick=\"toggle(26);\">\n                            <li class=\"context-line\" id=\"context-26\">\n                                <code>      dup.call!(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"930\" class=\"post-context\"\n                  id=\"post-26\" onclick=\"toggle(26);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-27\"\n                  onclick=\"toggle(27);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Options:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # xss_mode:: How the browser should prevent the attack (default: :block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class XSSHeader &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"18\" class=\"context\" id=\"27\"\n                  onclick=\"toggle(27);\">\n                            <li class=\"context-line\" id=\"context-27\">\n                                <code>        status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"19\" class=\"post-context\"\n                  id=\"post-27\" onclick=\"toggle(27);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"9\"\n                  class=\"pre-context\" id=\"pre-28\"\n                  onclick=\"toggle(28);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class PathTraversal &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        path_was         = env[&quot;PATH_INFO&quot;]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"16\" class=\"context\" id=\"28\"\n                  onclick=\"toggle(28);\">\n                            <li class=\"context-line\" id=\"context-28\">\n                                <code>        app.call env</code>\n                            </li>\n                        </ol>\n                        <ol start=\"17\" class=\"post-context\"\n                  id=\"post-28\" onclick=\"toggle(28);\">\n                            <li class=\"post-context-line\">\n                                <code>      ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = path_was\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def cleanup(path)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        encoding = path.encoding\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        dot   = &#x27;.&#x27;.encode(encoding)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"19\"\n                  class=\"pre-context\" id=\"pre-29\"\n                  onclick=\"toggle(29);\">\n                            <li class=\"pre-context-line\">\n                                <code>    class JsonCsrf &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :allow_if =&gt; nil\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      alias react deny\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        request               = Request.new(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"context\" id=\"29\"\n                  onclick=\"toggle(29);\">\n                            <li class=\"context-line\" id=\"context-29\">\n                                <code>        status, headers, body = app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"27\" class=\"post-context\"\n                  id=\"post-29\" onclick=\"toggle(29);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if has_vector?(request, headers)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          warn env, &quot;attack prevented by #{self.class}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          react_and_close(env, body) or [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          [status, headers, body]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-30\"\n                  onclick=\"toggle(30);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"30\"\n                  onclick=\"toggle(30);\">\n                            <li class=\"context-line\" id=\"context-30\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-30\" onclick=\"toggle(30);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-31\"\n                  onclick=\"toggle(31);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"31\"\n                  onclick=\"toggle(31);\">\n                            <li class=\"context-line\" id=\"context-31\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-31\" onclick=\"toggle(31);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-32\"\n                  onclick=\"toggle(32);\">\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options.to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"31\" class=\"context\" id=\"32\"\n                  onclick=\"toggle(32);\">\n                            <li class=\"context-line\" id=\"context-32\">\n                                <code>        status, headers, body        = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"32\" class=\"post-context\"\n                  id=\"post-32\" onclick=\"toggle(32);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;null_logger.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-33\"\n                  onclick=\"toggle(33);\">\n                            <li class=\"pre-context-line\">\n                                <code>  class NullLogger\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_LOGGER] = self\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"33\"\n                  onclick=\"toggle(33);\">\n                            <li class=\"context-line\" id=\"context-33\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-33\" onclick=\"toggle(33);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def info(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def debug(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def warn(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def error(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def fatal(progname = nil, &amp;block); end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"5\"\n                  class=\"pre-context\" id=\"pre-34\"\n                  onclick=\"toggle(34);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # all other requests unchanged.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class Head\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"context\" id=\"34\"\n                  onclick=\"toggle(34);\">\n                            <li class=\"context-line\" id=\"context-34\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"13\" class=\"post-context\"\n                  id=\"post-34\" onclick=\"toggle(34);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if env[REQUEST_METHOD] == HEAD\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status, headers, Rack::BodyProxy.new([]) do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            body.close if body.respond_to? :close\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"15\"\n                  class=\"pre-context\" id=\"pre-35\"\n                  onclick=\"toggle(35);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def @@eats_errors.puts(*) end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"22\" class=\"context\" id=\"35\"\n                  onclick=\"toggle(35);\">\n                            <li class=\"context-line\" id=\"context-35\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"post-context\"\n                  id=\"post-35\" onclick=\"toggle(35);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if prefers_plain_text?(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        content_type = &quot;text&#x2F;plain&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body = dump_exception(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"209\"\n                  class=\"pre-context\" id=\"pre-36\"\n                  onclick=\"toggle(36);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # Some Rack handlers (Rainbows!) implement an extended body object protocol, however,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # This middleware will detect an extended body object and will make sure it reaches the\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # handler directly. We do this here, so our middleware and middleware set up by the app will\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # still be able to run.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class ExtendedRack &lt; Struct.new(:app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"216\" class=\"context\" id=\"36\"\n                  onclick=\"toggle(36);\">\n                            <li class=\"context-line\" id=\"context-36\">\n                                <code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code>\n                            </li>\n                        </ol>\n                        <ol start=\"217\" class=\"post-context\"\n                  id=\"post-36\" onclick=\"toggle(36);\">\n                            <li class=\"post-context-line\">\n                                <code>      return result unless callback and async?(*result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      after_response { callback.call result }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      setup_close(env, *result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      throw :async\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1984\"\n                  class=\"pre-context\" id=\"pre-37\"\n                  onclick=\"toggle(37);\">\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def helpers\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @instance\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1991\" class=\"context\" id=\"37\"\n                  onclick=\"toggle(37);\">\n                            <li class=\"context-line\" id=\"context-37\">\n                                <code>      @stack.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1992\" class=\"post-context\"\n                  id=\"post-37\" onclick=\"toggle(37);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def inspect\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>forward</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"979\"\n                  class=\"pre-context\" id=\"pre-38\"\n                  onclick=\"toggle(38);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def pass(&amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      throw :pass, block\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Forward the request to the downstream app -- middleware only.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def forward\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      fail &quot;downstream app not set&quot; unless @app.respond_to? :call\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"986\" class=\"context\" id=\"38\"\n                  onclick=\"toggle(38);\">\n                            <li class=\"context-line\" id=\"context-38\">\n                                <code>      status, headers, body = @app.call env</code>\n                            </li>\n                        </ol>\n                        <ol start=\"987\" class=\"post-context\"\n                  id=\"post-38\" onclick=\"toggle(38);\">\n                            <li class=\"post-context-line\">\n                                <code>      @response.status = status\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @response.body = body\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @response.headers.merge! headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      nil\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route_missing</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1071\"\n                  class=\"pre-context\" id=\"pre-39\"\n                  onclick=\"toggle(39);\">\n                            <li class=\"pre-context-line\">\n                                <code>    # No matching route was found or all routes passed. The default\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # implementation is to forward the request downstream when running\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # as middleware (@app is non-nil); when no downstream app is set, raise\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # a NotFound exception. Subclasses can override this method to perform\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # custom route miss logic.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route_missing\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if @app\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1078\" class=\"context\" id=\"39\"\n                  onclick=\"toggle(39);\">\n                            <li class=\"context-line\" id=\"context-39\">\n                                <code>        forward</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1079\" class=\"post-context\"\n                  id=\"post-39\" onclick=\"toggle(39);\">\n                            <li class=\"post-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        raise NotFound, &quot;#{request.request_method} #{request.path_info}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Attempt to serve static files from public directory. Throws :halt when\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # a matching file is found, returns nil otherwise.\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1020\"\n                  class=\"pre-context\" id=\"pre-40\"\n                  onclick=\"toggle(40);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # Run routes defined in superclass.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if base.superclass.respond_to?(:routes)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        return route!(base.superclass, pass_block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      route_eval(&amp;pass_block) if pass_block\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1027\" class=\"context\" id=\"40\"\n                  onclick=\"toggle(40);\">\n                            <li class=\"context-line\" id=\"context-40\">\n                                <code>      route_missing</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1028\" class=\"post-context\"\n                  id=\"post-40\" onclick=\"toggle(40);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Run a route block and throw :halt with the result.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def route_eval\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      throw :halt, yield\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1016\"\n                  class=\"pre-context\" id=\"pre-41\"\n                  onclick=\"toggle(41);\">\n                            <li class=\"pre-context-line\">\n                                <code>          # don&#x27;t wipe out pass_block in superclass\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          pass_block = returned_pass_block if returned_pass_block\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # Run routes defined in superclass.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if base.superclass.respond_to?(:routes)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1023\" class=\"context\" id=\"41\"\n                  onclick=\"toggle(41);\">\n                            <li class=\"context-line\" id=\"context-41\">\n                                <code>        return route!(base.superclass, pass_block)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1024\" class=\"post-context\"\n                  id=\"post-41\" onclick=\"toggle(41);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      route_eval(&amp;pass_block) if pass_block\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      route_missing\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Run a route block and throw :halt with the result.\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in dispatch!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1122\"\n                  class=\"pre-context\" id=\"pre-42\"\n                  onclick=\"toggle(42);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      invoke do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        filter! :before do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @pinned_response = !@response[&#x27;Content-Type&#x27;].nil?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1129\" class=\"context\" id=\"42\"\n                  onclick=\"toggle(42);\">\n                            <li class=\"context-line\" id=\"context-42\">\n                                <code>        route!</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1130\" class=\"post-context\"\n                  id=\"post-42\" onclick=\"toggle(42);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      invoke { handle_exception!(boom) }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      begin\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-43\"\n                  onclick=\"toggle(43);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"43\"\n                  onclick=\"toggle(43);\">\n                            <li class=\"context-line\" id=\"context-43\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-43\" onclick=\"toggle(43);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-44\"\n                  onclick=\"toggle(44);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"44\"\n                  onclick=\"toggle(44);\">\n                            <li class=\"context-line\" id=\"context-44\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-44\" onclick=\"toggle(44);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-45\"\n                  onclick=\"toggle(45);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"45\"\n                  onclick=\"toggle(45);\">\n                            <li class=\"context-line\" id=\"context-45\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-45\" onclick=\"toggle(45);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>dispatch!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1117\"\n                  class=\"pre-context\" id=\"pre-46\"\n                  onclick=\"toggle(46);\">\n                            <li class=\"pre-context-line\">\n                                <code>      # Avoid passing frozen string in force_encoding\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params.merge!(@request.params).each do |key, val|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        next unless val.respond_to?(:force_encoding)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        val = val.dup if val.frozen?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @params[key] = force_encoding(val)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1124\" class=\"context\" id=\"46\"\n                  onclick=\"toggle(46);\">\n                            <li class=\"context-line\" id=\"context-46\">\n                                <code>      invoke do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1125\" class=\"post-context\"\n                  id=\"post-46\" onclick=\"toggle(46);\">\n                            <li class=\"post-context-line\">\n                                <code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        filter! :before do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          @pinned_response = !@response[&#x27;Content-Type&#x27;].nil?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        route!\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in call!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"932\"\n                  class=\"pre-context\" id=\"pre-47\"\n                  onclick=\"toggle(47);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      template_cache.clear if settings.reload_templates\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"939\" class=\"context\" id=\"47\"\n                  onclick=\"toggle(47);\">\n                            <li class=\"context-line\" id=\"context-47\">\n                                <code>      invoke { dispatch! }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"940\" class=\"post-context\"\n                  id=\"post-47\" onclick=\"toggle(47);\">\n                            <li class=\"post-context-line\">\n                                <code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unless @response[&#x27;Content-Type&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type body[0].content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        elsif default = settings.default_content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type default\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-48\"\n                  onclick=\"toggle(48);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"48\"\n                  onclick=\"toggle(48);\">\n                            <li class=\"context-line\" id=\"context-48\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-48\" onclick=\"toggle(48);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-49\"\n                  onclick=\"toggle(49);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"49\"\n                  onclick=\"toggle(49);\">\n                            <li class=\"context-line\" id=\"context-49\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-49\" onclick=\"toggle(49);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-50\"\n                  onclick=\"toggle(50);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"50\"\n                  onclick=\"toggle(50);\">\n                            <li class=\"context-line\" id=\"context-50\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-50\" onclick=\"toggle(50);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"932\"\n                  class=\"pre-context\" id=\"pre-51\"\n                  onclick=\"toggle(51);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      template_cache.clear if settings.reload_templates\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"939\" class=\"context\" id=\"51\"\n                  onclick=\"toggle(51);\">\n                            <li class=\"context-line\" id=\"context-51\">\n                                <code>      invoke { dispatch! }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"940\" class=\"post-context\"\n                  id=\"post-51\" onclick=\"toggle(51);\">\n                            <li class=\"post-context-line\">\n                                <code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unless @response[&#x27;Content-Type&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type body[0].content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        elsif default = settings.default_content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type default\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"922\"\n                  class=\"pre-context\" id=\"pre-52\"\n                  onclick=\"toggle(52);\">\n                            <li class=\"pre-context-line\">\n                                <code>      @template_cache = Tilt::Cache.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @pinned_response = nil # whether a before! filter pinned the content-type\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      yield self if block_given?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Rack call interface.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"929\" class=\"context\" id=\"52\"\n                  onclick=\"toggle(52);\">\n                            <li class=\"context-line\" id=\"context-52\">\n                                <code>      dup.call!(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"930\" class=\"post-context\"\n                  id=\"post-52\" onclick=\"toggle(52);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-53\"\n                  onclick=\"toggle(53);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Options:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # xss_mode:: How the browser should prevent the attack (default: :block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class XSSHeader &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"18\" class=\"context\" id=\"53\"\n                  onclick=\"toggle(53);\">\n                            <li class=\"context-line\" id=\"context-53\">\n                                <code>        status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"19\" class=\"post-context\"\n                  id=\"post-53\" onclick=\"toggle(53);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"9\"\n                  class=\"pre-context\" id=\"pre-54\"\n                  onclick=\"toggle(54);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class PathTraversal &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        path_was         = env[&quot;PATH_INFO&quot;]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"16\" class=\"context\" id=\"54\"\n                  onclick=\"toggle(54);\">\n                            <li class=\"context-line\" id=\"context-54\">\n                                <code>        app.call env</code>\n                            </li>\n                        </ol>\n                        <ol start=\"17\" class=\"post-context\"\n                  id=\"post-54\" onclick=\"toggle(54);\">\n                            <li class=\"post-context-line\">\n                                <code>      ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = path_was\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def cleanup(path)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        encoding = path.encoding\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        dot   = &#x27;.&#x27;.encode(encoding)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"19\"\n                  class=\"pre-context\" id=\"pre-55\"\n                  onclick=\"toggle(55);\">\n                            <li class=\"pre-context-line\">\n                                <code>    class JsonCsrf &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :allow_if =&gt; nil\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      alias react deny\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        request               = Request.new(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"context\" id=\"55\"\n                  onclick=\"toggle(55);\">\n                            <li class=\"context-line\" id=\"context-55\">\n                                <code>        status, headers, body = app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"27\" class=\"post-context\"\n                  id=\"post-55\" onclick=\"toggle(55);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if has_vector?(request, headers)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          warn env, &quot;attack prevented by #{self.class}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          react_and_close(env, body) or [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          [status, headers, body]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-56\"\n                  onclick=\"toggle(56);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"56\"\n                  onclick=\"toggle(56);\">\n                            <li class=\"context-line\" id=\"context-56\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-56\" onclick=\"toggle(56);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-57\"\n                  onclick=\"toggle(57);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"57\"\n                  onclick=\"toggle(57);\">\n                            <li class=\"context-line\" id=\"context-57\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-57\" onclick=\"toggle(57);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-58\"\n                  onclick=\"toggle(58);\">\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options.to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"31\" class=\"context\" id=\"58\"\n                  onclick=\"toggle(58);\">\n                            <li class=\"context-line\" id=\"context-58\">\n                                <code>        status, headers, body        = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"32\" class=\"post-context\"\n                  id=\"post-58\" onclick=\"toggle(58);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;null_logger.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-59\"\n                  onclick=\"toggle(59);\">\n                            <li class=\"pre-context-line\">\n                                <code>  class NullLogger\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_LOGGER] = self\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"59\"\n                  onclick=\"toggle(59);\">\n                            <li class=\"context-line\" id=\"context-59\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-59\" onclick=\"toggle(59);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def info(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def debug(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def warn(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def error(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def fatal(progname = nil, &amp;block); end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"5\"\n                  class=\"pre-context\" id=\"pre-60\"\n                  onclick=\"toggle(60);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # all other requests unchanged.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class Head\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"context\" id=\"60\"\n                  onclick=\"toggle(60);\">\n                            <li class=\"context-line\" id=\"context-60\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"13\" class=\"post-context\"\n                  id=\"post-60\" onclick=\"toggle(60);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if env[REQUEST_METHOD] == HEAD\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status, headers, Rack::BodyProxy.new([]) do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            body.close if body.respond_to? :close\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"15\"\n                  class=\"pre-context\" id=\"pre-61\"\n                  onclick=\"toggle(61);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def @@eats_errors.puts(*) end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"22\" class=\"context\" id=\"61\"\n                  onclick=\"toggle(61);\">\n                            <li class=\"context-line\" id=\"context-61\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"post-context\"\n                  id=\"post-61\" onclick=\"toggle(61);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if prefers_plain_text?(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        content_type = &quot;text&#x2F;plain&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body = dump_exception(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"209\"\n                  class=\"pre-context\" id=\"pre-62\"\n                  onclick=\"toggle(62);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # Some Rack handlers (Rainbows!) implement an extended body object protocol, however,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # This middleware will detect an extended body object and will make sure it reaches the\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # handler directly. We do this here, so our middleware and middleware set up by the app will\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # still be able to run.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class ExtendedRack &lt; Struct.new(:app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"216\" class=\"context\" id=\"62\"\n                  onclick=\"toggle(62);\">\n                            <li class=\"context-line\" id=\"context-62\">\n                                <code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code>\n                            </li>\n                        </ol>\n                        <ol start=\"217\" class=\"post-context\"\n                  id=\"post-62\" onclick=\"toggle(62);\">\n                            <li class=\"post-context-line\">\n                                <code>      return result unless callback and async?(*result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      after_response { callback.call result }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      setup_close(env, *result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      throw :async\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1984\"\n                  class=\"pre-context\" id=\"pre-63\"\n                  onclick=\"toggle(63);\">\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def helpers\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @instance\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1991\" class=\"context\" id=\"63\"\n                  onclick=\"toggle(63);\">\n                            <li class=\"context-line\" id=\"context-63\">\n                                <code>      @stack.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1992\" class=\"post-context\"\n                  id=\"post-63\" onclick=\"toggle(63);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def inspect\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-64\"\n                  onclick=\"toggle(64);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Options:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # xss_mode:: How the browser should prevent the attack (default: :block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class XSSHeader &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"18\" class=\"context\" id=\"64\"\n                  onclick=\"toggle(64);\">\n                            <li class=\"context-line\" id=\"context-64\">\n                                <code>        status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"19\" class=\"post-context\"\n                  id=\"post-64\" onclick=\"toggle(64);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"9\"\n                  class=\"pre-context\" id=\"pre-65\"\n                  onclick=\"toggle(65);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class PathTraversal &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        path_was         = env[&quot;PATH_INFO&quot;]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"16\" class=\"context\" id=\"65\"\n                  onclick=\"toggle(65);\">\n                            <li class=\"context-line\" id=\"context-65\">\n                                <code>        app.call env</code>\n                            </li>\n                        </ol>\n                        <ol start=\"17\" class=\"post-context\"\n                  id=\"post-65\" onclick=\"toggle(65);\">\n                            <li class=\"post-context-line\">\n                                <code>      ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = path_was\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def cleanup(path)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        encoding = path.encoding\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        dot   = &#x27;.&#x27;.encode(encoding)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"19\"\n                  class=\"pre-context\" id=\"pre-66\"\n                  onclick=\"toggle(66);\">\n                            <li class=\"pre-context-line\">\n                                <code>    class JsonCsrf &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :allow_if =&gt; nil\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      alias react deny\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        request               = Request.new(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"context\" id=\"66\"\n                  onclick=\"toggle(66);\">\n                            <li class=\"context-line\" id=\"context-66\">\n                                <code>        status, headers, body = app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"27\" class=\"post-context\"\n                  id=\"post-66\" onclick=\"toggle(66);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if has_vector?(request, headers)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          warn env, &quot;attack prevented by #{self.class}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          react_and_close(env, body) or [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          [status, headers, body]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-67\"\n                  onclick=\"toggle(67);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"67\"\n                  onclick=\"toggle(67);\">\n                            <li class=\"context-line\" id=\"context-67\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-67\" onclick=\"toggle(67);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-68\"\n                  onclick=\"toggle(68);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"68\"\n                  onclick=\"toggle(68);\">\n                            <li class=\"context-line\" id=\"context-68\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-68\" onclick=\"toggle(68);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-69\"\n                  onclick=\"toggle(69);\">\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options.to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"31\" class=\"context\" id=\"69\"\n                  onclick=\"toggle(69);\">\n                            <li class=\"context-line\" id=\"context-69\">\n                                <code>        status, headers, body        = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"32\" class=\"post-context\"\n                  id=\"post-69\" onclick=\"toggle(69);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;null_logger.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-70\"\n                  onclick=\"toggle(70);\">\n                            <li class=\"pre-context-line\">\n                                <code>  class NullLogger\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_LOGGER] = self\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"70\"\n                  onclick=\"toggle(70);\">\n                            <li class=\"context-line\" id=\"context-70\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-70\" onclick=\"toggle(70);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def info(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def debug(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def warn(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def error(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def fatal(progname = nil, &amp;block); end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"5\"\n                  class=\"pre-context\" id=\"pre-71\"\n                  onclick=\"toggle(71);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # all other requests unchanged.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class Head\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"context\" id=\"71\"\n                  onclick=\"toggle(71);\">\n                            <li class=\"context-line\" id=\"context-71\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"13\" class=\"post-context\"\n                  id=\"post-71\" onclick=\"toggle(71);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if env[REQUEST_METHOD] == HEAD\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status, headers, Rack::BodyProxy.new([]) do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            body.close if body.respond_to? :close\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"15\"\n                  class=\"pre-context\" id=\"pre-72\"\n                  onclick=\"toggle(72);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def @@eats_errors.puts(*) end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"22\" class=\"context\" id=\"72\"\n                  onclick=\"toggle(72);\">\n                            <li class=\"context-line\" id=\"context-72\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"post-context\"\n                  id=\"post-72\" onclick=\"toggle(72);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if prefers_plain_text?(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        content_type = &quot;text&#x2F;plain&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body = dump_exception(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"209\"\n                  class=\"pre-context\" id=\"pre-73\"\n                  onclick=\"toggle(73);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # Some Rack handlers (Rainbows!) implement an extended body object protocol, however,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # This middleware will detect an extended body object and will make sure it reaches the\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # handler directly. We do this here, so our middleware and middleware set up by the app will\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # still be able to run.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class ExtendedRack &lt; Struct.new(:app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"216\" class=\"context\" id=\"73\"\n                  onclick=\"toggle(73);\">\n                            <li class=\"context-line\" id=\"context-73\">\n                                <code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code>\n                            </li>\n                        </ol>\n                        <ol start=\"217\" class=\"post-context\"\n                  id=\"post-73\" onclick=\"toggle(73);\">\n                            <li class=\"post-context-line\">\n                                <code>      return result unless callback and async?(*result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      after_response { callback.call result }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      setup_close(env, *result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      throw :async\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1984\"\n                  class=\"pre-context\" id=\"pre-74\"\n                  onclick=\"toggle(74);\">\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def helpers\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @instance\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1991\" class=\"context\" id=\"74\"\n                  onclick=\"toggle(74);\">\n                            <li class=\"context-line\" id=\"context-74\">\n                                <code>      @stack.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1992\" class=\"post-context\"\n                  id=\"post-74\" onclick=\"toggle(74);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def inspect\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1535\"\n                  class=\"pre-context\" id=\"pre-75\"\n                  onclick=\"toggle(75);\">\n                            <li class=\"pre-context-line\">\n                                <code>        setup_default_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        setup_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder.run app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1542\" class=\"context\" id=\"75\"\n                  onclick=\"toggle(75);\">\n                            <li class=\"context-line\" id=\"context-75\">\n                                <code>        synchronize { prototype.call(env) }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1543\" class=\"post-context\"\n                  id=\"post-75\" onclick=\"toggle(75);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # Like Kernel#caller but excluding certain magic entries and without\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def caller_files\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        cleaned_caller(1).flatten\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>synchronize</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1762\"\n                  class=\"pre-context\" id=\"pre-76\"\n                  onclick=\"toggle(76);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @@mutex = Mutex.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def synchronize(&amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        if lock?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @@mutex.synchronize(&amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1769\" class=\"context\" id=\"76\"\n                  onclick=\"toggle(76);\">\n                            <li class=\"context-line\" id=\"context-76\">\n                                <code>          yield</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1770\" class=\"post-context\"\n                  id=\"post-76\" onclick=\"toggle(76);\">\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # used for deprecation warnings\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def warn(message)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        super message + &quot;\\n\\tfrom #{cleaned_caller.first.join(&#x27;:&#x27;)}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1535\"\n                  class=\"pre-context\" id=\"pre-77\"\n                  onclick=\"toggle(77);\">\n                            <li class=\"pre-context-line\">\n                                <code>        setup_default_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        setup_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder.run app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1542\" class=\"context\" id=\"77\"\n                  onclick=\"toggle(77);\">\n                            <li class=\"context-line\" id=\"context-77\">\n                                <code>        synchronize { prototype.call(env) }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1543\" class=\"post-context\"\n                  id=\"post-77\" onclick=\"toggle(77);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # Like Kernel#caller but excluding certain magic entries and without\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def caller_files\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        cleaned_caller(1).flatten\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;tempfile_reaper.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"8\"\n                  class=\"pre-context\" id=\"pre-78\"\n                  onclick=\"toggle(78);\">\n                            <li class=\"pre-context-line\">\n                                <code>  class TempfileReaper\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_TEMPFILES] ||= []\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"15\" class=\"context\" id=\"78\"\n                  onclick=\"toggle(78);\">\n                            <li class=\"context-line\" id=\"context-78\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"16\" class=\"post-context\"\n                  id=\"post-78\" onclick=\"toggle(78);\">\n                            <li class=\"post-context-line\">\n                                <code>      body_proxy = BodyProxy.new(body) do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        env[RACK_TEMPFILES].each(&amp;:close!) unless env[RACK_TEMPFILES].nil?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      [status, headers, body_proxy]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in\n                        <code>\n                            <strong>_call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-79\"\n                  onclick=\"toggle(79);\">\n                            <li class=\"pre-context-line\">\n                                <code>      assert(&quot;No env given&quot;) { env }\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      check_env env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_INPUT] = InputWrapper.new(env[RACK_INPUT])\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_ERRORS] = ErrorWrapper.new(env[RACK_ERRORS])\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      ## and returns an Array of exactly three values:\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"79\"\n                  onclick=\"toggle(79);\">\n                            <li class=\"context-line\" id=\"context-79\">\n                                <code>      ary = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-79\" onclick=\"toggle(79);\">\n                            <li class=\"post-context-line\">\n                                <code>      assert(&quot;response #{ary.inspect} is not an Array , but #{ary.class}&quot;) {\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ary.kind_of? Array\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      assert(&quot;response array #{ary.inspect} has #{ary.size} elements instead of 3&quot;) {\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ary.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"31\"\n                  class=\"pre-context\" id=\"pre-80\"\n                  onclick=\"toggle(80);\">\n                            <li class=\"pre-context-line\">\n                                <code>    ## after to catch all mistakes.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    ## = Rack applications\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    ## A Rack application is a Ruby object (not a class) that\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    ## responds to +call+.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env = nil)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"38\" class=\"context\" id=\"80\"\n                  onclick=\"toggle(80);\">\n                            <li class=\"context-line\" id=\"context-80\">\n                                <code>      dup._call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"39\" class=\"post-context\"\n                  id=\"post-80\" onclick=\"toggle(80);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def _call(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      ## It takes exactly one argument, the *environment*\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      assert(&quot;No env given&quot;) { env }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      check_env env\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;show_exceptions.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"16\"\n                  class=\"pre-context\" id=\"pre-81\"\n                  onclick=\"toggle(81);\">\n                            <li class=\"pre-context-line\">\n                                <code>    CONTEXT = 7\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"context\" id=\"81\"\n                  onclick=\"toggle(81);\">\n                            <li class=\"context-line\" id=\"context-81\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"24\" class=\"post-context\"\n                  id=\"post-81\" onclick=\"toggle(81);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue StandardError, LoadError, SyntaxError =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      exception_string = dump_exception(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      env[RACK_ERRORS].puts(exception_string)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      env[RACK_ERRORS].flush\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if accepts_html?(env)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;common_logger.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"31\"\n                  class=\"pre-context\" id=\"pre-82\"\n                  onclick=\"toggle(82);\">\n                            <li class=\"pre-context-line\">\n                                <code>    # will not be logged, so if exception handling middleware are used,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # they should be loaded after this middleware.  Additionally, because\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # the logging happens after the request body has been fully sent, any\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # exceptions raised during the sending of the response body will\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # cause the request not to be logged.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      began_at = Utils.clock_time\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"38\" class=\"context\" id=\"82\"\n                  onclick=\"toggle(82);\">\n                            <li class=\"context-line\" id=\"context-82\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"39\" class=\"post-context\"\n                  id=\"post-82\" onclick=\"toggle(82);\">\n                            <li class=\"post-context-line\">\n                                <code>      headers = Utils::HeaderHash[headers]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"246\"\n                  class=\"pre-context\" id=\"pre-83\"\n                  onclick=\"toggle(83);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.commonlogger&#x27;] ? @app.call(env) : super\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    superclass.class_eval do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      alias call_without_check call unless method_defined? :call_without_check\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[&#x27;sinatra.commonlogger&#x27;] = true\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"253\" class=\"context\" id=\"83\"\n                  onclick=\"toggle(83);\">\n                            <li class=\"context-line\" id=\"context-83\">\n                                <code>        call_without_check(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"254\" class=\"post-context\"\n                  id=\"post-83\" onclick=\"toggle(83);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  class BadRequest &lt; TypeError #:nodoc:\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def http_status; 400 end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;content_length.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"10\"\n                  class=\"pre-context\" id=\"pre-84\"\n                  onclick=\"toggle(84);\">\n                            <li class=\"pre-context-line\">\n                                <code>    include Rack::Utils\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"17\" class=\"context\" id=\"84\"\n                  onclick=\"toggle(84);\">\n                            <li class=\"context-line\" id=\"context-84\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"18\" class=\"post-context\"\n                  id=\"post-84\" onclick=\"toggle(84);\">\n                            <li class=\"post-context-line\">\n                                <code>      headers = HeaderHash[headers]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if !STATUS_WITH_NO_ENTITY_BODY.key?(status.to_i) &amp;&amp;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>         !headers[CONTENT_LENGTH] &amp;&amp;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>         !headers[TRANSFER_ENCODING]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        obody = body\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;configuration.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"242\"\n                  class=\"pre-context\" id=\"pre-85\"\n                  onclick=\"toggle(85);\">\n                            <li class=\"pre-context-line\">\n                                <code>      def initialize(config, app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @config = config\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[Const::PUMA_CONFIG] = @config\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"249\" class=\"context\" id=\"85\"\n                  onclick=\"toggle(85);\">\n                            <li class=\"context-line\" id=\"context-85\">\n                                <code>        @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"250\" class=\"post-context\"\n                  id=\"post-85\" onclick=\"toggle(85);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Indicate if there is a properly configured app\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def app_configured?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @options[:app] || File.exist?(rackup)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;request.rb</code> in\n                        <code>\n                            <strong>block in handle_request</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"70\"\n                  class=\"pre-context\" id=\"pre-86\"\n                  onclick=\"toggle(86);\">\n                            <li class=\"pre-context-line\">\n                                <code>      # array, we will invoke them when the request is done.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      after_reply = env[RACK_AFTER_REPLY] = []\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      begin\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        begin\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          status, headers, res_body = @thread_pool.with_force_shutdown do\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"77\" class=\"context\" id=\"86\"\n                  onclick=\"toggle(86);\">\n                            <li class=\"context-line\" id=\"context-86\">\n                                <code>            @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"78\" class=\"post-context\"\n                  id=\"post-86\" onclick=\"toggle(86);\">\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          return :async if client.hijacked\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status = status.to_i\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          if status == -1\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;thread_pool.rb</code> in\n                        <code>\n                            <strong>with_force_shutdown</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"331\"\n                  class=\"pre-context\" id=\"pre-87\"\n                  onclick=\"toggle(87);\">\n                            <li class=\"pre-context-line\">\n                                <code>    # provided block if the thread is forced to shutdown during execution.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def with_force_shutdown\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      t = Thread.current\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @shutdown_mutex.synchronize do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        raise ForceShutdown if @force_shutdown\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        t[:with_force_shutdown] = true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"338\" class=\"context\" id=\"87\"\n                  onclick=\"toggle(87);\">\n                            <li class=\"context-line\" id=\"context-87\">\n                                <code>      yield</code>\n                            </li>\n                        </ol>\n                        <ol start=\"339\" class=\"post-context\"\n                  id=\"post-87\" onclick=\"toggle(87);\">\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      t[:with_force_shutdown] = false\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Tell all threads in the pool to exit and wait for them to finish.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Wait +timeout+ seconds then raise +ForceShutdown+ in remaining threads.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Next, wait an extra +grace+ seconds then force-kill remaining threads.\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;request.rb</code> in\n                        <code>\n                            <strong>handle_request</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"69\"\n                  class=\"pre-context\" id=\"pre-88\"\n                  onclick=\"toggle(88);\">\n                            <li class=\"pre-context-line\">\n                                <code>      # A rack extension. If the app writes #call&#x27;ables to this\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # array, we will invoke them when the request is done.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      after_reply = env[RACK_AFTER_REPLY] = []\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      begin\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        begin\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"76\" class=\"context\" id=\"88\"\n                  onclick=\"toggle(88);\">\n                            <li class=\"context-line\" id=\"context-88\">\n                                <code>          status, headers, res_body = @thread_pool.with_force_shutdown do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"77\" class=\"post-context\"\n                  id=\"post-88\" onclick=\"toggle(88);\">\n                            <li class=\"post-context-line\">\n                                <code>            @app.call(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          return :async if client.hijacked\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status = status.to_i\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;server.rb</code> in\n                        <code>\n                            <strong>process_client</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"431\"\n                  class=\"pre-context\" id=\"pre-89\"\n                  onclick=\"toggle(89);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        with_force_shutdown(client) do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          client.finish(@first_data_timeout)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        while true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @requests_count += 1\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"438\" class=\"context\" id=\"89\"\n                  onclick=\"toggle(89);\">\n                            <li class=\"context-line\" id=\"context-89\">\n                                <code>          case handle_request(client, buffer, requests + 1)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"439\" class=\"post-context\"\n                  id=\"post-89\" onclick=\"toggle(89);\">\n                            <li class=\"post-context-line\">\n                                <code>          when false\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            break\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          when :async\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            close_socket = false\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            break\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          when true\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            buffer.reset\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;thread_pool.rb</code> in\n                        <code>\n                            <strong>block in spawn_thread</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"138\"\n                  class=\"pre-context\" id=\"pre-90\"\n                  onclick=\"toggle(90);\">\n                            <li class=\"pre-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          if @clean_thread_locals\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>            ThreadPool.clean_thread_locals\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          begin\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"145\" class=\"context\" id=\"90\"\n                  onclick=\"toggle(90);\">\n                            <li class=\"context-line\" id=\"context-90\">\n                                <code>            @out_of_band_pending = true if block.call(work, *extra)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"146\" class=\"post-context\"\n                  id=\"post-90\" onclick=\"toggle(90);\">\n                            <li class=\"post-context-line\">\n                                <code>          rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            STDERR.puts &quot;Error reached top of thread-pool: #{e.message} (#{e.class})&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @workers &lt;&lt; th\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                </ul>\n            </div>\n            <!-- /BACKTRACE -->\n            <div id=\"get\">\n                <h3 id=\"get-info\">GET</h3>\n                <p class=\"no-data\">No GET data.</p>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /GET -->\n            <div id=\"post\">\n                <h3 id=\"post-info\">POST</h3>\n                <p class=\"no-data\">No POST data.</p>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /POST -->\n            <div id=\"cookies\">\n                <h3 id=\"cookie-info\">COOKIES</h3>\n                <p class=\"no-data\">No cookie data.</p>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /COOKIES -->\n            <div id=\"rack\">\n                <h3 id=\"env-info\">Rack ENV</h3>\n                <table class=\"req\">\n                    <tr>\n                        <th>Variable</th>\n                        <th>Value</th>\n                    </tr>\n                    <tr>\n                        <td>CONTENT_LENGTH</td>\n                        <td class=\"code\">\n                            <div>26</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CONTENT_TYPE</td>\n                        <td class=\"code\">\n                            <div>application&#x2F;json</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>GATEWAY_INTERFACE</td>\n                        <td class=\"code\">\n                            <div>CGI&#x2F;1.2</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_ACCEPT</td>\n                        <td class=\"code\">\n                            <div>*&#x2F;*</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_ACCEPT_ENCODING</td>\n                        <td class=\"code\">\n                            <div>gzip, deflate, br</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_CONNECTION</td>\n                        <td class=\"code\">\n                            <div>keep-alive</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_HOST</td>\n                        <td class=\"code\">\n                            <div>localhost:4567</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_POSTMAN_TOKEN</td>\n                        <td class=\"code\">\n                            <div>b3bed332-9ee6-44ee-9a7c-fd2fe4a1604e</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_USER_AGENT</td>\n                        <td class=\"code\">\n                            <div>PostmanRuntime&#x2F;7.28.3</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_VERSION</td>\n                        <td class=\"code\">\n                            <div>HTTP&#x2F;1.1</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PATH_INFO</td>\n                        <td class=\"code\">\n                            <div>&#x2F;posts</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>QUERY_STRING</td>\n                        <td class=\"code\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REMOTE_ADDR</td>\n                        <td class=\"code\">\n                            <div>::1</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REQUEST_METHOD</td>\n                        <td class=\"code\">\n                            <div>POST</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REQUEST_PATH</td>\n                        <td class=\"code\">\n                            <div>&#x2F;posts</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REQUEST_URI</td>\n                        <td class=\"code\">\n                            <div>&#x2F;posts</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SCRIPT_NAME</td>\n                        <td class=\"code\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_NAME</td>\n                        <td class=\"code\">\n                            <div>localhost</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_PORT</td>\n                        <td class=\"code\">\n                            <div>4567</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_PROTOCOL</td>\n                        <td class=\"code\">\n                            <div>HTTP&#x2F;1.1</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_SOFTWARE</td>\n                        <td class=\"code\">\n                            <div>puma 5.3.2 Sweetnighter</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>puma.config</td>\n                        <td class=\"code\">\n                            <div>#&lt;Puma::Configuration:0x000002935beb4538 @options=#&lt;Puma::UserFileDefaultOptions:0x000002935bec7f70 @user_options={:environment=&gt;&quot;development&quot;, :pid=&gt;nil, :Port=&gt;&quot;4567&quot;, :Host=&gt;&quot;localhost&quot;, :AccessLog=&gt;[], :config=&gt;&quot;C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;config.ru&quot;, :binds=&gt;[&quot;tcp:&#x2F;&#x2F;localhost:4567&quot;], :app=&gt;#&lt;Rack::ContentLength:0x000002935b552530 @app=#&lt;Rack::CommonLogger:0x000002935b5525f8 @app=#&lt;Rack::ShowExceptions:0x000002935b742ef8 @app=#&lt;Rack::Lint:0x000002935b742fc0 @app=#&lt;Rack::TempfileReaper:0x000002935b743088 @app=MainApp&gt;, @content_length=nil&gt;&gt;, @logger=#&lt;IO:&lt;STDERR&gt;&gt;&gt;&gt;}, @file_options={}, @default_options={:min_threads=&gt;0, :max_threads=&gt;5, :log_requests=&gt;false, :debug=&gt;false, :binds=&gt;[&quot;tcp:&#x2F;&#x2F;0.0.0.0:9292&quot;], :workers=&gt;0, :silence_single_worker_warning=&gt;false, :mode=&gt;:http, :worker_timeout=&gt;60, :worker_boot_timeout=&gt;60, :worker_shutdown_timeout=&gt;30, :remote_address=&gt;:socket, :tag=&gt;&quot;final-project&quot;, :environment=&gt;&quot;development&quot;, :rackup=&gt;&quot;config.ru&quot;, :logger=&gt;#&lt;IO:&lt;STDOUT&gt;&gt;, :persistent_timeout=&gt;20, :first_data_timeout=&gt;30, :raise_exception_on_sigterm=&gt;true, :max_fast_inline=&gt;10, :io_selector_backend=&gt;:auto, :mutate_stdout_and_stderr_to_sync_on_write=&gt;true, :Verbose=&gt;false, :Silent=&gt;false, :preload_app=&gt;false}&gt;, @plugins=#&lt;Puma::PluginLoader:0x000002935bec7ea8 @instances=[]&gt;, @user_dsl=#&lt;Puma::DSL:0x000002935bec7db8 @config=#&lt;Puma::Configuration:0x000002935beb4538 ...&gt;, @options={:environment=&gt;&quot;development&quot;, :pid=&gt;nil, :Port=&gt;&quot;4567&quot;, :Host=&gt;&quot;localhost&quot;, :AccessLog=&gt;[], :config=&gt;&quot;C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;config.ru&quot;, :binds=&gt;[&quot;tcp:&#x2F;&#x2F;localhost:4567&quot;], :app=&gt;#&lt;Rack::ContentLength:0x000002935b552530 @app=#&lt;Rack::CommonLogger:0x000002935b5525f8 @app=#&lt;Rack::ShowExceptions:0x000002935b742ef8 @app=#&lt;Rack::Lint:0x000002935b742fc0 @app=#&lt;Rack::TempfileReaper:0x000002935b743088 @app=MainApp&gt;, @content_length=nil&gt;&gt;, @logger=#&lt;IO:&lt;STDERR&gt;&gt;&gt;&gt;}, @plugins=[]&gt;, @file_dsl=#&lt;Puma::DSL:0x000002935bec7cf0 @config=#&lt;Puma::Configuration:0x000002935beb4538 ...&gt;, @options={}, @plugins=[]&gt;, @default_dsl=#&lt;Puma::DSL:0x000002935bec7c50 @config=#&lt;Puma::Configuration:0x000002935beb4538 ...&gt;, @options={:min_threads=&gt;0, :max_threads=&gt;5, :log_requests=&gt;false, :debug=&gt;false, :binds=&gt;[&quot;tcp:&#x2F;&#x2F;0.0.0.0:9292&quot;], :workers=&gt;0, :silence_single_worker_warning=&gt;false, :mode=&gt;:http, :worker_timeout=&gt;60, :worker_boot_timeout=&gt;60, :worker_shutdown_timeout=&gt;30, :remote_address=&gt;:socket, :tag=&gt;&quot;final-project&quot;, :environment=&gt;&quot;development&quot;, :rackup=&gt;&quot;config.ru&quot;, :logger=&gt;#&lt;IO:&lt;STDOUT&gt;&gt;, :persistent_timeout=&gt;20, :first_data_timeout=&gt;30, :raise_exception_on_sigterm=&gt;true, :max_fast_inline=&gt;10, :io_selector_backend=&gt;:auto, :mutate_stdout_and_stderr_to_sync_on_write=&gt;true, :Verbose=&gt;false, :Silent=&gt;false, :preload_app=&gt;false}, @plugins=[]&gt;&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>puma.request_body_wait</td>\n                        <td class=\"code\">\n                            <div>0</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>puma.socket</td>\n                        <td class=\"code\">\n                            <div>#&lt;TCPSocket:fd 10, AF_INET6, ::1, 4567&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.after_reply</td>\n                        <td class=\"code\">\n                            <div>[]</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.errors</td>\n                        <td class=\"code\">\n                            <div>#&lt;Object:0x000002935b559c18&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.hijack</td>\n                        <td class=\"code\">\n                            <div>#&lt;Proc:0x000002935ca59ca8 C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;lint.rb:567&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.hijack?</td>\n                        <td class=\"code\">\n                            <div>true</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.input</td>\n                        <td class=\"code\">\n                            <div>#&lt;Rack::Lint::InputWrapper:0x000002935ca59b90 @input=#&lt;StringIO:0x000002935bf59d08&gt;&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.logger</td>\n                        <td class=\"code\">\n                            <div>#&lt;Rack::NullLogger:0x000002935c00cd68 @app=#&lt;Rack::Protection::FrameOptions:0x000002935c00ced0 @app=#&lt;Rack::Protection::HttpOrigin:0x000002935c00d038 @app=#&lt;Rack::Protection::IPSpoofing:0x000002935c00d178 @app=#&lt;Rack::Protection::JsonCsrf:0x000002935c00d2e0 @app=#&lt;Rack::Protection::PathTraversal:0x000002935c00d420 @app=#&lt;Rack::Protection::XSSHeader:0x000002935c00d5d8 @app=#&lt;PostsController:0x000002935bf8dfb8 @default_layout=:layout, @preferred_extension=nil, @app=#&lt;MainApp:0x000002935bf71a98 @default_layout=:layout, @preferred_extension=nil, @app=nil, @template_cache=#&lt;Tilt::Cache:0x000002935bf71980 @cache={}&gt;, @pinned_response=nil&gt;, @template_cache=#&lt;Tilt::Cache:0x000002935bf8df40 @cache={}&gt;, @pinned_response=nil&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :xss_mode=&gt;:block, :nosniff=&gt;true, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :allow_if=&gt;nil, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :allow_if=&gt;nil, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :frame_options=&gt;:sameorigin, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.multiprocess</td>\n                        <td class=\"code\">\n                            <div>false</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.multithread</td>\n                        <td class=\"code\">\n                            <div>true</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.request.cookie_hash</td>\n                        <td class=\"code\">\n                            <div>{}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.request.query_hash</td>\n                        <td class=\"code\">\n                            <div>{}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.request.query_string</td>\n                        <td class=\"code\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.run_once</td>\n                        <td class=\"code\">\n                            <div>false</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.tempfiles</td>\n                        <td class=\"code\">\n                            <div>[]</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.url_scheme</td>\n                        <td class=\"code\">\n                            <div>http</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.version</td>\n                        <td class=\"code\">\n                            <div>[1, 6]</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.accept</td>\n                        <td class=\"code\">\n                            <div>[#&lt;Sinatra::Request::AcceptEntry:0x000002935cbce1b0 @entry=&quot;*&#x2F;*&quot;, @type=&quot;*&#x2F;*&quot;, @params={}, @q=1.0&gt;]</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.commonlogger</td>\n                        <td class=\"code\">\n                            <div>true</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.error</td>\n                        <td class=\"code\">\n                            <div>#&lt;KeyError: key not found: :content&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.error.params</td>\n                        <td class=\"code\">\n                            <div>{}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.route</td>\n                        <td class=\"code\">\n                            <div>POST &#x2F;posts</div>\n                        </td>\n                    </tr>\n                </table>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /RACK ENV -->\n            <p id=\"explanation\">You're seeing this error because you have\nenabled the \n                <code>show_exceptions</code> setting.\n            </p>\n        </div>\n        <!-- /WRAP -->\n  \n    </body>\n</html>"
						}
					]
				},
				{
					"name": "Show All Posts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/posts",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							]
						}
					},
					"response": [
						{
							"name": "Show All Posts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}:{{port}}/posts",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"posts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "265"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"4yo2iM6FI9R\",\n        \"content\": \"Lorem Ipsum 2 \",\n        \"attachment\": \"music.mp4\",\n        \"created_at\": \"2021-08-18 21:24:10 +0700\",\n        \"user_id\": \"DhgZP2FfyJz\"\n    },\n    {\n        \"id\": \"F99hUkOLPi1\",\n        \"content\": \"Lorem Ipsum\",\n        \"attachment\": \"\",\n        \"created_at\": \"2021-08-18 21:23:44 +0700\",\n        \"user_id\": \"DhgZP2FfyJz\"\n    }\n]"
						}
					]
				},
				{
					"name": "Show Posts based on hashtag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/posts/hashtag",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts",
								"hashtag"
							]
						}
					},
					"response": [
						{
							"name": "Show Posts based on hashtag",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}:{{port}}/posts/hashtag",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"posts",
										"hashtag"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "148"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"Hk0QMkXlCRk\",\n        \"content\": \"Lorem Ipsum 3 #hashtag \",\n        \"attachment\": \"music.pdf\",\n        \"created_at\": \"2021-08-18 22:15:28 +0700\",\n        \"user_id\": \"NBmF8LDMb3A\"\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Comment (run Post folder first)",
			"item": [
				{
					"name": "Create New Comment without hashtag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"Lorem Ipsum #hashtag\",\r\n    \"user_id\": \"{{dummy_id1}}\",\r\n    \"post_id\": \"{{dummy_id3}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/comments",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"comments"
							]
						}
					},
					"response": [
						{
							"name": "Create New Comment without hashtag",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"Lorem Ipsum #hashtag\",\r\n    \"user_id\": \"{{dummy_id1}}\",\r\n    \"post_id\": \"{{dummy_id3}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}/comments",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"comments"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "101"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"4sVSB78Cse3\",\n    \"content\": \"Lorem Ipsum #hashtag\",\n    \"user_id\": \"KJ9dvQSAm2V\",\n    \"post_id\": \"B_SfrhJRsvH\"\n}"
						}
					]
				},
				{
					"name": "Create New Comment Without Hashtag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"dummy_id4\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"Lorem Ipsum 2 \",\r\n    \"user_id\": \"{{dummy_id1}}\",\r\n    \"post_id\": \"{{dummy_id4}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/comments",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"comments"
							]
						}
					},
					"response": [
						{
							"name": "Create New Comment Without Hashtag",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"content\": \"Lorem Ipsum 2 \",\r\n    \"user_id\": \"{{dummy_id1}}\",\r\n    \"post_id\": \"{{dummy_id4}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}/comments",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"comments"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "95"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"heq9CehT651\",\n    \"content\": \"Lorem Ipsum 2 \",\n    \"user_id\": \"KJ9dvQSAm2V\",\n    \"post_id\": \"vcvK4CxgqPU\"\n}"
						}
					]
				},
				{
					"name": "Create New Comment Bad Payload",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"xxxxxx\": \"xxxxxx\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{host}}:{{port}}/posts",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"posts"
							]
						}
					},
					"response": [
						{
							"name": "Create New Comment Bad Payload",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"xxxxxx\": \"xxxxxx\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{host}}:{{port}}/posts",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"posts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/html"
								},
								{
									"key": "X-XSS-Protection",
									"value": "1; mode=block"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Content-Length",
									"value": "251253"
								}
							],
							"cookie": [],
							"body": "<!DOCTYPE html>\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"/>\n        <title>KeyError at &#x2F;posts</title>\n        <script type=\"text/javascript\">\n  //\n            <!--\n  function toggle(id) {\n    var pre  = document.getElementById(\"pre-\" + id);\n    var post = document.getElementById(\"post-\" + id);\n    var context = document.getElementById(\"context-\" + id);\n\n    if (pre.style.display == 'block') {\n      pre.style.display = 'none';\n      post.style.display = 'none';\n      context.style.background = \"none\";\n    } else {\n      pre.style.display = 'block';\n      post.style.display = 'block';\n      context.style.background = \"#fffed9\";\n    }\n  }\n\n  function toggleBacktrace(){\n    var bt = document.getElementById(\"backtrace\");\n    var toggler = document.getElementById(\"expando\");\n\n    if (bt.className == 'condensed') {\n      bt.className = 'expanded';\n      toggler.innerHTML = \"(condense)\";\n    } else {\n      bt.className = 'condensed';\n      toggler.innerHTML = \"(expand)\";\n    }\n  }\n  //-->\n  \n        </script>\n        <style type=\"text/css\" media=\"screen\">\n  *                   {margin: 0; padding: 0; border: 0; outline: 0;}\n  div.clear           {clear: both;}\n  body                {background: #EEEEEE; margin: 0; padding: 0;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',\n                       'Garuda';}\n  code                {font-family: 'Lucida Console', monospace;\n                       font-size: 12px;}\n  li                  {height: 18px;}\n  ul                  {list-style: none; margin: 0; padding: 0;}\n  ol:hover            {cursor: pointer;}\n  ol li               {white-space: pre;}\n  #explanation        {font-size: 12px; color: #666666;\n                       margin: 20px 0 0 100px;}\n/* WRAP */\n  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;\n                       padding: 30px 50px 20px 50px;\n                       border-left: 1px solid #DDDDDD;\n                       border-right: 1px solid #DDDDDD;}\n/* HEADER */\n  #header             {margin: 0 auto 25px auto;}\n  #header img         {float: left;}\n  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}\n  h1                  {margin: 0; font-size: 36px; color: #981919;}\n  h2                  {margin: 0; font-size: 22px; color: #333333;}\n  #header ul          {margin: 0; font-size: 12px; color: #666666;}\n  #header ul li strong{color: #444444;}\n  #header ul li       {display: inline; padding: 0 10px;}\n  #header ul li.first {padding-left: 0;}\n  #header ul li.last  {border: 0; padding-right: 0;}\n/* BODY */\n  #backtrace,\n  #get,\n  #post,\n  #cookies,\n  #rack               {width: 980px; margin: 0 auto 10px auto;}\n  p#nav               {float: right; font-size: 14px;}\n/* BACKTRACE */\n  a#expando           {float: left; padding-left: 5px; color: #666666;\n                      font-size: 14px; text-decoration: none; cursor: pointer;}\n  a#expando:hover     {text-decoration: underline;}\n  h3                  {float: left; width: 100px; margin-bottom: 10px;\n                       color: #981919; font-size: 14px; font-weight: bold;}\n  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}\n  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;\n                           font-size: 12px; color: #333333;}\n  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;\n                       border-bottom: 0;}\n  #backtrace ol       {width: 920px; margin-left: 50px;\n                       font: 10px 'Lucida Console', monospace; color: #666666;}\n  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;\n                       padding: 2px 0;}\n  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}\n  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;\n                       padding: 3px 0;}\n  #backtrace-ul .code {padding: 6px 0 4px 0;}\n  #backtrace.condensed .system,\n  #backtrace.condensed .framework {display:none;}\n/* REQUEST DATA */\n  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}\n  table.req           {width: 980px; text-align: left; font-size: 12px;\n                       color: #666666; padding: 0; border-spacing: 0;\n                       border: 1px solid #EEEEEE; border-bottom: 0;\n                       border-left: 0;\n                       clear:both}\n  table.req tr th     {padding: 2px 10px; font-weight: bold;\n                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n  table.req tr td     {padding: 2px 20px 2px 10px;\n                       border-bottom: 1px solid #EEEEEE;\n                       border-left: 1px solid #EEEEEE;}\n/* HIDE PRE/POST CODE AT START */\n  .pre-context,\n  .post-context       {display: none;}\n\n  table td.code       {width:750px}\n  table td.code div   {width:750px;overflow:hidden}\n</style>\n    </head>\n    <body>\n        <div id=\"wrap\">\n            <div id=\"header\">\n                <img src=\"/__sinatra__/500.png\" alt=\"application error\" height=\"161\" width=\"313\" />\n                <div id=\"summary\">\n                    <h1>\n                        <strong>KeyError</strong> at\n                        <strong>&#x2F;posts\n          </strong>\n                    </h1>\n                    <h2>key not found: :content</h2>\n                    <ul>\n                        <li class=\"first\">\n                            <strong>file:</strong>\n                            <code>\n            post.rb</code>\n                        </li>\n                        <li>\n                            <strong>location:</strong>\n                            <code>fetch\n            </code>\n                        </li>\n                        <li class=\"last\">\n                            <strong>line:\n            </strong> 11\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"clear\"></div>\n            </div>\n            <div id=\"backtrace\" class='condensed'>\n                <h3>BACKTRACE</h3>\n                <p>\n                    <a href=\"#\" id=\"expando\"\n            onclick=\"toggleBacktrace(); return false\">(expand)</a>\n                </p>\n                <p id=\"nav\">\n                    <strong>JUMP TO:</strong>\n                    <a href=\"#get-info\">GET</a>\n                    <a href=\"#post-info\">POST</a>\n                    <a href=\"#cookie-info\">COOKIES</a>\n                    <a href=\"#env-info\">ENV</a>\n                </p>\n                <div class=\"clear\"></div>\n                <ul id=\"backtrace-ul\">\n                    <li class=\"frame-info app\">\n                        <code>C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;app&#x2F;models&#x2F;post.rb</code> in\n                        <code>\n                            <strong>fetch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-1\"\n                  onclick=\"toggle(1);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>class Post\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_accessor :id, :content, :attachment, :user_id\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_reader :errors\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(attributes)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @id = attributes.fetch(:id, Nanoid.generate(size:11))\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"1\"\n                  onclick=\"toggle(1);\">\n                            <li class=\"context-line\" id=\"context-1\">\n                                <code>      @content = attributes.fetch(:content)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-1\" onclick=\"toggle(1);\">\n                            <li class=\"post-context-line\">\n                                <code>      @attachment = attributes.fetch(:attachment, nil)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @user_id = attributes.fetch(:user_id)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @errors = []\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def self.fetch_by_hashtag(attributes)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      search = &#x27;#&#x27; + attributes[:hashtag].to_s\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info app\">\n                        <code>C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;app&#x2F;models&#x2F;post.rb</code> in\n                        <code>\n                            <strong>initialize</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-2\"\n                  onclick=\"toggle(2);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>class Post\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_accessor :id, :content, :attachment, :user_id\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    attr_reader :errors\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(attributes)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @id = attributes.fetch(:id, Nanoid.generate(size:11))\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"2\"\n                  onclick=\"toggle(2);\">\n                            <li class=\"context-line\" id=\"context-2\">\n                                <code>      @content = attributes.fetch(:content)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-2\" onclick=\"toggle(2);\">\n                            <li class=\"post-context-line\">\n                                <code>      @attachment = attributes.fetch(:attachment, nil)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @user_id = attributes.fetch(:user_id)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @errors = []\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def self.fetch_by_hashtag(attributes)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      search = &#x27;#&#x27; + attributes[:hashtag].to_s\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info app\">\n                        <code>C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;app&#x2F;controllers&#x2F;post.rb</code> in\n                        <code>\n                            <strong>new</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"18\"\n                  class=\"pre-context\" id=\"pre-3\"\n                  onclick=\"toggle(3);\">\n                            <li class=\"pre-context-line\">\n                                <code>      status 200\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      body response.to_json\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    post &quot;&#x2F;posts&quot; do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      params = JSON.parse(request.body.read, symbolize_names: true)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    \n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"25\" class=\"context\" id=\"3\"\n                  onclick=\"toggle(3);\">\n                            <li class=\"context-line\" id=\"context-3\">\n                                <code>      post = Post.new(params)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"post-context\"\n                  id=\"post-3\" onclick=\"toggle(3);\">\n                            <li class=\"post-context-line\">\n                                <code>      response = post.save\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      content_type :json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      status 201\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      body response.to_json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  \n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info app\">\n                        <code>C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;app&#x2F;controllers&#x2F;post.rb</code> in\n                        <code>\n                            <strong>block in &lt;class:PostsController&gt;</strong>\n                        </code>\n                    </li>\n                    <li class=\"code app\">\n                        <ol start=\"18\"\n                  class=\"pre-context\" id=\"pre-4\"\n                  onclick=\"toggle(4);\">\n                            <li class=\"pre-context-line\">\n                                <code>      status 200\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      body response.to_json\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  \n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    post &quot;&#x2F;posts&quot; do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      params = JSON.parse(request.body.read, symbolize_names: true)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    \n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"25\" class=\"context\" id=\"4\"\n                  onclick=\"toggle(4);\">\n                            <li class=\"context-line\" id=\"context-4\">\n                                <code>      post = Post.new(params)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"post-context\"\n                  id=\"post-4\" onclick=\"toggle(4);\">\n                            <li class=\"post-context-line\">\n                                <code>      response = post.save\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      content_type :json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      status 201\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      body response.to_json\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  \n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1668\"\n                  class=\"pre-context\" id=\"pre-5\"\n                  onclick=\"toggle(5);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        pattern                 = compile(path, route_mustermann_opts)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        method_name             = &quot;#{verb} #{path}&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unbound_method          = generate_method(method_name, &amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        conditions, @conditions = @conditions, []\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        wrapper                 = block.arity != 0 ?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call(*p) } :\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1675\" class=\"context\" id=\"5\"\n                  onclick=\"toggle(5);\">\n                            <li class=\"context-line\" id=\"context-5\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1676\" class=\"post-context\"\n                  id=\"post-5\" onclick=\"toggle(5);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [ pattern, conditions, wrapper ]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def compile(path, route_mustermann_opts = {})\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        Mustermann.new(path, **mustermann_opts.merge(route_mustermann_opts))\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in compile!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1668\"\n                  class=\"pre-context\" id=\"pre-6\"\n                  onclick=\"toggle(6);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        pattern                 = compile(path, route_mustermann_opts)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        method_name             = &quot;#{verb} #{path}&quot;\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unbound_method          = generate_method(method_name, &amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        conditions, @conditions = @conditions, []\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        wrapper                 = block.arity != 0 ?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call(*p) } :\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1675\" class=\"context\" id=\"6\"\n                  onclick=\"toggle(6);\">\n                            <li class=\"context-line\" id=\"context-6\">\n                                <code>          proc { |a, p| unbound_method.bind(a).call }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1676\" class=\"post-context\"\n                  id=\"post-6\" onclick=\"toggle(6);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [ pattern, conditions, wrapper ]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def compile(path, route_mustermann_opts = {})\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        Mustermann.new(path, **mustermann_opts.merge(route_mustermann_opts))\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block (3 levels) in route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1006\"\n                  class=\"pre-context\" id=\"pre-7\"\n                  onclick=\"toggle(7);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        routes.each do |pattern, conditions, block|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1013\" class=\"context\" id=\"7\"\n                  onclick=\"toggle(7);\">\n                            <li class=\"context-line\" id=\"context-7\">\n                                <code>            route_eval { block[*args] }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1014\" class=\"post-context\"\n                  id=\"post-7\" onclick=\"toggle(7);\">\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          # don&#x27;t wipe out pass_block in superclass\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          pass_block = returned_pass_block if returned_pass_block\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route_eval</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1025\"\n                  class=\"pre-context\" id=\"pre-8\"\n                  onclick=\"toggle(8);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      route_eval(&amp;pass_block) if pass_block\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      route_missing\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run a route block and throw :halt with the result.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route_eval\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1032\" class=\"context\" id=\"8\"\n                  onclick=\"toggle(8);\">\n                            <li class=\"context-line\" id=\"context-8\">\n                                <code>      throw :halt, yield</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1033\" class=\"post-context\"\n                  id=\"post-8\" onclick=\"toggle(8);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # If the current request matches pattern and conditions, fill params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # with keys and call the given block.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Revert params afterwards.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Returns pass block.\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block (2 levels) in route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1006\"\n                  class=\"pre-context\" id=\"pre-9\"\n                  onclick=\"toggle(9);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        routes.each do |pattern, conditions, block|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1013\" class=\"context\" id=\"9\"\n                  onclick=\"toggle(9);\">\n                            <li class=\"context-line\" id=\"context-9\">\n                                <code>            route_eval { block[*args] }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1014\" class=\"post-context\"\n                  id=\"post-9\" onclick=\"toggle(9);\">\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          # don&#x27;t wipe out pass_block in superclass\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          pass_block = returned_pass_block if returned_pass_block\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in process_route</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1054\"\n                  class=\"pre-context\" id=\"pre-10\"\n                  onclick=\"toggle(10);\">\n                            <li class=\"pre-context-line\">\n                                <code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values += params.values.flatten\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      catch(:pass) do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1061\" class=\"context\" id=\"10\"\n                  onclick=\"toggle(10);\">\n                            <li class=\"context-line\" id=\"context-10\">\n                                <code>        block ? block[self, values] : yield(self, values)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1062\" class=\"post-context\"\n                  id=\"post-10\" onclick=\"toggle(10);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env[&#x27;sinatra.error.params&#x27;] = @params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      raise\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      params ||= {}\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      params.each { |k, _| @params.delete(k) } unless @env[&#x27;sinatra.error.params&#x27;]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1052\"\n                  class=\"pre-context\" id=\"pre-11\"\n                  onclick=\"toggle(11);\">\n                            <li class=\"pre-context-line\">\n                                <code>        captures           = pattern.match(route).captures.map { |c| URI_INSTANCE.unescape(c) if c }\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values            += captures\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values += params.values.flatten\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1059\" class=\"context\" id=\"11\"\n                  onclick=\"toggle(11);\">\n                            <li class=\"context-line\" id=\"context-11\">\n                                <code>      catch(:pass) do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1060\" class=\"post-context\"\n                  id=\"post-11\" onclick=\"toggle(11);\">\n                            <li class=\"post-context-line\">\n                                <code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        block ? block[self, values] : yield(self, values)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env[&#x27;sinatra.error.params&#x27;] = @params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      raise\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>process_route</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1052\"\n                  class=\"pre-context\" id=\"pre-12\"\n                  onclick=\"toggle(12);\">\n                            <li class=\"pre-context-line\">\n                                <code>        captures           = pattern.match(route).captures.map { |c| URI_INSTANCE.unescape(c) if c }\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values            += captures\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @params[:captures] = force_encoding(captures) unless captures.nil? || captures.empty?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        values += params.values.flatten\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1059\" class=\"context\" id=\"12\"\n                  onclick=\"toggle(12);\">\n                            <li class=\"context-line\" id=\"context-12\">\n                                <code>      catch(:pass) do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1060\" class=\"post-context\"\n                  id=\"post-12\" onclick=\"toggle(12);\">\n                            <li class=\"post-context-line\">\n                                <code>        conditions.each { |c| throw :pass if c.bind(self).call == false }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        block ? block[self, values] : yield(self, values)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env[&#x27;sinatra.error.params&#x27;] = @params\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      raise\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1004\"\n                  class=\"pre-context\" id=\"pre-13\"\n                  onclick=\"toggle(13);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run routes defined on the class and all superclasses.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        routes.each do |pattern, conditions, block|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1011\" class=\"context\" id=\"13\"\n                  onclick=\"toggle(13);\">\n                            <li class=\"context-line\" id=\"context-13\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1012\" class=\"post-context\"\n                  id=\"post-13\" onclick=\"toggle(13);\">\n                            <li class=\"post-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            route_eval { block[*args] }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          # don&#x27;t wipe out pass_block in superclass\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          pass_block = returned_pass_block if returned_pass_block\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>each</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1001\"\n                  class=\"pre-context\" id=\"pre-14\"\n                  onclick=\"toggle(14);\">\n                            <li class=\"pre-context-line\">\n                                <code>        yield result if block_given?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run routes defined on the class and all superclasses.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1008\" class=\"context\" id=\"14\"\n                  onclick=\"toggle(14);\">\n                            <li class=\"context-line\" id=\"context-14\">\n                                <code>        routes.each do |pattern, conditions, block|</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1009\" class=\"post-context\"\n                  id=\"post-14\" onclick=\"toggle(14);\">\n                            <li class=\"post-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            route_eval { block[*args] }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1001\"\n                  class=\"pre-context\" id=\"pre-15\"\n                  onclick=\"toggle(15);\">\n                            <li class=\"pre-context-line\">\n                                <code>        yield result if block_given?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run routes defined on the class and all superclasses.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route!(base = settings, pass_block = nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if routes = base.routes[@request.request_method]\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1008\" class=\"context\" id=\"15\"\n                  onclick=\"toggle(15);\">\n                            <li class=\"context-line\" id=\"context-15\">\n                                <code>        routes.each do |pattern, conditions, block|</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1009\" class=\"post-context\"\n                  id=\"post-15\" onclick=\"toggle(15);\">\n                            <li class=\"post-context-line\">\n                                <code>          @response.delete_header(&#x27;Content-Type&#x27;) unless @pinned_response\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          returned_pass_block = process_route(pattern, conditions) do |*args|\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            env[&#x27;sinatra.route&#x27;] = &quot;#{@request.request_method} #{pattern}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            route_eval { block[*args] }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in dispatch!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1122\"\n                  class=\"pre-context\" id=\"pre-16\"\n                  onclick=\"toggle(16);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      invoke do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        filter! :before do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @pinned_response = !@response[&#x27;Content-Type&#x27;].nil?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1129\" class=\"context\" id=\"16\"\n                  onclick=\"toggle(16);\">\n                            <li class=\"context-line\" id=\"context-16\">\n                                <code>        route!</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1130\" class=\"post-context\"\n                  id=\"post-16\" onclick=\"toggle(16);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      invoke { handle_exception!(boom) }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      begin\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-17\"\n                  onclick=\"toggle(17);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"17\"\n                  onclick=\"toggle(17);\">\n                            <li class=\"context-line\" id=\"context-17\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-17\" onclick=\"toggle(17);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-18\"\n                  onclick=\"toggle(18);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"18\"\n                  onclick=\"toggle(18);\">\n                            <li class=\"context-line\" id=\"context-18\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-18\" onclick=\"toggle(18);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-19\"\n                  onclick=\"toggle(19);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"19\"\n                  onclick=\"toggle(19);\">\n                            <li class=\"context-line\" id=\"context-19\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-19\" onclick=\"toggle(19);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>dispatch!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1117\"\n                  class=\"pre-context\" id=\"pre-20\"\n                  onclick=\"toggle(20);\">\n                            <li class=\"pre-context-line\">\n                                <code>      # Avoid passing frozen string in force_encoding\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params.merge!(@request.params).each do |key, val|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        next unless val.respond_to?(:force_encoding)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        val = val.dup if val.frozen?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @params[key] = force_encoding(val)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1124\" class=\"context\" id=\"20\"\n                  onclick=\"toggle(20);\">\n                            <li class=\"context-line\" id=\"context-20\">\n                                <code>      invoke do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1125\" class=\"post-context\"\n                  id=\"post-20\" onclick=\"toggle(20);\">\n                            <li class=\"post-context-line\">\n                                <code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        filter! :before do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          @pinned_response = !@response[&#x27;Content-Type&#x27;].nil?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        route!\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in call!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"932\"\n                  class=\"pre-context\" id=\"pre-21\"\n                  onclick=\"toggle(21);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      template_cache.clear if settings.reload_templates\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"939\" class=\"context\" id=\"21\"\n                  onclick=\"toggle(21);\">\n                            <li class=\"context-line\" id=\"context-21\">\n                                <code>      invoke { dispatch! }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"940\" class=\"post-context\"\n                  id=\"post-21\" onclick=\"toggle(21);\">\n                            <li class=\"post-context-line\">\n                                <code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unless @response[&#x27;Content-Type&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type body[0].content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        elsif default = settings.default_content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type default\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-22\"\n                  onclick=\"toggle(22);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"22\"\n                  onclick=\"toggle(22);\">\n                            <li class=\"context-line\" id=\"context-22\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-22\" onclick=\"toggle(22);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-23\"\n                  onclick=\"toggle(23);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"23\"\n                  onclick=\"toggle(23);\">\n                            <li class=\"context-line\" id=\"context-23\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-23\" onclick=\"toggle(23);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-24\"\n                  onclick=\"toggle(24);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"24\"\n                  onclick=\"toggle(24);\">\n                            <li class=\"context-line\" id=\"context-24\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-24\" onclick=\"toggle(24);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"932\"\n                  class=\"pre-context\" id=\"pre-25\"\n                  onclick=\"toggle(25);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      template_cache.clear if settings.reload_templates\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"939\" class=\"context\" id=\"25\"\n                  onclick=\"toggle(25);\">\n                            <li class=\"context-line\" id=\"context-25\">\n                                <code>      invoke { dispatch! }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"940\" class=\"post-context\"\n                  id=\"post-25\" onclick=\"toggle(25);\">\n                            <li class=\"post-context-line\">\n                                <code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unless @response[&#x27;Content-Type&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type body[0].content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        elsif default = settings.default_content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type default\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"922\"\n                  class=\"pre-context\" id=\"pre-26\"\n                  onclick=\"toggle(26);\">\n                            <li class=\"pre-context-line\">\n                                <code>      @template_cache = Tilt::Cache.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @pinned_response = nil # whether a before! filter pinned the content-type\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      yield self if block_given?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Rack call interface.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"929\" class=\"context\" id=\"26\"\n                  onclick=\"toggle(26);\">\n                            <li class=\"context-line\" id=\"context-26\">\n                                <code>      dup.call!(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"930\" class=\"post-context\"\n                  id=\"post-26\" onclick=\"toggle(26);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-27\"\n                  onclick=\"toggle(27);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Options:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # xss_mode:: How the browser should prevent the attack (default: :block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class XSSHeader &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"18\" class=\"context\" id=\"27\"\n                  onclick=\"toggle(27);\">\n                            <li class=\"context-line\" id=\"context-27\">\n                                <code>        status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"19\" class=\"post-context\"\n                  id=\"post-27\" onclick=\"toggle(27);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"9\"\n                  class=\"pre-context\" id=\"pre-28\"\n                  onclick=\"toggle(28);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class PathTraversal &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        path_was         = env[&quot;PATH_INFO&quot;]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"16\" class=\"context\" id=\"28\"\n                  onclick=\"toggle(28);\">\n                            <li class=\"context-line\" id=\"context-28\">\n                                <code>        app.call env</code>\n                            </li>\n                        </ol>\n                        <ol start=\"17\" class=\"post-context\"\n                  id=\"post-28\" onclick=\"toggle(28);\">\n                            <li class=\"post-context-line\">\n                                <code>      ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = path_was\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def cleanup(path)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        encoding = path.encoding\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        dot   = &#x27;.&#x27;.encode(encoding)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"19\"\n                  class=\"pre-context\" id=\"pre-29\"\n                  onclick=\"toggle(29);\">\n                            <li class=\"pre-context-line\">\n                                <code>    class JsonCsrf &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :allow_if =&gt; nil\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      alias react deny\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        request               = Request.new(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"context\" id=\"29\"\n                  onclick=\"toggle(29);\">\n                            <li class=\"context-line\" id=\"context-29\">\n                                <code>        status, headers, body = app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"27\" class=\"post-context\"\n                  id=\"post-29\" onclick=\"toggle(29);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if has_vector?(request, headers)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          warn env, &quot;attack prevented by #{self.class}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          react_and_close(env, body) or [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          [status, headers, body]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-30\"\n                  onclick=\"toggle(30);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"30\"\n                  onclick=\"toggle(30);\">\n                            <li class=\"context-line\" id=\"context-30\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-30\" onclick=\"toggle(30);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-31\"\n                  onclick=\"toggle(31);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"31\"\n                  onclick=\"toggle(31);\">\n                            <li class=\"context-line\" id=\"context-31\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-31\" onclick=\"toggle(31);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-32\"\n                  onclick=\"toggle(32);\">\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options.to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"31\" class=\"context\" id=\"32\"\n                  onclick=\"toggle(32);\">\n                            <li class=\"context-line\" id=\"context-32\">\n                                <code>        status, headers, body        = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"32\" class=\"post-context\"\n                  id=\"post-32\" onclick=\"toggle(32);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;null_logger.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-33\"\n                  onclick=\"toggle(33);\">\n                            <li class=\"pre-context-line\">\n                                <code>  class NullLogger\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_LOGGER] = self\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"33\"\n                  onclick=\"toggle(33);\">\n                            <li class=\"context-line\" id=\"context-33\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-33\" onclick=\"toggle(33);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def info(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def debug(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def warn(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def error(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def fatal(progname = nil, &amp;block); end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"5\"\n                  class=\"pre-context\" id=\"pre-34\"\n                  onclick=\"toggle(34);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # all other requests unchanged.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class Head\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"context\" id=\"34\"\n                  onclick=\"toggle(34);\">\n                            <li class=\"context-line\" id=\"context-34\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"13\" class=\"post-context\"\n                  id=\"post-34\" onclick=\"toggle(34);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if env[REQUEST_METHOD] == HEAD\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status, headers, Rack::BodyProxy.new([]) do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            body.close if body.respond_to? :close\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"15\"\n                  class=\"pre-context\" id=\"pre-35\"\n                  onclick=\"toggle(35);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def @@eats_errors.puts(*) end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"22\" class=\"context\" id=\"35\"\n                  onclick=\"toggle(35);\">\n                            <li class=\"context-line\" id=\"context-35\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"post-context\"\n                  id=\"post-35\" onclick=\"toggle(35);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if prefers_plain_text?(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        content_type = &quot;text&#x2F;plain&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body = dump_exception(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"209\"\n                  class=\"pre-context\" id=\"pre-36\"\n                  onclick=\"toggle(36);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # Some Rack handlers (Rainbows!) implement an extended body object protocol, however,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # This middleware will detect an extended body object and will make sure it reaches the\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # handler directly. We do this here, so our middleware and middleware set up by the app will\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # still be able to run.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class ExtendedRack &lt; Struct.new(:app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"216\" class=\"context\" id=\"36\"\n                  onclick=\"toggle(36);\">\n                            <li class=\"context-line\" id=\"context-36\">\n                                <code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code>\n                            </li>\n                        </ol>\n                        <ol start=\"217\" class=\"post-context\"\n                  id=\"post-36\" onclick=\"toggle(36);\">\n                            <li class=\"post-context-line\">\n                                <code>      return result unless callback and async?(*result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      after_response { callback.call result }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      setup_close(env, *result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      throw :async\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1984\"\n                  class=\"pre-context\" id=\"pre-37\"\n                  onclick=\"toggle(37);\">\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def helpers\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @instance\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1991\" class=\"context\" id=\"37\"\n                  onclick=\"toggle(37);\">\n                            <li class=\"context-line\" id=\"context-37\">\n                                <code>      @stack.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1992\" class=\"post-context\"\n                  id=\"post-37\" onclick=\"toggle(37);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def inspect\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>forward</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"979\"\n                  class=\"pre-context\" id=\"pre-38\"\n                  onclick=\"toggle(38);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def pass(&amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      throw :pass, block\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Forward the request to the downstream app -- middleware only.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def forward\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      fail &quot;downstream app not set&quot; unless @app.respond_to? :call\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"986\" class=\"context\" id=\"38\"\n                  onclick=\"toggle(38);\">\n                            <li class=\"context-line\" id=\"context-38\">\n                                <code>      status, headers, body = @app.call env</code>\n                            </li>\n                        </ol>\n                        <ol start=\"987\" class=\"post-context\"\n                  id=\"post-38\" onclick=\"toggle(38);\">\n                            <li class=\"post-context-line\">\n                                <code>      @response.status = status\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @response.body = body\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @response.headers.merge! headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      nil\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route_missing</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1071\"\n                  class=\"pre-context\" id=\"pre-39\"\n                  onclick=\"toggle(39);\">\n                            <li class=\"pre-context-line\">\n                                <code>    # No matching route was found or all routes passed. The default\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # implementation is to forward the request downstream when running\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # as middleware (@app is non-nil); when no downstream app is set, raise\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # a NotFound exception. Subclasses can override this method to perform\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # custom route miss logic.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def route_missing\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if @app\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1078\" class=\"context\" id=\"39\"\n                  onclick=\"toggle(39);\">\n                            <li class=\"context-line\" id=\"context-39\">\n                                <code>        forward</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1079\" class=\"post-context\"\n                  id=\"post-39\" onclick=\"toggle(39);\">\n                            <li class=\"post-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        raise NotFound, &quot;#{request.request_method} #{request.path_info}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Attempt to serve static files from public directory. Throws :halt when\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # a matching file is found, returns nil otherwise.\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1020\"\n                  class=\"pre-context\" id=\"pre-40\"\n                  onclick=\"toggle(40);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # Run routes defined in superclass.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if base.superclass.respond_to?(:routes)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        return route!(base.superclass, pass_block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      route_eval(&amp;pass_block) if pass_block\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1027\" class=\"context\" id=\"40\"\n                  onclick=\"toggle(40);\">\n                            <li class=\"context-line\" id=\"context-40\">\n                                <code>      route_missing</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1028\" class=\"post-context\"\n                  id=\"post-40\" onclick=\"toggle(40);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Run a route block and throw :halt with the result.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def route_eval\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      throw :halt, yield\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>route!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1016\"\n                  class=\"pre-context\" id=\"pre-41\"\n                  onclick=\"toggle(41);\">\n                            <li class=\"pre-context-line\">\n                                <code>          # don&#x27;t wipe out pass_block in superclass\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          pass_block = returned_pass_block if returned_pass_block\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # Run routes defined in superclass.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      if base.superclass.respond_to?(:routes)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1023\" class=\"context\" id=\"41\"\n                  onclick=\"toggle(41);\">\n                            <li class=\"context-line\" id=\"context-41\">\n                                <code>        return route!(base.superclass, pass_block)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1024\" class=\"post-context\"\n                  id=\"post-41\" onclick=\"toggle(41);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      route_eval(&amp;pass_block) if pass_block\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      route_missing\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Run a route block and throw :halt with the result.\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in dispatch!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1122\"\n                  class=\"pre-context\" id=\"pre-42\"\n                  onclick=\"toggle(42);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      invoke do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        filter! :before do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @pinned_response = !@response[&#x27;Content-Type&#x27;].nil?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1129\" class=\"context\" id=\"42\"\n                  onclick=\"toggle(42);\">\n                            <li class=\"context-line\" id=\"context-42\">\n                                <code>        route!</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1130\" class=\"post-context\"\n                  id=\"post-42\" onclick=\"toggle(42);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      invoke { handle_exception!(boom) }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      begin\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        filter! :after unless env[&#x27;sinatra.static_file&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-43\"\n                  onclick=\"toggle(43);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"43\"\n                  onclick=\"toggle(43);\">\n                            <li class=\"context-line\" id=\"context-43\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-43\" onclick=\"toggle(43);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-44\"\n                  onclick=\"toggle(44);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"44\"\n                  onclick=\"toggle(44);\">\n                            <li class=\"context-line\" id=\"context-44\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-44\" onclick=\"toggle(44);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-45\"\n                  onclick=\"toggle(45);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"45\"\n                  onclick=\"toggle(45);\">\n                            <li class=\"context-line\" id=\"context-45\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-45\" onclick=\"toggle(45);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>dispatch!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1117\"\n                  class=\"pre-context\" id=\"pre-46\"\n                  onclick=\"toggle(46);\">\n                            <li class=\"pre-context-line\">\n                                <code>      # Avoid passing frozen string in force_encoding\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params.merge!(@request.params).each do |key, val|\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        next unless val.respond_to?(:force_encoding)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        val = val.dup if val.frozen?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @params[key] = force_encoding(val)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"1124\" class=\"context\" id=\"46\"\n                  onclick=\"toggle(46);\">\n                            <li class=\"context-line\" id=\"context-46\">\n                                <code>      invoke do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1125\" class=\"post-context\"\n                  id=\"post-46\" onclick=\"toggle(46);\">\n                            <li class=\"post-context-line\">\n                                <code>        static! if settings.static? &amp;&amp; (request.get? || request.head?)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        filter! :before do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          @pinned_response = !@response[&#x27;Content-Type&#x27;].nil?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        route!\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    rescue ::Exception =&gt; boom\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in call!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"932\"\n                  class=\"pre-context\" id=\"pre-47\"\n                  onclick=\"toggle(47);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      template_cache.clear if settings.reload_templates\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"939\" class=\"context\" id=\"47\"\n                  onclick=\"toggle(47);\">\n                            <li class=\"context-line\" id=\"context-47\">\n                                <code>      invoke { dispatch! }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"940\" class=\"post-context\"\n                  id=\"post-47\" onclick=\"toggle(47);\">\n                            <li class=\"post-context-line\">\n                                <code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unless @response[&#x27;Content-Type&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type body[0].content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        elsif default = settings.default_content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type default\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-48\"\n                  onclick=\"toggle(48);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"48\"\n                  onclick=\"toggle(48);\">\n                            <li class=\"context-line\" id=\"context-48\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-48\" onclick=\"toggle(48);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>catch</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-49\"\n                  onclick=\"toggle(49);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"49\"\n                  onclick=\"toggle(49);\">\n                            <li class=\"context-line\" id=\"context-49\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-49\" onclick=\"toggle(49);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>invoke</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1094\"\n                  class=\"pre-context\" id=\"pre-50\"\n                  onclick=\"toggle(50);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.static_file&#x27;] = path\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      cache_control(*settings.static_cache_control) if settings.static_cache_control?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      send_file path, options.merge(:disposition =&gt; nil)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Run the block with &#x27;throw :halt&#x27; support and apply result to the response.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def invoke\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1101\" class=\"context\" id=\"50\"\n                  onclick=\"toggle(50);\">\n                            <li class=\"context-line\" id=\"context-50\">\n                                <code>      res = catch(:halt) { yield }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1102\" class=\"post-context\"\n                  id=\"post-50\" onclick=\"toggle(50);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      res = [res] if Integer === res or String === res\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if Array === res and Integer === res.first\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        res = res.dup\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        status(res.shift)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body(res.pop)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers(*res)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call!</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"932\"\n                  class=\"pre-context\" id=\"pre-51\"\n                  onclick=\"toggle(51);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      template_cache.clear if settings.reload_templates\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <ol start=\"939\" class=\"context\" id=\"51\"\n                  onclick=\"toggle(51);\">\n                            <li class=\"context-line\" id=\"context-51\">\n                                <code>      invoke { dispatch! }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"940\" class=\"post-context\"\n                  id=\"post-51\" onclick=\"toggle(51);\">\n                            <li class=\"post-context-line\">\n                                <code>      invoke { error_block!(response.status) } unless @env[&#x27;sinatra.error&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      unless @response[&#x27;Content-Type&#x27;]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if Array === body &amp;&amp; body[0].respond_to?(:content_type)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type body[0].content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        elsif default = settings.default_content_type\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          content_type default\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"922\"\n                  class=\"pre-context\" id=\"pre-52\"\n                  onclick=\"toggle(52);\">\n                            <li class=\"pre-context-line\">\n                                <code>      @template_cache = Tilt::Cache.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @pinned_response = nil # whether a before! filter pinned the content-type\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      yield self if block_given?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Rack call interface.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"929\" class=\"context\" id=\"52\"\n                  onclick=\"toggle(52);\">\n                            <li class=\"context-line\" id=\"context-52\">\n                                <code>      dup.call!(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"930\" class=\"post-context\"\n                  id=\"post-52\" onclick=\"toggle(52);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def call!(env) # :nodoc:\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @env      = env\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @params   = IndifferentHash.new\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @request  = Request.new(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @response = Response.new\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-53\"\n                  onclick=\"toggle(53);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Options:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # xss_mode:: How the browser should prevent the attack (default: :block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class XSSHeader &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"18\" class=\"context\" id=\"53\"\n                  onclick=\"toggle(53);\">\n                            <li class=\"context-line\" id=\"context-53\">\n                                <code>        status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"19\" class=\"post-context\"\n                  id=\"post-53\" onclick=\"toggle(53);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"9\"\n                  class=\"pre-context\" id=\"pre-54\"\n                  onclick=\"toggle(54);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class PathTraversal &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        path_was         = env[&quot;PATH_INFO&quot;]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"16\" class=\"context\" id=\"54\"\n                  onclick=\"toggle(54);\">\n                            <li class=\"context-line\" id=\"context-54\">\n                                <code>        app.call env</code>\n                            </li>\n                        </ol>\n                        <ol start=\"17\" class=\"post-context\"\n                  id=\"post-54\" onclick=\"toggle(54);\">\n                            <li class=\"post-context-line\">\n                                <code>      ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = path_was\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def cleanup(path)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        encoding = path.encoding\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        dot   = &#x27;.&#x27;.encode(encoding)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"19\"\n                  class=\"pre-context\" id=\"pre-55\"\n                  onclick=\"toggle(55);\">\n                            <li class=\"pre-context-line\">\n                                <code>    class JsonCsrf &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :allow_if =&gt; nil\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      alias react deny\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        request               = Request.new(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"context\" id=\"55\"\n                  onclick=\"toggle(55);\">\n                            <li class=\"context-line\" id=\"context-55\">\n                                <code>        status, headers, body = app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"27\" class=\"post-context\"\n                  id=\"post-55\" onclick=\"toggle(55);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if has_vector?(request, headers)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          warn env, &quot;attack prevented by #{self.class}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          react_and_close(env, body) or [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          [status, headers, body]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-56\"\n                  onclick=\"toggle(56);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"56\"\n                  onclick=\"toggle(56);\">\n                            <li class=\"context-line\" id=\"context-56\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-56\" onclick=\"toggle(56);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-57\"\n                  onclick=\"toggle(57);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"57\"\n                  onclick=\"toggle(57);\">\n                            <li class=\"context-line\" id=\"context-57\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-57\" onclick=\"toggle(57);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-58\"\n                  onclick=\"toggle(58);\">\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options.to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"31\" class=\"context\" id=\"58\"\n                  onclick=\"toggle(58);\">\n                            <li class=\"context-line\" id=\"context-58\">\n                                <code>        status, headers, body        = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"32\" class=\"post-context\"\n                  id=\"post-58\" onclick=\"toggle(58);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;null_logger.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-59\"\n                  onclick=\"toggle(59);\">\n                            <li class=\"pre-context-line\">\n                                <code>  class NullLogger\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_LOGGER] = self\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"59\"\n                  onclick=\"toggle(59);\">\n                            <li class=\"context-line\" id=\"context-59\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-59\" onclick=\"toggle(59);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def info(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def debug(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def warn(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def error(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def fatal(progname = nil, &amp;block); end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"5\"\n                  class=\"pre-context\" id=\"pre-60\"\n                  onclick=\"toggle(60);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # all other requests unchanged.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class Head\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"context\" id=\"60\"\n                  onclick=\"toggle(60);\">\n                            <li class=\"context-line\" id=\"context-60\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"13\" class=\"post-context\"\n                  id=\"post-60\" onclick=\"toggle(60);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if env[REQUEST_METHOD] == HEAD\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status, headers, Rack::BodyProxy.new([]) do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            body.close if body.respond_to? :close\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"15\"\n                  class=\"pre-context\" id=\"pre-61\"\n                  onclick=\"toggle(61);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def @@eats_errors.puts(*) end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"22\" class=\"context\" id=\"61\"\n                  onclick=\"toggle(61);\">\n                            <li class=\"context-line\" id=\"context-61\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"post-context\"\n                  id=\"post-61\" onclick=\"toggle(61);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if prefers_plain_text?(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        content_type = &quot;text&#x2F;plain&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body = dump_exception(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"209\"\n                  class=\"pre-context\" id=\"pre-62\"\n                  onclick=\"toggle(62);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # Some Rack handlers (Rainbows!) implement an extended body object protocol, however,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # This middleware will detect an extended body object and will make sure it reaches the\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # handler directly. We do this here, so our middleware and middleware set up by the app will\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # still be able to run.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class ExtendedRack &lt; Struct.new(:app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"216\" class=\"context\" id=\"62\"\n                  onclick=\"toggle(62);\">\n                            <li class=\"context-line\" id=\"context-62\">\n                                <code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code>\n                            </li>\n                        </ol>\n                        <ol start=\"217\" class=\"post-context\"\n                  id=\"post-62\" onclick=\"toggle(62);\">\n                            <li class=\"post-context-line\">\n                                <code>      return result unless callback and async?(*result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      after_response { callback.call result }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      setup_close(env, *result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      throw :async\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1984\"\n                  class=\"pre-context\" id=\"pre-63\"\n                  onclick=\"toggle(63);\">\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def helpers\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @instance\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1991\" class=\"context\" id=\"63\"\n                  onclick=\"toggle(63);\">\n                            <li class=\"context-line\" id=\"context-63\">\n                                <code>      @stack.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1992\" class=\"post-context\"\n                  id=\"post-63\" onclick=\"toggle(63);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def inspect\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;xss_header.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"11\"\n                  class=\"pre-context\" id=\"pre-64\"\n                  onclick=\"toggle(64);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Options:\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # xss_mode:: How the browser should prevent the attack (default: :block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class XSSHeader &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :xss_mode =&gt; :block, :nosniff =&gt; true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"18\" class=\"context\" id=\"64\"\n                  onclick=\"toggle(64);\">\n                            <li class=\"context-line\" id=\"context-64\">\n                                <code>        status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"19\" class=\"post-context\"\n                  id=\"post-64\" onclick=\"toggle(64);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-XSS-Protection&#x27;]       ||= &quot;1; mode=#{options[:xss_mode]}&quot; if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Content-Type-Options&#x27;] ||= &#x27;nosniff&#x27;                       if options[:nosniff]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;path_traversal.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"9\"\n                  class=\"pre-context\" id=\"pre-65\"\n                  onclick=\"toggle(65);\">\n                            <li class=\"pre-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Unescapes &#x27;&#x2F;&#x27; and &#x27;.&#x27;, expands +path_info+.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # Thus &lt;tt&gt;GET &#x2F;foo&#x2F;%2e%2e%2fbar&lt;&#x2F;tt&gt; becomes &lt;tt&gt;GET &#x2F;bar&lt;&#x2F;tt&gt;.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    class PathTraversal &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        path_was         = env[&quot;PATH_INFO&quot;]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = cleanup path_was if path_was &amp;&amp; !path_was.empty?\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"16\" class=\"context\" id=\"65\"\n                  onclick=\"toggle(65);\">\n                            <li class=\"context-line\" id=\"context-65\">\n                                <code>        app.call env</code>\n                            </li>\n                        </ol>\n                        <ol start=\"17\" class=\"post-context\"\n                  id=\"post-65\" onclick=\"toggle(65);\">\n                            <li class=\"post-context-line\">\n                                <code>      ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        env[&quot;PATH_INFO&quot;] = path_was\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def cleanup(path)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        encoding = path.encoding\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        dot   = &#x27;.&#x27;.encode(encoding)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;json_csrf.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"19\"\n                  class=\"pre-context\" id=\"pre-66\"\n                  onclick=\"toggle(66);\">\n                            <li class=\"pre-context-line\">\n                                <code>    class JsonCsrf &lt; Base\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      default_options :allow_if =&gt; nil\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      alias react deny\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        request               = Request.new(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"26\" class=\"context\" id=\"66\"\n                  onclick=\"toggle(66);\">\n                            <li class=\"context-line\" id=\"context-66\">\n                                <code>        status, headers, body = app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"27\" class=\"post-context\"\n                  id=\"post-66\" onclick=\"toggle(66);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        if has_vector?(request, headers)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          warn env, &quot;attack prevented by #{self.class}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          react_and_close(env, body) or [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          [status, headers, body]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-67\"\n                  onclick=\"toggle(67);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"67\"\n                  onclick=\"toggle(67);\">\n                            <li class=\"context-line\" id=\"context-67\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-67\" onclick=\"toggle(67);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-68\"\n                  onclick=\"toggle(68);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        unless accepts? env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          instrument env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          result = react env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"68\"\n                  onclick=\"toggle(68);\">\n                            <li class=\"context-line\" id=\"context-68\">\n                                <code>        result or app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-68\" onclick=\"toggle(68);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def react(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result = send(options[:reaction], env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        result if Array === result and result.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-protection-2.1.0&#x2F;lib&#x2F;rack&#x2F;protection&#x2F;frame_options.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"24\"\n                  class=\"pre-context\" id=\"pre-69\"\n                  onclick=\"toggle(69);\">\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options]\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options = options[:frame_options].to_s.upcase unless frame_options.respond_to? :to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          frame_options.to_str\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"31\" class=\"context\" id=\"69\"\n                  onclick=\"toggle(69);\">\n                            <li class=\"context-line\" id=\"context-69\">\n                                <code>        status, headers, body        = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"32\" class=\"post-context\"\n                  id=\"post-69\" onclick=\"toggle(69);\">\n                            <li class=\"post-context-line\">\n                                <code>        headers[&#x27;X-Frame-Options&#x27;] ||= frame_options if html? headers\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;null_logger.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"4\"\n                  class=\"pre-context\" id=\"pre-70\"\n                  onclick=\"toggle(70);\">\n                            <li class=\"pre-context-line\">\n                                <code>  class NullLogger\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_LOGGER] = self\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"11\" class=\"context\" id=\"70\"\n                  onclick=\"toggle(70);\">\n                            <li class=\"context-line\" id=\"context-70\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"post-context\"\n                  id=\"post-70\" onclick=\"toggle(70);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def info(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def debug(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def warn(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def error(progname = nil, &amp;block); end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def fatal(progname = nil, &amp;block); end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;head.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"5\"\n                  class=\"pre-context\" id=\"pre-71\"\n                  onclick=\"toggle(71);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # all other requests unchanged.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class Head\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"12\" class=\"context\" id=\"71\"\n                  onclick=\"toggle(71);\">\n                            <li class=\"context-line\" id=\"context-71\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"13\" class=\"post-context\"\n                  id=\"post-71\" onclick=\"toggle(71);\">\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if env[REQUEST_METHOD] == HEAD\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        [\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status, headers, Rack::BodyProxy.new([]) do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            body.close if body.respond_to? :close\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ]\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;show_exceptions.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"15\"\n                  class=\"pre-context\" id=\"pre-72\"\n                  onclick=\"toggle(72);\">\n                            <li class=\"pre-context-line\">\n                                <code>    def @@eats_errors.puts(*) end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"22\" class=\"context\" id=\"72\"\n                  onclick=\"toggle(72);\">\n                            <li class=\"context-line\" id=\"context-72\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"post-context\"\n                  id=\"post-72\" onclick=\"toggle(72);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      errors, env[&quot;rack.errors&quot;] = env[&quot;rack.errors&quot;], @@eats_errors\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if prefers_plain_text?(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        content_type = &quot;text&#x2F;plain&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        body = dump_exception(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      else\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"209\"\n                  class=\"pre-context\" id=\"pre-73\"\n                  onclick=\"toggle(73);\">\n                            <li class=\"pre-context-line\">\n                                <code>  # Some Rack handlers (Rainbows!) implement an extended body object protocol, however,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # some middleware (namely Rack::Lint) will break it by not mirroring the methods in question.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # This middleware will detect an extended body object and will make sure it reaches the\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # handler directly. We do this here, so our middleware and middleware set up by the app will\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  # still be able to run.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>  class ExtendedRack &lt; Struct.new(:app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"216\" class=\"context\" id=\"73\"\n                  onclick=\"toggle(73);\">\n                            <li class=\"context-line\" id=\"context-73\">\n                                <code>      result, callback = app.call(env), env[&#x27;async.callback&#x27;]</code>\n                            </li>\n                        </ol>\n                        <ol start=\"217\" class=\"post-context\"\n                  id=\"post-73\" onclick=\"toggle(73);\">\n                            <li class=\"post-context-line\">\n                                <code>      return result unless callback and async?(*result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      after_response { callback.call result }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      setup_close(env, *result)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      throw :async\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1984\"\n                  class=\"pre-context\" id=\"pre-74\"\n                  onclick=\"toggle(74);\">\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def helpers\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @instance\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1991\" class=\"context\" id=\"74\"\n                  onclick=\"toggle(74);\">\n                            <li class=\"context-line\" id=\"context-74\">\n                                <code>      @stack.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1992\" class=\"post-context\"\n                  id=\"post-74\" onclick=\"toggle(74);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def inspect\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      &quot;#&lt;#{@instance.class} app_file=#{settings.app_file.inspect}&gt;&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>block in call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1535\"\n                  class=\"pre-context\" id=\"pre-75\"\n                  onclick=\"toggle(75);\">\n                            <li class=\"pre-context-line\">\n                                <code>        setup_default_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        setup_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder.run app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1542\" class=\"context\" id=\"75\"\n                  onclick=\"toggle(75);\">\n                            <li class=\"context-line\" id=\"context-75\">\n                                <code>        synchronize { prototype.call(env) }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1543\" class=\"post-context\"\n                  id=\"post-75\" onclick=\"toggle(75);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # Like Kernel#caller but excluding certain magic entries and without\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def caller_files\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        cleaned_caller(1).flatten\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>synchronize</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1762\"\n                  class=\"pre-context\" id=\"pre-76\"\n                  onclick=\"toggle(76);\">\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @@mutex = Mutex.new\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def synchronize(&amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        if lock?\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @@mutex.synchronize(&amp;block)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        else\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1769\" class=\"context\" id=\"76\"\n                  onclick=\"toggle(76);\">\n                            <li class=\"context-line\" id=\"context-76\">\n                                <code>          yield</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1770\" class=\"post-context\"\n                  id=\"post-76\" onclick=\"toggle(76);\">\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # used for deprecation warnings\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def warn(message)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        super message + &quot;\\n\\tfrom #{cleaned_caller.first.join(&#x27;:&#x27;)}&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"1535\"\n                  class=\"pre-context\" id=\"pre-77\"\n                  onclick=\"toggle(77);\">\n                            <li class=\"pre-context-line\">\n                                <code>        setup_default_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        setup_middleware builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder.run app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        builder\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1542\" class=\"context\" id=\"77\"\n                  onclick=\"toggle(77);\">\n                            <li class=\"context-line\" id=\"context-77\">\n                                <code>        synchronize { prototype.call(env) }</code>\n                            </li>\n                        </ol>\n                        <ol start=\"1543\" class=\"post-context\"\n                  id=\"post-77\" onclick=\"toggle(77);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # Like Kernel#caller but excluding certain magic entries and without\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      # line &#x2F; method information; the resulting array contains filenames only.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      def caller_files\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        cleaned_caller(1).flatten\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;tempfile_reaper.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"8\"\n                  class=\"pre-context\" id=\"pre-78\"\n                  onclick=\"toggle(78);\">\n                            <li class=\"pre-context-line\">\n                                <code>  class TempfileReaper\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_TEMPFILES] ||= []\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"15\" class=\"context\" id=\"78\"\n                  onclick=\"toggle(78);\">\n                            <li class=\"context-line\" id=\"context-78\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"16\" class=\"post-context\"\n                  id=\"post-78\" onclick=\"toggle(78);\">\n                            <li class=\"post-context-line\">\n                                <code>      body_proxy = BodyProxy.new(body) do\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        env[RACK_TEMPFILES].each(&amp;:close!) unless env[RACK_TEMPFILES].nil?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      [status, headers, body_proxy]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in\n                        <code>\n                            <strong>_call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"43\"\n                  class=\"pre-context\" id=\"pre-79\"\n                  onclick=\"toggle(79);\">\n                            <li class=\"pre-context-line\">\n                                <code>      assert(&quot;No env given&quot;) { env }\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      check_env env\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_INPUT] = InputWrapper.new(env[RACK_INPUT])\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      env[RACK_ERRORS] = ErrorWrapper.new(env[RACK_ERRORS])\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      ## and returns an Array of exactly three values:\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"50\" class=\"context\" id=\"79\"\n                  onclick=\"toggle(79);\">\n                            <li class=\"context-line\" id=\"context-79\">\n                                <code>      ary = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"51\" class=\"post-context\"\n                  id=\"post-79\" onclick=\"toggle(79);\">\n                            <li class=\"post-context-line\">\n                                <code>      assert(&quot;response #{ary.inspect} is not an Array , but #{ary.class}&quot;) {\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ary.kind_of? Array\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      assert(&quot;response array #{ary.inspect} has #{ary.size} elements instead of 3&quot;) {\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        ary.size == 3\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;lint.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"31\"\n                  class=\"pre-context\" id=\"pre-80\"\n                  onclick=\"toggle(80);\">\n                            <li class=\"pre-context-line\">\n                                <code>    ## after to catch all mistakes.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    ## = Rack applications\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    ## A Rack application is a Ruby object (not a class) that\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    ## responds to +call+.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env = nil)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"38\" class=\"context\" id=\"80\"\n                  onclick=\"toggle(80);\">\n                            <li class=\"context-line\" id=\"context-80\">\n                                <code>      dup._call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"39\" class=\"post-context\"\n                  id=\"post-80\" onclick=\"toggle(80);\">\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def _call(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      ## It takes exactly one argument, the *environment*\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      assert(&quot;No env given&quot;) { env }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      check_env env\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;show_exceptions.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"16\"\n                  class=\"pre-context\" id=\"pre-81\"\n                  onclick=\"toggle(81);\">\n                            <li class=\"pre-context-line\">\n                                <code>    CONTEXT = 7\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"23\" class=\"context\" id=\"81\"\n                  onclick=\"toggle(81);\">\n                            <li class=\"context-line\" id=\"context-81\">\n                                <code>      @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"24\" class=\"post-context\"\n                  id=\"post-81\" onclick=\"toggle(81);\">\n                            <li class=\"post-context-line\">\n                                <code>    rescue StandardError, LoadError, SyntaxError =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      exception_string = dump_exception(e)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      env[RACK_ERRORS].puts(exception_string)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      env[RACK_ERRORS].flush\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if accepts_html?(env)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;common_logger.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"31\"\n                  class=\"pre-context\" id=\"pre-82\"\n                  onclick=\"toggle(82);\">\n                            <li class=\"pre-context-line\">\n                                <code>    # will not be logged, so if exception handling middleware are used,\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # they should be loaded after this middleware.  Additionally, because\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # the logging happens after the request body has been fully sent, any\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # exceptions raised during the sending of the response body will\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    # cause the request not to be logged.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      began_at = Utils.clock_time\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"38\" class=\"context\" id=\"82\"\n                  onclick=\"toggle(82);\">\n                            <li class=\"context-line\" id=\"context-82\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"39\" class=\"post-context\"\n                  id=\"post-82\" onclick=\"toggle(82);\">\n                            <li class=\"post-context-line\">\n                                <code>      headers = Utils::HeaderHash[headers]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      body = BodyProxy.new(body) { log(env, status, headers, began_at) }\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      [status, headers, body]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    private\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info framework\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;sinatra-2.1.0&#x2F;lib&#x2F;sinatra&#x2F;base.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code framework\">\n                        <ol start=\"246\"\n                  class=\"pre-context\" id=\"pre-83\"\n                  onclick=\"toggle(83);\">\n                            <li class=\"pre-context-line\">\n                                <code>      env[&#x27;sinatra.commonlogger&#x27;] ? @app.call(env) : super\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    superclass.class_eval do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      alias call_without_check call unless method_defined? :call_without_check\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[&#x27;sinatra.commonlogger&#x27;] = true\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"253\" class=\"context\" id=\"83\"\n                  onclick=\"toggle(83);\">\n                            <li class=\"context-line\" id=\"context-83\">\n                                <code>        call_without_check(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"254\" class=\"post-context\"\n                  id=\"post-83\" onclick=\"toggle(83);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  class BadRequest &lt; TypeError #:nodoc:\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def http_status; 400 end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>  end\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;content_length.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"10\"\n                  class=\"pre-context\" id=\"pre-84\"\n                  onclick=\"toggle(84);\">\n                            <li class=\"pre-context-line\">\n                                <code>    include Rack::Utils\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def initialize(app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def call(env)\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"17\" class=\"context\" id=\"84\"\n                  onclick=\"toggle(84);\">\n                            <li class=\"context-line\" id=\"context-84\">\n                                <code>      status, headers, body = @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"18\" class=\"post-context\"\n                  id=\"post-84\" onclick=\"toggle(84);\">\n                            <li class=\"post-context-line\">\n                                <code>      headers = HeaderHash[headers]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      if !STATUS_WITH_NO_ENTITY_BODY.key?(status.to_i) &amp;&amp;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>         !headers[CONTENT_LENGTH] &amp;&amp;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>         !headers[TRANSFER_ENCODING]\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        obody = body\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;configuration.rb</code> in\n                        <code>\n                            <strong>call</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"242\"\n                  class=\"pre-context\" id=\"pre-85\"\n                  onclick=\"toggle(85);\">\n                            <li class=\"pre-context-line\">\n                                <code>      def initialize(config, app)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @config = config\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        @app = app\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      def call(env)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        env[Const::PUMA_CONFIG] = @config\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"249\" class=\"context\" id=\"85\"\n                  onclick=\"toggle(85);\">\n                            <li class=\"context-line\" id=\"context-85\">\n                                <code>        @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"250\" class=\"post-context\"\n                  id=\"post-85\" onclick=\"toggle(85);\">\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Indicate if there is a properly configured app\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    #\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    def app_configured?\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @options[:app] || File.exist?(rackup)\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;request.rb</code> in\n                        <code>\n                            <strong>block in handle_request</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"70\"\n                  class=\"pre-context\" id=\"pre-86\"\n                  onclick=\"toggle(86);\">\n                            <li class=\"pre-context-line\">\n                                <code>      # array, we will invoke them when the request is done.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      after_reply = env[RACK_AFTER_REPLY] = []\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      begin\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        begin\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          status, headers, res_body = @thread_pool.with_force_shutdown do\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"77\" class=\"context\" id=\"86\"\n                  onclick=\"toggle(86);\">\n                            <li class=\"context-line\" id=\"context-86\">\n                                <code>            @app.call(env)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"78\" class=\"post-context\"\n                  id=\"post-86\" onclick=\"toggle(86);\">\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          return :async if client.hijacked\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status = status.to_i\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          if status == -1\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;thread_pool.rb</code> in\n                        <code>\n                            <strong>with_force_shutdown</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"331\"\n                  class=\"pre-context\" id=\"pre-87\"\n                  onclick=\"toggle(87);\">\n                            <li class=\"pre-context-line\">\n                                <code>    # provided block if the thread is forced to shutdown during execution.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>    def with_force_shutdown\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      t = Thread.current\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      @shutdown_mutex.synchronize do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        raise ForceShutdown if @force_shutdown\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        t[:with_force_shutdown] = true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"338\" class=\"context\" id=\"87\"\n                  onclick=\"toggle(87);\">\n                            <li class=\"context-line\" id=\"context-87\">\n                                <code>      yield</code>\n                            </li>\n                        </ol>\n                        <ol start=\"339\" class=\"post-context\"\n                  id=\"post-87\" onclick=\"toggle(87);\">\n                            <li class=\"post-context-line\">\n                                <code>    ensure\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      t[:with_force_shutdown] = false\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Tell all threads in the pool to exit and wait for them to finish.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Wait +timeout+ seconds then raise +ForceShutdown+ in remaining threads.\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>    # Next, wait an extra +grace+ seconds then force-kill remaining threads.\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;request.rb</code> in\n                        <code>\n                            <strong>handle_request</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"69\"\n                  class=\"pre-context\" id=\"pre-88\"\n                  onclick=\"toggle(88);\">\n                            <li class=\"pre-context-line\">\n                                <code>      # A rack extension. If the app writes #call&#x27;ables to this\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      # array, we will invoke them when the request is done.\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      #\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      after_reply = env[RACK_AFTER_REPLY] = []\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>      begin\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        begin\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"76\" class=\"context\" id=\"88\"\n                  onclick=\"toggle(88);\">\n                            <li class=\"context-line\" id=\"context-88\">\n                                <code>          status, headers, res_body = @thread_pool.with_force_shutdown do</code>\n                            </li>\n                        </ol>\n                        <ol start=\"77\" class=\"post-context\"\n                  id=\"post-88\" onclick=\"toggle(88);\">\n                            <li class=\"post-context-line\">\n                                <code>            @app.call(env)\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          return :async if client.hijacked\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          status = status.to_i\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;server.rb</code> in\n                        <code>\n                            <strong>process_client</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"431\"\n                  class=\"pre-context\" id=\"pre-89\"\n                  onclick=\"toggle(89);\">\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        with_force_shutdown(client) do\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          client.finish(@first_data_timeout)\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>        while true\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          @requests_count += 1\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"438\" class=\"context\" id=\"89\"\n                  onclick=\"toggle(89);\">\n                            <li class=\"context-line\" id=\"context-89\">\n                                <code>          case handle_request(client, buffer, requests + 1)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"439\" class=\"post-context\"\n                  id=\"post-89\" onclick=\"toggle(89);\">\n                            <li class=\"post-context-line\">\n                                <code>          when false\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            break\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          when :async\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            close_socket = false\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            break\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          when true\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            buffer.reset\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                    <li class=\"frame-info system\">\n                        <code>C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;puma-5.3.2&#x2F;lib&#x2F;puma&#x2F;thread_pool.rb</code> in\n                        <code>\n                            <strong>block in spawn_thread</strong>\n                        </code>\n                    </li>\n                    <li class=\"code system\">\n                        <ol start=\"138\"\n                  class=\"pre-context\" id=\"pre-90\"\n                  onclick=\"toggle(90);\">\n                            <li class=\"pre-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          if @clean_thread_locals\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>            ThreadPool.clean_thread_locals\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"pre-context-line\">\n                                <code>          begin\n</code>\n                            </li>\n                        </ol>\n                        <ol start=\"145\" class=\"context\" id=\"90\"\n                  onclick=\"toggle(90);\">\n                            <li class=\"context-line\" id=\"context-90\">\n                                <code>            @out_of_band_pending = true if block.call(work, *extra)</code>\n                            </li>\n                        </ol>\n                        <ol start=\"146\" class=\"post-context\"\n                  id=\"post-90\" onclick=\"toggle(90);\">\n                            <li class=\"post-context-line\">\n                                <code>          rescue Exception =&gt; e\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>            STDERR.puts &quot;Error reached top of thread-pool: #{e.message} (#{e.class})&quot;\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>          end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>        end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      end\n</code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code></code>\n                            </li>\n                            <li class=\"post-context-line\">\n                                <code>      @workers &lt;&lt; th\n</code>\n                            </li>\n                        </ol>\n                        <div class=\"clear\"></div>\n                    </li>\n                </ul>\n            </div>\n            <!-- /BACKTRACE -->\n            <div id=\"get\">\n                <h3 id=\"get-info\">GET</h3>\n                <p class=\"no-data\">No GET data.</p>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /GET -->\n            <div id=\"post\">\n                <h3 id=\"post-info\">POST</h3>\n                <p class=\"no-data\">No POST data.</p>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /POST -->\n            <div id=\"cookies\">\n                <h3 id=\"cookie-info\">COOKIES</h3>\n                <p class=\"no-data\">No cookie data.</p>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /COOKIES -->\n            <div id=\"rack\">\n                <h3 id=\"env-info\">Rack ENV</h3>\n                <table class=\"req\">\n                    <tr>\n                        <th>Variable</th>\n                        <th>Value</th>\n                    </tr>\n                    <tr>\n                        <td>CONTENT_LENGTH</td>\n                        <td class=\"code\">\n                            <div>26</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>CONTENT_TYPE</td>\n                        <td class=\"code\">\n                            <div>application&#x2F;json</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>GATEWAY_INTERFACE</td>\n                        <td class=\"code\">\n                            <div>CGI&#x2F;1.2</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_ACCEPT</td>\n                        <td class=\"code\">\n                            <div>*&#x2F;*</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_ACCEPT_ENCODING</td>\n                        <td class=\"code\">\n                            <div>gzip, deflate, br</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_CONNECTION</td>\n                        <td class=\"code\">\n                            <div>keep-alive</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_HOST</td>\n                        <td class=\"code\">\n                            <div>localhost:4567</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_POSTMAN_TOKEN</td>\n                        <td class=\"code\">\n                            <div>25d5caae-075f-4699-9c5b-1317e1f17348</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_USER_AGENT</td>\n                        <td class=\"code\">\n                            <div>PostmanRuntime&#x2F;7.28.3</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>HTTP_VERSION</td>\n                        <td class=\"code\">\n                            <div>HTTP&#x2F;1.1</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>PATH_INFO</td>\n                        <td class=\"code\">\n                            <div>&#x2F;posts</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>QUERY_STRING</td>\n                        <td class=\"code\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REMOTE_ADDR</td>\n                        <td class=\"code\">\n                            <div>::1</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REQUEST_METHOD</td>\n                        <td class=\"code\">\n                            <div>POST</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REQUEST_PATH</td>\n                        <td class=\"code\">\n                            <div>&#x2F;posts</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>REQUEST_URI</td>\n                        <td class=\"code\">\n                            <div>&#x2F;posts</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SCRIPT_NAME</td>\n                        <td class=\"code\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_NAME</td>\n                        <td class=\"code\">\n                            <div>localhost</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_PORT</td>\n                        <td class=\"code\">\n                            <div>4567</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_PROTOCOL</td>\n                        <td class=\"code\">\n                            <div>HTTP&#x2F;1.1</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>SERVER_SOFTWARE</td>\n                        <td class=\"code\">\n                            <div>puma 5.3.2 Sweetnighter</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>puma.config</td>\n                        <td class=\"code\">\n                            <div>#&lt;Puma::Configuration:0x0000022b605f9ff0 @options=#&lt;Puma::UserFileDefaultOptions:0x0000022b605f9a50 @user_options={:environment=&gt;&quot;development&quot;, :pid=&gt;nil, :Port=&gt;&quot;4567&quot;, :Host=&gt;&quot;localhost&quot;, :AccessLog=&gt;[], :config=&gt;&quot;C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;config.ru&quot;, :binds=&gt;[&quot;tcp:&#x2F;&#x2F;localhost:4567&quot;], :app=&gt;#&lt;Rack::ContentLength:0x0000022b600e6860 @app=#&lt;Rack::CommonLogger:0x0000022b600e6c98 @app=#&lt;Rack::ShowExceptions:0x0000022b5fc2de90 @app=#&lt;Rack::Lint:0x0000022b5fc2ede0 @app=#&lt;Rack::TempfileReaper:0x0000022b5fc2f060 @app=MainApp&gt;, @content_length=nil&gt;&gt;, @logger=#&lt;IO:&lt;STDERR&gt;&gt;&gt;&gt;}, @file_options={}, @default_options={:min_threads=&gt;0, :max_threads=&gt;5, :log_requests=&gt;false, :debug=&gt;false, :binds=&gt;[&quot;tcp:&#x2F;&#x2F;0.0.0.0:9292&quot;], :workers=&gt;0, :silence_single_worker_warning=&gt;false, :mode=&gt;:http, :worker_timeout=&gt;60, :worker_boot_timeout=&gt;60, :worker_shutdown_timeout=&gt;30, :remote_address=&gt;:socket, :tag=&gt;&quot;final-project&quot;, :environment=&gt;&quot;development&quot;, :rackup=&gt;&quot;config.ru&quot;, :logger=&gt;#&lt;IO:&lt;STDOUT&gt;&gt;, :persistent_timeout=&gt;20, :first_data_timeout=&gt;30, :raise_exception_on_sigterm=&gt;true, :max_fast_inline=&gt;10, :io_selector_backend=&gt;:auto, :mutate_stdout_and_stderr_to_sync_on_write=&gt;true, :Verbose=&gt;false, :Silent=&gt;false, :preload_app=&gt;false}&gt;, @plugins=#&lt;Puma::PluginLoader:0x0000022b605f9988 @instances=[]&gt;, @user_dsl=#&lt;Puma::DSL:0x0000022b605f9898 @config=#&lt;Puma::Configuration:0x0000022b605f9ff0 ...&gt;, @options={:environment=&gt;&quot;development&quot;, :pid=&gt;nil, :Port=&gt;&quot;4567&quot;, :Host=&gt;&quot;localhost&quot;, :AccessLog=&gt;[], :config=&gt;&quot;C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;config.ru&quot;, :binds=&gt;[&quot;tcp:&#x2F;&#x2F;localhost:4567&quot;], :app=&gt;#&lt;Rack::ContentLength:0x0000022b600e6860 @app=#&lt;Rack::CommonLogger:0x0000022b600e6c98 @app=#&lt;Rack::ShowExceptions:0x0000022b5fc2de90 @app=#&lt;Rack::Lint:0x0000022b5fc2ede0 @app=#&lt;Rack::TempfileReaper:0x0000022b5fc2f060 @app=MainApp&gt;, @content_length=nil&gt;&gt;, @logger=#&lt;IO:&lt;STDERR&gt;&gt;&gt;&gt;}, @plugins=[]&gt;, @file_dsl=#&lt;Puma::DSL:0x0000022b605f97d0 @config=#&lt;Puma::Configuration:0x0000022b605f9ff0 ...&gt;, @options={}, @plugins=[]&gt;, @default_dsl=#&lt;Puma::DSL:0x0000022b605f9730 @config=#&lt;Puma::Configuration:0x0000022b605f9ff0 ...&gt;, @options={:min_threads=&gt;0, :max_threads=&gt;5, :log_requests=&gt;false, :debug=&gt;false, :binds=&gt;[&quot;tcp:&#x2F;&#x2F;0.0.0.0:9292&quot;], :workers=&gt;0, :silence_single_worker_warning=&gt;false, :mode=&gt;:http, :worker_timeout=&gt;60, :worker_boot_timeout=&gt;60, :worker_shutdown_timeout=&gt;30, :remote_address=&gt;:socket, :tag=&gt;&quot;final-project&quot;, :environment=&gt;&quot;development&quot;, :rackup=&gt;&quot;config.ru&quot;, :logger=&gt;#&lt;IO:&lt;STDOUT&gt;&gt;, :persistent_timeout=&gt;20, :first_data_timeout=&gt;30, :raise_exception_on_sigterm=&gt;true, :max_fast_inline=&gt;10, :io_selector_backend=&gt;:auto, :mutate_stdout_and_stderr_to_sync_on_write=&gt;true, :Verbose=&gt;false, :Silent=&gt;false, :preload_app=&gt;false}, @plugins=[]&gt;&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>puma.request_body_wait</td>\n                        <td class=\"code\">\n                            <div>0</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>puma.socket</td>\n                        <td class=\"code\">\n                            <div>#&lt;TCPSocket:fd 10, AF_INET6, ::1, 4567&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.after_reply</td>\n                        <td class=\"code\">\n                            <div>[]</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.errors</td>\n                        <td class=\"code\">\n                            <div>#&lt;Object:0x0000022b5f6d5ce0&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.hijack</td>\n                        <td class=\"code\">\n                            <div>#&lt;Proc:0x0000022b6097eea0 C:&#x2F;Ruby30-x64&#x2F;lib&#x2F;ruby&#x2F;gems&#x2F;3.0.0&#x2F;gems&#x2F;rack-2.2.3&#x2F;lib&#x2F;rack&#x2F;lint.rb:567&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.hijack?</td>\n                        <td class=\"code\">\n                            <div>true</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.input</td>\n                        <td class=\"code\">\n                            <div>#&lt;Rack::Lint::InputWrapper:0x0000022b6097ed88 @input=#&lt;StringIO:0x0000022b606daf78&gt;&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.logger</td>\n                        <td class=\"code\">\n                            <div>#&lt;Rack::NullLogger:0x0000022b607b0df8 @app=#&lt;Rack::Protection::FrameOptions:0x0000022b607b0ec0 @app=#&lt;Rack::Protection::HttpOrigin:0x0000022b607b0f88 @app=#&lt;Rack::Protection::IPSpoofing:0x0000022b607b1028 @app=#&lt;Rack::Protection::JsonCsrf:0x0000022b607b10f0 @app=#&lt;Rack::Protection::PathTraversal:0x0000022b607b1190 @app=#&lt;Rack::Protection::XSSHeader:0x0000022b607b1258 @app=#&lt;PostsController:0x0000022b607b2220 @default_layout=:layout, @preferred_extension=nil, @app=#&lt;CommentsController app_file=&quot;C:&#x2F;Users&#x2F;Win10&#x2F;projects&#x2F;final-project&#x2F;app&#x2F;controllers&#x2F;comment.rb&quot;&gt;, @template_cache=#&lt;Tilt::Cache:0x0000022b607b2180 @cache={}&gt;, @pinned_response=nil&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :xss_mode=&gt;:block, :nosniff=&gt;true, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :allow_if=&gt;nil, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :allow_if=&gt;nil, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;, @options={:reaction=&gt;:drop_session, :logging=&gt;true, :message=&gt;&quot;Forbidden&quot;, :encryptor=&gt;Digest::SHA1, :session_key=&gt;&quot;rack.session&quot;, :status=&gt;403, :allow_empty_referrer=&gt;true, :report_key=&gt;&quot;protection.failed&quot;, :html_types=&gt;[&quot;text&#x2F;html&quot;, &quot;application&#x2F;xhtml&quot;, &quot;text&#x2F;xml&quot;, &quot;application&#x2F;xml&quot;], :frame_options=&gt;:sameorigin, :img_src=&gt;&quot;&#x27;self&#x27; data:&quot;, :font_src=&gt;&quot;&#x27;self&#x27;&quot;, :without_session=&gt;true}&gt;&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.multiprocess</td>\n                        <td class=\"code\">\n                            <div>false</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.multithread</td>\n                        <td class=\"code\">\n                            <div>true</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.request.cookie_hash</td>\n                        <td class=\"code\">\n                            <div>{}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.request.query_hash</td>\n                        <td class=\"code\">\n                            <div>{}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.request.query_string</td>\n                        <td class=\"code\">\n                            <div></div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.run_once</td>\n                        <td class=\"code\">\n                            <div>false</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.tempfiles</td>\n                        <td class=\"code\">\n                            <div>[]</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.url_scheme</td>\n                        <td class=\"code\">\n                            <div>http</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>rack.version</td>\n                        <td class=\"code\">\n                            <div>[1, 6]</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.accept</td>\n                        <td class=\"code\">\n                            <div>[#&lt;Sinatra::Request::AcceptEntry:0x0000022b60986880 @entry=&quot;*&#x2F;*&quot;, @type=&quot;*&#x2F;*&quot;, @params={}, @q=1.0&gt;]</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.commonlogger</td>\n                        <td class=\"code\">\n                            <div>true</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.error</td>\n                        <td class=\"code\">\n                            <div>#&lt;KeyError: key not found: :content&gt;</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.error.params</td>\n                        <td class=\"code\">\n                            <div>{}</div>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>sinatra.route</td>\n                        <td class=\"code\">\n                            <div>POST &#x2F;posts</div>\n                        </td>\n                    </tr>\n                </table>\n                <div class=\"clear\"></div>\n            </div>\n            <!-- /RACK ENV -->\n            <p id=\"explanation\">You're seeing this error because you have\nenabled the \n                <code>show_exceptions</code> setting.\n            </p>\n        </div>\n        <!-- /WRAP -->\n  \n    </body>\n</html>"
						}
					]
				},
				{
					"name": "Show All Comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/comments",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"comments"
							]
						}
					},
					"response": [
						{
							"name": "Show All Comments",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}:{{port}}/comments",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"comments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "281"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"4sVSB78Cse3\",\n        \"content\": \"Lorem Ipsum #hashtag\",\n        \"created_at\": \"2021-08-19 16:41:44 +0700\",\n        \"user_id\": \"KJ9dvQSAm2V\",\n        \"post_id\": \"B_SfrhJRsvH\"\n    },\n    {\n        \"id\": \"heq9CehT651\",\n        \"content\": \"Lorem Ipsum 2 \",\n        \"created_at\": \"2021-08-19 16:42:34 +0700\",\n        \"user_id\": \"KJ9dvQSAm2V\",\n        \"post_id\": \"vcvK4CxgqPU\"\n    }\n]"
						}
					]
				},
				{
					"name": "Show Comments based on hashtag Copy",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/comments/hashtag",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"comments",
								"hashtag"
							]
						}
					},
					"response": [
						{
							"name": "Show Comments based on hashtag Copy",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}:{{port}}/comments/hashtag",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"comments",
										"hashtag"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "144"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"4sVSB78Cse3\",\n        \"content\": \"Lorem Ipsum #hashtag\",\n        \"created_at\": \"2021-08-19 16:41:44 +0700\",\n        \"user_id\": \"KJ9dvQSAm2V\",\n        \"post_id\": \"B_SfrhJRsvH\"\n    }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Trending (Run all folder above)",
			"item": [
				{
					"name": "Show trending hashtag last 24 hours",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{host}}:{{port}}/trendings",
							"protocol": "http",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"trendings"
							]
						}
					},
					"response": [
						{
							"name": "Show trending hashtag last 24 hours",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{host}}:{{port}}/trendings",
									"protocol": "http",
									"host": [
										"{{host}}"
									],
									"port": "{{port}}",
									"path": [
										"trendings"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Length",
									"value": "13"
								}
							],
							"cookie": [],
							"body": "{\n    \"hashtag\": 2\n}"
						}
					]
				}
			]
		}
	]
}